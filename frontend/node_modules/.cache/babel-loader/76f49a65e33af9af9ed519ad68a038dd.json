{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\SideNav.js\";\nimport { Drawer, IconButton, List } from '@material-ui/core';\nimport { ChevronLeft } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  }\n}));\nexport default function SideNav() {\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"permanent\",\n    classes: {\n      paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n    },\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbarIcon,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleDrawerClose,\n        children: /*#__PURE__*/_jsxDEV(ChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: mainListItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_c = SideNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNav\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/SideNav.js"],"names":["Drawer","IconButton","List","ChevronLeft","drawerWidth","useStyles","makeStyles","theme","toolbarIcon","display","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","appBarSpacer","content","flexGrow","height","overflow","SideNav","handleDrawerClose","setOpen","paper","clsx","classes","open","mainListItems"],"mappings":";AACA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAIA,MAAMC,WAAW,GAAG,GAApB;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAAEC,KAAD,KAAY;AAEvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,cAAc,EAAE,UAHL;AAIXC,IAAAA,OAAO,EAAE,OAJE;AAKX,OAAGL,KAAK,CAACM,MAAN,CAAaC;AALL,GAF0B;AAUvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,KAAK,EAAEd,WAHI;AAIXe,IAAAA,UAAU,EAAEZ,KAAK,CAACa,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEf,KAAK,CAACa,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAEjB,KAAK,CAACa,WAAN,CAAkBI,QAAlB,CAA2BC;AAFO,KAAlC;AAJD,GAV0B;AAmBvCC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE,QADK;AAEhBR,IAAAA,UAAU,EAAEZ,KAAK,CAACa,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEf,KAAK,CAACa,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAEjB,KAAK,CAACa,WAAN,CAAkBI,QAAlB,CAA2BI;AAFO,KAAlC,CAFI;AAMhBV,IAAAA,KAAK,EAAEX,KAAK,CAACsB,OAAN,CAAc,CAAd,CANS;AAOhB,KAACtB,KAAK,CAACuB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5Bb,MAAAA,KAAK,EAAEX,KAAK,CAACsB,OAAN,CAAc,CAAd;AADqB;AAPd,GAnBqB;AA8BvCG,EAAAA,YAAY,EAAEzB,KAAK,CAACM,MAAN,CAAaC,OA9BY;AA+BvCmB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,CADH;AAEPC,IAAAA,MAAM,EAAE,OAFD;AAGPC,IAAAA,QAAQ,EAAE;AAHH;AA/B8B,CAAZ,CAAD,CAA5B;AAwCA,eAAe,SAASC,OAAT,GAAkB;AAC7B,QAAMC,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFH;;AAIA,sBACI,QAAC,MAAD;AACA,IAAA,OAAO,EAAC,WADR;AAEA,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEC,IAAI,CAACC,OAAO,CAAC3B,WAAT,EAAsB,CAAC4B,IAAD,IAASD,OAAO,CAAChB,gBAAvC;AADJ,KAFT;AAKA,IAAA,IAAI,EAAEiB,IALN;AAAA,4BAOA;AAAK,MAAA,SAAS,EAAED,OAAO,CAAClC,WAAxB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE8B,iBAArB;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPA,eAYA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAZA,eAaA,QAAC,IAAD;AAAA,gBAAOM;AAAP;AAAA;AAAA;AAAA;AAAA,YAbA,eAcA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;KAxBuBP,O","sourcesContent":["\r\nimport { Drawer, IconButton, List } from '@material-ui/core'\r\nimport { ChevronLeft } from '@material-ui/icons'\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n \r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n \r\n}));\r\n\r\n\r\nexport default function SideNav(){\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    return(\r\n        <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeft />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n     \r\n      </Drawer>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}