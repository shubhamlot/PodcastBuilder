{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\EditorFiles.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport { Button, Icon, IconButton, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { Delete } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n        speech\n      }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'block'\n  },\n  tab: {\n    listStyleType: \"none\",\n    borderRadius: \"1px\",\n    backgroundColor: \"#ede7f6\",\n    marginTop: 1,\n    marginLeft: 5,\n    fontWeight: \"bold\",\n    fontSize: \"15px\",\n    cursor: \"pointer\",\n    width: \"90%\"\n  },\n  tabhead: {\n    paddingLeft: \"10px\",\n    paddingTop: \"10px\",\n    display: \"flex\"\n  },\n  speech: {\n    fontSize: \"15px\",\n    fontWeight: \"100\",\n    marginLeft: 1\n  },\n  ul: {\n    width: \"100%\"\n  },\n  subdiv: {\n    flex: 1\n  },\n  icon: {\n    cursor: \"pointer\",\n    '&:hover': {\n      color: \"red\"\n    }\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [list, setList] = useState([]);\n  const [check, setCheck] = useState(0);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = audioList;\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    audioList = items;\n  }\n\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    } //   pollInterval: 500,\n\n  });\n  let audioList = [];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 24\n  }, this);\n\n  if (data) {\n    data.files.map(audio => {\n      audioList.push(audio);\n    });\n  }\n\n  const handleRemove = id => {\n    const newList = list.filter(list => list._id !== id);\n    setList(newList);\n  };\n\n  const handleLoad = () => {\n    let temp = [];\n    data.files.map((item, index) => {\n      temp.push(item);\n      setList(temp);\n    });\n\n    if (list === []) {\n      console.log(list);\n    } else {\n      setCheck(true);\n    }\n  };\n\n  if (!check) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoad,\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"characters\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: classes.ul,\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [list.map(({\n              _id,\n              speaker,\n              speech,\n              file\n            }, index) => {\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: _id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: classes.tab,\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.tabhead,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.subdiv,\n                      children: /*#__PURE__*/_jsxDEV(AllGuests, {\n                        params: speaker\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.speech,\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: speech\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this)\n              }, _id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this);\n            }), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(App, \"924ACoEdxIRerg27cWSMXxwpxqo=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/EditorFiles.js"],"names":["gql","useQuery","Button","Icon","IconButton","makeStyles","React","useState","DragDropContext","Droppable","Draggable","useParams","AllGuests","Delete","SHOW_FILE","useStyles","theme","box","display","tab","listStyleType","borderRadius","backgroundColor","marginTop","marginLeft","fontWeight","fontSize","cursor","width","tabhead","paddingLeft","paddingTop","speech","ul","subdiv","flex","icon","color","App","classes","list","setList","check","setCheck","handleOnDragEnd","result","destination","items","audioList","reorderedItem","splice","source","index","room","loading","err","data","variables","roomid","files","map","audio","push","handleRemove","id","newList","filter","_id","handleLoad","temp","item","console","log","provided","droppableProps","innerRef","speaker","file","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport { Button, Icon, IconButton, makeStyles } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useParams } from 'react-router';\r\nimport AllGuests from './AllGuests';\r\nimport {Delete} from '@material-ui/icons'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    box:{\r\n      display:'block'\r\n    },\r\n    tab:{\r\n      listStyleType:\"none\",\r\n      borderRadius:\"1px\",\r\n      backgroundColor:\"#ede7f6\",\r\n      marginTop:1,\r\n      marginLeft:5,\r\n      fontWeight:\"bold\",\r\n      fontSize:\"15px\",\r\n      cursor:\"pointer\",\r\n      width:\"90%\" \r\n    },\r\n    tabhead:{\r\n    paddingLeft:\"10px\",\r\n    paddingTop:\"10px\",\r\n    display:\"flex\"\r\n    },\r\n    speech:{\r\n      fontSize:\"15px\",\r\n      fontWeight:\"100\",\r\n      marginLeft:1\r\n    },\r\n    ul:{\r\n        width:\"100%\"\r\n    },\r\n    subdiv:{\r\n        flex:1\r\n    },\r\n    icon:{\r\n        \r\n        cursor:\"pointer\",\r\n        '&:hover':{\r\n            color:\"red\"\r\n        }\r\n    },\r\n\r\n\r\n}))\r\n\r\n\r\nfunction App() {\r\n \r\n\r\n  const classes = useStyles();\r\n  const [list,setList] = useState([])\r\n  const [check,setCheck] = useState(0)\r\n\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) return;\r\n\r\n    const items = audioList\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    audioList=items\r\n  }\r\n\r\n  const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n    //   pollInterval: 500,\r\n    })\r\n\r\n    let audioList =[]\r\n    if(loading) return <p>loading</p>\r\n    if(data){\r\n    \r\n    data.files.map((audio)=>{\r\n        audioList.push(audio)\r\n    })\r\n    \r\n    }\r\n    const handleRemove=(id)=>{\r\n      const newList = list.filter((list) => list._id !== id);\r\n   \r\n      setList(newList);\r\n    }\r\n \r\n    const handleLoad=()=>{\r\n      let temp =[]\r\n      data.files.map((item,index)=>{\r\n        temp.push(item)\r\n        setList(temp)\r\n      })\r\n      \r\n      if(list === []){\r\n        console.log(list)\r\n      }\r\n      else{\r\n        setCheck(true)\r\n      }\r\n      \r\n    }\r\n\r\n    if(!check){\r\n      return( <div>\r\n         <Button onClick={handleLoad}>Load</Button>\r\n       </div>)\r\n     }\r\n     else{\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          <Droppable droppableId=\"characters\">\r\n            {(provided) => (\r\n              <ul className={classes.ul} {...provided.droppableProps} ref={provided.innerRef}>\r\n                {list.map(({_id, speaker,speech,file}, index) => {\r\n                  return (\r\n                    <Draggable  key={_id} draggableId={_id} index={index}>\r\n                      {(provided) => (\r\n                        <li className={classes.tab} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <div className={classes.tabhead}>\r\n                              <div className={classes.subdiv}>\r\n                          <AllGuests params={speaker}/>\r\n                       \r\n                          </div>\r\n                         \r\n                          <div className={classes.speech}>\r\n                            {/* <AllGuests params={voice.speaker}/> */}\r\n                             \r\n                            <p >{speech}</p>\r\n                            \r\n                            </div>\r\n                            \r\n                           \r\n                          </div>\r\n                          \r\n                          \r\n                         \r\n                        </li>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n\r\n        </DragDropContext>\r\n        \r\n      \r\n    </div>\r\n  );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}