{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\AllUsers.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { Redirect, useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { FormHelperText, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  guestlist: {\n    fontSize: \"20px\",\n    textAlign: \"center\"\n  }\n});\nconst SHOW_FILE = gql`\n query listGuests($roomId:String){\n  \n    listGuests(roomId:$roomId)\n  \n }\n`;\nexport default function FS() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomId: room\n    }\n  });\n  if (loading) return null;\n  let guestList = [];\n\n  if (data) {\n    data.listGuests.map(guest => {\n      guestList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.guestlist,\n        children: [/*#__PURE__*/_jsxDEV(AllGuests, {\n          params: guest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 36\n        }, this)]\n      }, guest, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 24\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: guestList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"o2P9oX9SH5s8397WFprBFt/yLTQ=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = FS;\nconst ADD_GUEST = gql`\nmutation ($guestid:String,$roomid:String){\n  addToRoom(guestid:$guestid,roomid:$roomid)\n}\n`;\nexport function Guests(info) {\n  _s2();\n\n  const [addGuest] = useMutation(ADD_GUEST, {\n    onCompleted: () => {\n      console.log(\"added\");\n    }\n  });\n  let [found, setFound] = useState(false);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomId: info.info.room\n    }\n  });\n  if (loading) return null;\n\n  if (data) {\n    data.listGuests.map(guest => {\n      if (guest === info.info.userId) {\n        setFound(true);\n      }\n    });\n  }\n\n  if (!found) {\n    addGuest({\n      variables: {\n        guestid: info.userId,\n        room: info.room\n      }\n    });\n  }\n\n  console.log(info.info.room);\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `room:${info.room}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(Guests, \"czqfzb+Ojv2D/tLrYsCYQTroe9s=\", false, function () {\n  return [useMutation, useQuery];\n});\n\n_c2 = Guests;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FS\");\n$RefreshReg$(_c2, \"Guests\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/AllUsers.js"],"names":["React","useState","gql","useMutation","useQuery","Redirect","useParams","AllGuests","FormHelperText","makeStyles","Add","useStyles","guestlist","fontSize","textAlign","SHOW_FILE","FS","classes","room","loading","error","data","variables","roomId","guestList","listGuests","map","guest","push","ADD_GUEST","Guests","info","addGuest","onCompleted","console","log","found","setFound","userId","guestid"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useMutation, useQuery } from '@apollo/client'\r\n\r\nimport { Redirect, useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\n\r\nimport { FormHelperText, makeStyles } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  guestlist: {\r\n    fontSize:\"20px\",\r\n    textAlign:\"center\"\r\n  },\r\n});\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n query listGuests($roomId:String){\r\n  \r\n    listGuests(roomId:$roomId)\r\n  \r\n }\r\n`\r\nexport default function FS(){\r\n    const classes = useStyles();\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomId:room}\r\n    })\r\n \r\n    if (loading) return null\r\n\r\n     \r\n    let guestList = []\r\n   \r\n    \r\n    if(data){\r\n      data.listGuests.map(guest=>{\r\n        guestList.push(<div key={guest} className={classes.guestlist}>\r\n        <AllGuests params={guest}/><br></br>\r\n        </div>)\r\n      })\r\n    }\r\n    \r\n\r\n    return(\r\n      <div >\r\n        {guestList}\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ADD_GUEST = gql`\r\nmutation ($guestid:String,$roomid:String){\r\n  addToRoom(guestid:$guestid,roomid:$roomid)\r\n}\r\n`\r\n\r\nexport function Guests(info){\r\n  const [addGuest] = useMutation(ADD_GUEST,{\r\n    onCompleted:()=>{console.log(\"added\")}\r\n  })\r\n  \r\n  let [found,setFound] = useState(false)\r\n\r\n  const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n    variables: {roomId:info.info.room}\r\n  })\r\n\r\n  if (loading) return null\r\n\r\n  \r\n\r\n  if(data){\r\n    data.listGuests.map(guest=>{\r\n      if(guest === info.info.userId){\r\n        setFound(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  if(!found){\r\n    addGuest({variables:{guestid:info.userId,room:info.room}})\r\n  }\r\n  console.log(info.info.room)\r\n  return <Redirect to={`room:${info.room}`} />\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}