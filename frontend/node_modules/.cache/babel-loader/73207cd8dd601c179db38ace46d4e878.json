{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Redirect } from 'react-router';\nconst FIND_ROOM = gql`\n    query($id:String){\n        findRoom(id:$id){\n          roomID\n          roomname\n          creator\n        }\n      }\n`;\nexport default function BackInitJoinRoom(params) {\n  _s();\n\n  console.log(params);\n  const [state, setstate] = useState({\n    _isRoomFound: false,\n    room: '',\n    _isSubmitted: false\n  });\n  const room = useQuery(FIND_ROOM, {\n    variables: {\n      id: state.room\n    }\n  });\n  if (room.loading) return null;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setstate({\n      room: roomIDRef.current.value\n    });\n\n    if (room.data) {\n      setstate({\n        _isRoomFound: true,\n        _isSubmitted: true\n      });\n    }\n  };\n}\n\n_s(BackInitJoinRoom, \"gGw2j5O5JRC4qgXhJ4VYg5NGEa8=\", false, function () {\n  return [useQuery];\n});\n\n_c = BackInitJoinRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackInitJoinRoom\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/BackInitJoinRoom.js"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","createMuiTheme","makeStyles","ThemeProvider","Container","useState","gql","useQuery","Redirect","FIND_ROOM","BackInitJoinRoom","params","console","log","state","setstate","_isRoomFound","room","_isSubmitted","variables","id","loading","handleSubmit","e","preventDefault","roomIDRef","current","value","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,aAArC,QAA0D,0BAA1D;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAII,MAAMC,SAAS,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARI;AAUJ,eAAe,SAASI,gBAAT,CAA0BC,MAA1B,EAAkC;AAAA;;AAEjDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACE,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC;AAC9BW,IAAAA,YAAY,EAAC,KADiB;AAE7BC,IAAAA,IAAI,EAAC,EAFwB;AAG9BC,IAAAA,YAAY,EAAC;AAHiB,GAAD,CAAjC;AAQA,QAAMD,IAAI,GAAGV,QAAQ,CAACE,SAAD,EAAW;AAC1BU,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAACN,KAAK,CAACG;AAAV;AADe,GAAX,CAArB;AAGI,MAAGA,IAAI,CAACI,OAAR,EAAiB,OAAO,IAAP;;AAInB,QAAMC,YAAY,GAAGC,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACQ,SAAS,CAACC,OAAV,CAAkBC;AAAxB,KAAD,CAAR;;AACA,QAAGV,IAAI,CAACW,IAAR,EAAa;AACXb,MAAAA,QAAQ,CAAC;AAACC,QAAAA,YAAY,EAAC,IAAd;AAAmBE,QAAAA,YAAY,EAAC;AAAhC,OAAD,CAAR;AACD;AACJ,GAND;AAQH;;GA1BuBR,gB;UAWTH,Q;;;KAXSG,gB","sourcesContent":["import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useState} from 'react'\r\nimport {  gql, useQuery } from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\n\r\n    const FIND_ROOM = gql`\r\n    query($id:String){\r\n        findRoom(id:$id){\r\n          roomID\r\n          roomname\r\n          creator\r\n        }\r\n      }\r\n`\r\n\r\nexport default function BackInitJoinRoom(params) {\r\n\r\nconsole.log(params)\r\n  const [state,setstate] = useState({\r\n      _isRoomFound:false,\r\n       room:'',\r\n      _isSubmitted:false\r\n  })\r\n\r\n\r\n\r\n  const room = useQuery(FIND_ROOM,{\r\n        variables: {id:state.room}\r\n      })\r\n      if(room.loading) return null\r\n    \r\n  \r\n   \r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault()\r\n        setstate({room:roomIDRef.current.value})\r\n        if(room.data){\r\n          setstate({_isRoomFound:true,_isSubmitted:true})\r\n        }\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}