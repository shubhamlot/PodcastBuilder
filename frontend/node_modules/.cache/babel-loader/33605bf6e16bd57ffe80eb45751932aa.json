{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport Username from './Username';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n      }\n  }\n`; // a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\n\nexport default function FS() {\n  _s();\n\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    }\n  });\n  if (loading) return null;\n  let audio = []; // if(data.files){\n  // // data.files.map((voice)=>{\n  // //     audio.push(\n  // //     )\n  // //     }\n  // // )\n  //   }\n\n  if (!data.files) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"No files to show\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"heVWGiGxbyAlMDzxZBp9f74boxM=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","useState","gql","useQuery","Username","useParams","SHOW_FILE","FS","room","loading","error","data","variables","roomid","audio","files"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,SAAS,GAAGJ,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CAUA;;AACA,eAAe,SAASK,EAAT,GAAa;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAWH,SAAS,EAA1B;AAEA,QAAK;AAAEI,IAAAA,OAAF;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB,MAAwBR,QAAQ,CAACG,SAAD,EAAW;AAC9CM,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAACL;AAAR;AADmC,GAAX,CAArC;AAMA,MAAIC,OAAJ,EAAa,OAAO,IAAP;AAGb,MAAIK,KAAK,GAAG,EAAZ,CAZwB,CAcxB;AACA;AAEA;AAEA;AACA;AAEA;AACA;;AAEJ,MAAG,CAACH,IAAI,CAACI,KAAT,EAAgB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GAhCuBR,E;UACHF,S,EAEYF,Q;;;KAHTI,E","sourcesContent":["\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\nimport Username from './Username'\r\nimport { useParams } from 'react-router'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n      }\r\n  }\r\n`\r\n\r\n// a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\r\nexport default function FS(){\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room}\r\n    })\r\n   \r\n    \r\n   \r\n    if (loading) return null\r\n\r\n     \r\n    let audio = []\r\n\r\n    // if(data.files){\r\n    // // data.files.map((voice)=>{\r\n\r\n    // //     audio.push(\r\n       \r\n    // //     )\r\n    // //     }\r\n       \r\n    // // )\r\n    //   }\r\n    \r\nif(!data.files) return <h1>No files to show</h1>\r\n    return(\r\n      <div >\r\n        <h1>click</h1>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}