{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\EditorFiles.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n        speech\n      }\n  }\n`;\n\nfunction App() {\n  _s();\n\n  const [characters, updateCharacters] = useState([]);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    updateCharacters(items);\n  }\n\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    },\n    pollInterval: 500\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 24\n  }, this);\n\n  if (data) {\n    let audiolist = [];\n    data.files.map(audio => {\n      audiolist.push(audio);\n    });\n    updateCharacters({\n      characters: audiolist\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Final Space Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"characters\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"characters\",\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [characters.map(({\n              _id,\n              speaker,\n              speech\n            }, index) => {\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: _id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(AllGuests, {\n                    params: speaker\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this)\n              }, _id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this);\n            }), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"St6oXmIoEPLemD2WKiF26rTMTVE=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/EditorFiles.js"],"names":["gql","useQuery","React","useState","DragDropContext","Droppable","Draggable","useParams","AllGuests","SHOW_FILE","App","characters","updateCharacters","handleOnDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","room","loading","err","data","variables","roomid","pollInterval","audiolist","files","map","audio","push","provided","droppableProps","innerRef","_id","speaker","speech","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useParams } from 'react-router';\r\nimport AllGuests from './AllGuests';\r\n\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\nfunction App() {\r\n  const [characters, updateCharacters] = useState([]);\r\n\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(characters);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    updateCharacters(items);\r\n  }\r\n\r\n  const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n      pollInterval: 500,\r\n    })\r\n\r\n  \r\n    if(loading) return <p>loading</p>\r\n    if(data){\r\n    let audiolist=[]\r\n    data.files.map((audio)=>{\r\n        audiolist.push(audio)\r\n    })\r\n    updateCharacters({characters:audiolist})\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Final Space Characters</h1>\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          <Droppable droppableId=\"characters\">\r\n            {(provided) => (\r\n              <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                {characters.map(({_id, speaker,speech}, index) => {\r\n                  return (\r\n                    <Draggable key={_id} draggableId={_id} index={index}>\r\n                      {(provided) => (\r\n                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <AllGuests params={speaker}/>\r\n                        </li>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}