{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\RemoveFIlesEditor.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport { Button, Icon, IconButton, makeStyles } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { Delete, SettingsSharp } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n        speech\n      }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'block'\n  },\n  tab: {\n    listStyleType: \"none\",\n    borderRadius: \"1px\",\n    backgroundColor: \"#ede7f6\",\n    marginTop: 1,\n    marginLeft: 5,\n    fontWeight: \"bold\",\n    fontSize: \"15px\",\n    cursor: \"pointer\",\n    width: \"90%\"\n  },\n  tabhead: {\n    paddingLeft: \"10px\",\n    paddingTop: \"10px\",\n    display: \"flex\"\n  },\n  speech: {\n    fontSize: \"15px\",\n    fontWeight: \"100\",\n    marginLeft: 1\n  },\n  ul: {\n    width: \"100%\"\n  },\n  subdiv: {\n    flex: 1\n  },\n  icon: {\n    cursor: \"pointer\",\n    '&:hover': {\n      color: \"red\"\n    }\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [list, setList] = useState({\n    load: false,\n    listItem: []\n  });\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    }\n  });\n  let audiolist = []; // console.log(data)\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 22\n  }, this);\n\n  const handleLoad = () => {\n    let temp = [];\n    data.files.map((item, index) => {\n      temp.push(item);\n      setList({\n        listItem: temp\n      });\n    });\n    setList({\n      load: true\n    });\n    console.log(list);\n  };\n\n  if (!list.load) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoad,\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.ul,\n        children: list.audiolist.map(({\n          _id,\n          speaker,\n          speech,\n          file\n        }, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classes.tab,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.tabhead,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.subdiv,\n                children: [/*#__PURE__*/_jsxDEV(AllGuests, {\n                  params: speaker\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.speech,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: speech\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.icon,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(App, \"mUt5Hc6/lU+blhK8dsAXC5rNlss=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/RemoveFIlesEditor.js"],"names":["gql","useQuery","Button","Icon","IconButton","makeStyles","React","useEffect","useState","DragDropContext","Droppable","Draggable","useParams","AllGuests","Delete","SettingsSharp","SHOW_FILE","useStyles","theme","box","display","tab","listStyleType","borderRadius","backgroundColor","marginTop","marginLeft","fontWeight","fontSize","cursor","width","tabhead","paddingLeft","paddingTop","speech","ul","subdiv","flex","icon","color","App","classes","list","setList","load","listItem","room","loading","data","error","variables","roomid","audiolist","handleLoad","temp","files","map","item","index","push","console","log","_id","speaker","file"],"mappings":"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","sourcesContent":["\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport { Button, Icon, IconButton, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useParams } from 'react-router';\r\nimport AllGuests from './AllGuests';\r\nimport {Delete, SettingsSharp} from '@material-ui/icons'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    box:{\r\n      display:'block'\r\n    },\r\n    tab:{\r\n      listStyleType:\"none\",\r\n      borderRadius:\"1px\",\r\n      backgroundColor:\"#ede7f6\",\r\n      marginTop:1,\r\n      marginLeft:5,\r\n      fontWeight:\"bold\",\r\n      fontSize:\"15px\",\r\n      cursor:\"pointer\",\r\n      width:\"90%\" \r\n    },\r\n    tabhead:{\r\n    paddingLeft:\"10px\",\r\n    paddingTop:\"10px\",\r\n    display:\"flex\"\r\n    },\r\n    speech:{\r\n      fontSize:\"15px\",\r\n      fontWeight:\"100\",\r\n      marginLeft:1\r\n    },\r\n    ul:{\r\n        width:\"100%\"\r\n    },\r\n    subdiv:{\r\n        flex:1\r\n    },\r\n    icon:{\r\n        cursor:\"pointer\",\r\n        '&:hover':{\r\n            color:\"red\"\r\n        }\r\n    },\r\n\r\n\r\n}))\r\n\r\n\r\nfunction App() {\r\n \r\n  \r\n  const classes = useStyles();\r\n  const [list,setList] = useState({\r\n    load:false,\r\n    listItem:[]\r\n  })\r\n  const { room } = useParams()\r\n\r\n  const {loading,data,error} = useQuery(SHOW_FILE,{\r\n    variables:{roomid:room}\r\n  })\r\n\r\n  let audiolist =[]\r\n  // console.log(data)\r\n  if(loading) return <p>loading</p>\r\n\r\n\r\n  const handleLoad=()=>{\r\n    let temp =[]\r\n    data.files.map((item,index)=>{\r\n      temp.push(item)\r\n      setList({listItem:temp})\r\n    })\r\n    setList({load:true})\r\n    console.log(list)\r\n  }\r\n\r\n  if(!list.load){\r\n   return( <div>\r\n      <Button onClick={handleLoad}>Load</Button>\r\n    </div>)\r\n  }\r\n  else{\r\n  return (\r\n    <div className=\"App\">\r\n              <ul className={classes.ul} >\r\n                \r\n                {list.audiolist.map(({_id, speaker,speech,file}, index) => {\r\n                  return (\r\n                        <li className={classes.tab} >\r\n                          <div className={classes.tabhead}>\r\n                              <div className={classes.subdiv}>\r\n                          <AllGuests params={speaker}/>\r\n                          <div className={classes.speech}>\r\n                            {/* <AllGuests params={voice.speaker}/> */}\r\n                             \r\n                            <p >{speech}</p>\r\n                            \r\n                            </div>\r\n                          </div>\r\n                          <div className={classes.icon}>\r\n                              <IconButton >\r\n                                  <Delete/>\r\n                              </IconButton>\r\n                          </div>\r\n                          \r\n                          </div>\r\n                         \r\n                        </li>\r\n                      )\r\n                  \r\n                })}\r\n              \r\n              </ul>\r\n            \r\n\r\n      \r\n    </div>\r\n  );\r\n              }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}