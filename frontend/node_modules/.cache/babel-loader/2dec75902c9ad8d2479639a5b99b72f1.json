{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport Username from './Username';\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { ValidationContext } from 'graphql';\nimport { FormHelperText, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n      }\n  }\n`; // a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'block'\n  },\n  tab: {\n    backgroundColor: \"#eeeeee\",\n    listStyleType: \"none\",\n    borderRadius: \"10px\",\n    margin: 20,\n    fontWeight: \"bold\",\n    fontSize: \"20px\"\n  },\n  tabhead: {\n    paddingLeft: \"40px\"\n  },\n  speech: {\n    fontSize: \"18px\",\n    fontWeight: \"100\"\n  }\n}));\nexport default function FS() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 26\n  }, this);\n  let audio = [];\n\n  if (data === undefined || err) {\n    audio = [];\n  } else {\n    data.files.map(voice => {\n      audio.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.tab,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tabhead,\n          children: [/*#__PURE__*/_jsxDEV(AllGuests, {\n            params: voice.speaker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.speech,\n            children: \"Hello Rahul this is my podcast to introduce business to the students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: `http://localhost:4000/Audio/${voice.file}`,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 12\n          }, this)\n        }, voice._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, voice._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.box,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"Y9FqCjClrB3IdqE+v5AafyrfISw=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","useState","gql","useQuery","Username","useParams","AllGuests","ValidationContext","FormHelperText","makeStyles","SHOW_FILE","useStyles","theme","box","display","tab","backgroundColor","listStyleType","borderRadius","margin","fontWeight","fontSize","tabhead","paddingLeft","speech","FS","classes","room","loading","err","data","variables","roomid","audio","undefined","files","map","voice","push","speaker","file","_id"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\nimport Username from './Username'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\nimport { ValidationContext } from 'graphql'\r\nimport { FormHelperText, makeStyles } from '@material-ui/core'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n      }\r\n  }\r\n`\r\n\r\n// a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      box:{\r\n        display:'block'\r\n      },\r\n      tab:{\r\n        backgroundColor:\"#eeeeee\",\r\n        listStyleType:\"none\",\r\n        borderRadius:\"10px\",\r\n        \r\n        margin:20,\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\"\r\n      },\r\n      tabhead:{\r\n      paddingLeft:\"40px\"\r\n      },\r\n      speech:{\r\n        fontSize:\"18px\",\r\n        fontWeight:\"100\"\r\n      }\r\n}))\r\nexport default function FS(){\r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room}\r\n    })\r\n   \r\n    \r\n   \r\n    if (loading ) return <h1>loading</h1>\r\n\r\n    let audio = []\r\n \r\n      if(data === undefined || err){\r\n        audio = []\r\n      }\r\n      \r\n      else{\r\n    data.files.map((voice)=>{\r\n\r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab} >\r\n          <div className={classes.tabhead}>\r\n          <AllGuests params={voice.speaker}/>\r\n          <p className={classes.speech}>Hello Rahul this is my podcast to introduce business to the students</p>\r\n          </div>\r\n          \r\n        <audio key={voice._id} controls>\r\n           <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/mpeg\"></source>\r\n        </audio>\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n    return(\r\n      <div className={classes.box}>\r\n        <ul>\r\n        {audio}\r\n        </ul>\r\n      </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}