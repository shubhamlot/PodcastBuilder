{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Reactmic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { IconButton, Button, makeStyles } from '@material-ui/core';\nimport { useParams } from 'react-router';\nimport AuthContext from '../context/auth-context';\nimport { KeyboardArrowRight, Mic } from '@material-ui/icons';\nimport Recorder from 'recorder-js';\nimport Gif from './Gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  buttonroot: {\n    display: 'flex',\n    width: '100%'\n  },\n  startbutton: {\n    flex: 1,\n    color: 'blue'\n  },\n  stopbutton: {\n    flex: 1,\n    color: \"red\"\n  },\n  donebutton: {\n    textDecoration: 'none'\n  },\n  container: {\n    padding: 10\n  },\n  control: {\n    margin: 10,\n    display: \"flex\"\n  },\n  icon: {\n    // flex:1,\n    backgroundColor: \"#FFFFFF\",\n    textAlign: \"center\",\n    color: \"#000000\",\n    '&:hover': {\n      color: \"red\"\n    }\n  },\n  iconClick: {\n    color: \"red\",\n    backgroundColor: \"#424242\"\n  },\n  iconmic: {\n    // flex:1,\n    textAlign: \"center\",\n    color: \"#ff4848\"\n  },\n  gif: {\n    flex: 1,\n    justifyItems: \"contain\",\n    margin: 14\n  },\n  iconnext: {\n    color: \"lightgreen\"\n  }\n}));\nconst UPLOAD_FILE = gql`\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\n  }\n`;\nexport default function Test() {\n  _s();\n\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  const recorder = new Recorder(audioContext);\n  const {\n    room\n  } = useParams();\n  const [recording, setRecording] = useState(false);\n  const [file, setFile] = useState(null);\n  const [uploadFile] = useMutation(UPLOAD_FILE, {\n    onCompleted: data => console.log(data)\n  });\n  navigator.mediaDevices.getUserMedia({\n    audio: true\n  }).then(stream => recorder.init(stream)).catch(err => console.log('Uh oh... unable to get stream...', err));\n\n  const startRecording = () => {\n    recorder.start().then(() => setRecording(true));\n    console.log(\"start\");\n  };\n\n  const stopRecording = () => {\n    console.log(\"stop\");\n    recorder.stop().then(({\n      blob,\n      buffer\n    }) => {\n      setRecording(false);\n      setFile(blob);\n      console.log(blob);\n    });\n\n    if (file != null) {\n      let speaker = auth.userId;\n      uploadFile({\n        variables: {\n          file: file,\n          roomid: room,\n          speaker: speaker\n        }\n      });\n    }\n  }; // if(!recording){\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.gif,\n        children: /*#__PURE__*/_jsxDEV(Gif, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.icon,\n        onClick: startRecording,\n        children: /*#__PURE__*/_jsxDEV(Mic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.icon,\n        onClick: stopRecording,\n        children: /*#__PURE__*/_jsxDEV(Mic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.iconnext,\n        children: /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this); //           }\n  //           else{\n  //       return(                   \n  //         <div className={classes.container}>\n  //         <div className={classes.control}>\n  //         <div className={classes.gif}>\n  //           <Gif/>\n  //         </div>\n  //           <IconButton\n  //           className={ classes.iconClick} \n  //           onClick={ stopRecording }>\n  //               <Mic/>\n  //           </IconButton>\n  //           {/* <Button \n  //           className={ classes.iconmic\n  //           } \n  //           onClick={ stopRecording }>\n  //           </Button> */}\n  //           <IconButton className={classes.iconnext} disabled>\n  //             {/* <Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> */}\n  //               <KeyboardArrowRight/>\n  //             {/* </Link> */}\n  //           </IconButton>\n  //         </div>\n  //       </div>\n  // )\n  //           }\n}\n\n_s(Test, \"KTYbVst+cSf8Mo+E78Tw8o1ZoQ8=\", false, function () {\n  return [useStyles, useParams, useMutation];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Reactmic.js"],"names":["React","useContext","useState","gql","useMutation","IconButton","Button","makeStyles","useParams","AuthContext","KeyboardArrowRight","Mic","Recorder","Gif","useStyles","theme","buttonroot","display","width","startbutton","flex","color","stopbutton","donebutton","textDecoration","container","padding","control","margin","icon","backgroundColor","textAlign","iconClick","iconmic","gif","justifyItems","iconnext","UPLOAD_FILE","Test","classes","auth","audioContext","window","AudioContext","webkitAudioContext","recorder","room","recording","setRecording","file","setFile","uploadFile","onCompleted","data","console","log","navigator","mediaDevices","getUserMedia","audio","then","stream","init","catch","err","startRecording","start","stopRecording","stop","blob","buffer","speaker","userId","variables","roomid"],"mappings":"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","sourcesContent":["\r\nimport React, { useContext,useState } from 'react' \r\n\r\nimport {gql, useMutation} from '@apollo/client';\r\nimport { IconButton,Button, makeStyles} from '@material-ui/core'\r\nimport { useParams } from 'react-router';\r\nimport AuthContext from '../context/auth-context'\r\nimport {  KeyboardArrowRight, Mic } from '@material-ui/icons';\r\nimport Recorder from 'recorder-js';\r\nimport Gif from './Gif'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  buttonroot:{\r\n    display:'flex',\r\n    width:'100%',\r\n  },\r\n  startbutton:{\r\n    flex:1,\r\n    color:'blue'\r\n  },\r\n  stopbutton:{\r\n    flex:1,\r\n    color:\"red\"\r\n  },\r\n  donebutton:{\r\n   \r\n    textDecoration:'none'\r\n  },\r\n  \r\n  container:{\r\n    padding:10\r\n  },\r\n  control:{\r\n    margin:10,\r\n    display:\"flex\"\r\n  },\r\n  icon:{\r\n    // flex:1,\r\n  \r\n    backgroundColor:\"#FFFFFF\",\r\n    textAlign:\"center\",\r\n    color:\"#000000\",\r\n    '&:hover':{\r\n      color:\"red\"\r\n    }\r\n  },\r\n\r\n  iconClick:{\r\n    color:\"red\",\r\n    backgroundColor:\"#424242\"\r\n  },\r\n  iconmic:{\r\n    // flex:1,\r\n    textAlign:\"center\",\r\n    color:\"#ff4848\",\r\n    \r\n  },\r\n  gif:{\r\n    flex:1,\r\n    justifyItems:\"contain\",\r\n    margin:14\r\n  },\r\n  iconnext:{\r\n    color:\"lightgreen\"\r\n  }\r\n\r\n}))\r\n\r\n\r\n\r\n\r\nconst UPLOAD_FILE = gql`\r\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\r\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\r\n  }\r\n`\r\n\r\nexport default function Test(){\r\n    const classes = useStyles();\r\n    const auth = useContext(AuthContext)\r\n    const audioContext =  new (window.AudioContext || window.webkitAudioContext)();\r\n    const recorder = new Recorder(audioContext);\r\n        const { room } = useParams()\r\n\r\n      \r\n      const [recording,setRecording] = useState(false)\r\n      const [file,setFile] = useState(null)\r\n\r\n          const[uploadFile] = useMutation(UPLOAD_FILE,{\r\n        onCompleted: data => console.log(data),\r\n      })\r\n\r\n  navigator.mediaDevices.getUserMedia({audio: true})\r\n  .then(stream => recorder.init(stream))\r\n  .catch(err => console.log('Uh oh... unable to get stream...', err));\r\n\r\n\r\n  const startRecording=()=>{\r\n      \r\n    recorder.start()\r\n      .then(() => setRecording(true));\r\n      console.log(\"start\")\r\n  }\r\n\r\n  const stopRecording=()=>{\r\n    console.log(\"stop\")\r\n    recorder.stop()\r\n      .then(({blob, buffer}) => {\r\n        setRecording(false)\r\n        setFile(blob);\r\n        console.log(blob)\r\n      });\r\n      if(file != null){\r\n        let speaker = auth.userId\r\n        uploadFile({variables:{file:file,roomid:room,speaker:speaker}})\r\n      }\r\n      \r\n  }\r\n \r\n  \r\n\r\n  // if(!recording){\r\n\r\n  return(\r\n             \r\n\r\n        <div className={classes.container}>\r\n          <div className={classes.control}>\r\n          <div className={classes.gif}>\r\n            <Gif/> \r\n          </div>\r\n           \r\n           \r\n            <Button\r\n            className={ classes.icon} \r\n            onClick={ startRecording }>\r\n            \r\n                <Mic/>\r\n             \r\n            </Button>\r\n            <Button\r\n            className={ classes.icon} \r\n            onClick={ stopRecording }>\r\n            \r\n                <Mic/>\r\n             \r\n            </Button>\r\n            {/* <Button \r\n            className={ classes.iconmic\r\n            } \r\n            onClick={ stopRecording }>\r\n             \r\n                \r\n             \r\n            </Button> */}\r\n            <IconButton className={classes.iconnext}>\r\n            {/* <Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> */}\r\n           \r\n              <KeyboardArrowRight/>\r\n            \r\n            {/* </Link> */}\r\n          </IconButton>\r\n            \r\n\r\n          </div>\r\n        </div>\r\n  )\r\n//           }\r\n\r\n//           else{\r\n//       return(                   \r\n\r\n//         <div className={classes.container}>\r\n//         <div className={classes.control}>\r\n//         <div className={classes.gif}>\r\n//           <Gif/>\r\n//         </div>\r\n         \r\n         \r\n//           <IconButton\r\n//           className={ classes.iconClick} \r\n//           onClick={ stopRecording }>\r\n          \r\n//               <Mic/>\r\n           \r\n//           </IconButton>\r\n//           {/* <Button \r\n//           className={ classes.iconmic\r\n//           } \r\n//           onClick={ stopRecording }>\r\n           \r\n              \r\n           \r\n//           </Button> */}\r\n//           <IconButton className={classes.iconnext} disabled>\r\n//             {/* <Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> */}\r\n           \r\n//               <KeyboardArrowRight/>\r\n            \r\n//             {/* </Link> */}\r\n//           </IconButton>\r\n          \r\n\r\n//         </div>\r\n//       </div>\r\n// )\r\n//           }\r\n}"]},"metadata":{},"sourceType":"module"}