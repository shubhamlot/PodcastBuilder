{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\userlogin.js\";\nimport { React, useState, useContext } from 'react';\nimport { userMutation, gql, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport AuthContext from \"../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Userlogin extends React.Component {\n  constructor() {\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\"\n    };\n  }\n\n  handleUsername(e) {}\n\n  handlePassword(e) {}\n\n  handleEmail() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n} //  function Userlogin(){\n//     const g = new Guest();\n//     const auth = useContext(AuthContext)\n//     const UPLOAD_USER = gql`\n//     mutation($username:String,$email:String,$password:String){\n//         addUser(username:$username,email:$email,password:$password){\n//           _id\n//           username\n//           email\n//           isGuest\n//         }\n//       }\n// `\n// const[createUser] = useMutation(UPLOAD_USER,{\n//     onCompleted: data => {\n//         console.log()\n//     }\n// })\n// let [state, setState] = useState({\n//     username:'',\n//     password:'',\n//     email:'',\n//     submitted:false\n// });\n// const handleUsername = (e)=>{\n//     // console.log(state)\n//     // setState({username:e.target.value,password:state.password,email:state.email})\n// }\n// const handlePassword = (e)=>{\n//     // console.log(state)\n//     // setState({username:state.username,password:e.target.value,email:state.email})\n// }\n// const handleEmail = (e)=>{\n//     // console.log(state)\n//     // setState({username:state.username,password:state.password,email:e.target.value})\n// }\n// const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     createUser({ variables: { username:state.username,\n//         email:state.email,password:state.password } })\n//         .then(res=>{\n//             // console.log(res.data.addUser)\n//             if(res.data){\n//                 // console.log(res.data.addUser._id)\n//                 auth.login(res.data.addUser._id,res.data.addUser.username)\n//             }\n//         })\n//         setState({submitted:true})\n// }\n//     if(!state.submitted){\n//     return(\n//         <form onSubmit={handleSubmit}>\n//             <input type=\"text\" placeholder=\"guestname\" name=\"username\" \n//             onChange={g.handleUsername}/>\n//             <input type=\"password\" placeholder=\"password\" name=\"password\" \n//             onChange={handlePassword}/>\n//             <input type=\"text\" placeholder=\"email\" name=\"email\" \n//             onChange={handleEmail}/>\n//             <input type=\"submit\"/>\n//         </form>\n//     )\n//     }\n//     else{\n//         return <Redirect to='/initJoinRoom'/>\n//     }\n// }","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/userlogin.js"],"names":["React","useState","useContext","userMutation","gql","useMutation","Redirect","AuthContext","Userlogin","Component","constructor","state","username","password","email","handleUsername","e","handlePassword","handleEmail","render"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,WAA5B,QAA+C,gBAA/C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAGA,eAAe,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,GAAE;AACV,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC,EADA;AAETC,MAAAA,QAAQ,EAAC,EAFA;AAGTC,MAAAA,KAAK,EAAC;AAHG,KAAb;AAKF;;AAGDC,EAAAA,cAAc,CAACC,CAAD,EAAG,CAChB;;AAEDC,EAAAA,cAAc,CAACD,CAAD,EAAG,CAEhB;;AAEDE,EAAAA,WAAW,GAAE,CAAE;;AAEfC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAvBkD,C,CA4BvD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {React,useState,useContext} from 'react'\r\nimport { userMutation, gql, useMutation } from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\n\r\nexport default class Userlogin extends React.Component {\r\n    constructor(){\r\n       this.state = {\r\n           username:\"\",\r\n           password:\"\",\r\n           email:\"\"\r\n       }\r\n    }\r\n\r\n\r\n    handleUsername(e){\r\n    }\r\n\r\n    handlePassword(e){\r\n\r\n    }\r\n \r\n    handleEmail(){}\r\n\r\n    render(){\r\n        return(\r\n            <div>Hello</div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\n//  function Userlogin(){\r\n\r\n\r\n//     const g = new Guest();\r\n//     const auth = useContext(AuthContext)\r\n//     const UPLOAD_USER = gql`\r\n//     mutation($username:String,$email:String,$password:String){\r\n//         addUser(username:$username,email:$email,password:$password){\r\n//           _id\r\n//           username\r\n//           email\r\n//           isGuest\r\n//         }\r\n//       }\r\n// `\r\n\r\n// const[createUser] = useMutation(UPLOAD_USER,{\r\n//     onCompleted: data => {\r\n//         console.log()\r\n//     }\r\n// })\r\n\r\n\r\n// let [state, setState] = useState({\r\n//     username:'',\r\n//     password:'',\r\n//     email:'',\r\n//     submitted:false\r\n// });\r\n\r\n// const handleUsername = (e)=>{\r\n//     // console.log(state)\r\n//     // setState({username:e.target.value,password:state.password,email:state.email})\r\n// }\r\n// const handlePassword = (e)=>{\r\n//     // console.log(state)\r\n//     // setState({username:state.username,password:e.target.value,email:state.email})\r\n// }\r\n// const handleEmail = (e)=>{\r\n//     // console.log(state)\r\n//     // setState({username:state.username,password:state.password,email:e.target.value})\r\n// }\r\n\r\n// const handleSubmit = (e)=>{\r\n//     e.preventDefault()\r\n//     createUser({ variables: { username:state.username,\r\n//         email:state.email,password:state.password } })\r\n//         .then(res=>{\r\n//             // console.log(res.data.addUser)\r\n//             if(res.data){\r\n//                 // console.log(res.data.addUser._id)\r\n//                 auth.login(res.data.addUser._id,res.data.addUser.username)\r\n//             }\r\n//         })\r\n//         setState({submitted:true})\r\n    \r\n    \r\n// }\r\n\r\n//     if(!state.submitted){\r\n//     return(\r\n//         <form onSubmit={handleSubmit}>\r\n//             <input type=\"text\" placeholder=\"guestname\" name=\"username\" \r\n//             onChange={g.handleUsername}/>\r\n//             <input type=\"password\" placeholder=\"password\" name=\"password\" \r\n//             onChange={handlePassword}/>\r\n//             <input type=\"text\" placeholder=\"email\" name=\"email\" \r\n//             onChange={handleEmail}/>\r\n//             <input type=\"submit\"/>\r\n//         </form>\r\n//     )\r\n//     }\r\n//     else{\r\n//         return <Redirect to='/initJoinRoom'/>\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}