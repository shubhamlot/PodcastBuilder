{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\Checkbeforjoining.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { Guests } from './AllUsers';\nimport AuthContext from '../context/auth-context';\nimport { gql, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport InitJoin from './InitJoinRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_GUEST = gql`\nmutation ($guestid:String,$roomid:String){\n  addToRoom(guestid:$guestid,roomid:$roomid)\n}\n`;\nexport default function Checkbeforjoining(param) {\n  _s();\n\n  const auth = useContext(AuthContext);\n  let [data, Setdata] = useState(null);\n  let info = {\n    room: param.roomid,\n    userid: auth.userId\n  };\n  const [addUser, {\n    loading\n  }] = useMutation(ADD_GUEST, {\n    onCompleted: data => {\n      Setdata(data.addToRoom);\n    },\n    onError: error => {\n      console.log(error);\n    }\n  });\n  addUser({\n    variables: {\n      guestid: info.userid,\n      roomid: info.room\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading.........\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `roomID=${info.room}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Checkbeforjoining, \"dQjAcOBekuEDYdewSyscqI8PW/M=\", false, function () {\n  return [useMutation];\n});\n\n_c = Checkbeforjoining;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbeforjoining\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/Checkbeforjoining.js"],"names":["useContext","useState","Guests","AuthContext","gql","useMutation","Redirect","InitJoin","ADD_GUEST","Checkbeforjoining","param","auth","data","Setdata","info","room","roomid","userid","userId","addUser","loading","onCompleted","addToRoom","onError","error","console","log","variables","guestid"],"mappings":";;;AACA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAAQC,GAAR,EAAaC,WAAb,QAA+B,gBAA/B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,SAAS,GAAGJ,GAAI;AACtB;AACA;AACA;AACA,CAJA;AAMA,eAAe,SAASK,iBAAT,CAA2BC,KAA3B,EAAiC;AAAA;;AAE5C,QAAMC,IAAI,GAAGX,UAAU,CAACG,WAAD,CAAvB;AACA,MAAI,CAACS,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,IAAD,CAA7B;AACA,MAAIa,IAAI,GAAE;AACNC,IAAAA,IAAI,EAACL,KAAK,CAACM,MADL;AAENC,IAAAA,MAAM,EAACN,IAAI,CAACO;AAFN,GAAV;AAKA,QAAM,CAACC,OAAD,EAAS;AAACC,IAAAA;AAAD,GAAT,IAAsBf,WAAW,CAACG,SAAD,EAAW;AAC9Ca,IAAAA,WAAW,EAAET,IAAD,IAAQ;AACjBC,MAAAA,OAAO,CAACD,IAAI,CAACU,SAAN,CAAP;AACF,KAH6C;AAI9CC,IAAAA,OAAO,EAAEC,KAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAN6C,GAAX,CAAvC;AASAL,EAAAA,OAAO,CAAC;AAACQ,IAAAA,SAAS,EAAC;AAACC,MAAAA,OAAO,EAACd,IAAI,CAACG,MAAd;AAAqBD,MAAAA,MAAM,EAACF,IAAI,CAACC;AAAjC;AAAX,GAAD,CAAP;AAEA,MAAGK,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,sBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG,UAASN,IAAI,CAACC,IAAK;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GAxBuBN,iB;UASQJ,W;;;KATRI,iB","sourcesContent":["\r\nimport { useContext, useState } from 'react'\r\nimport {Guests} from './AllUsers'\r\nimport AuthContext from '../context/auth-context'\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\nimport InitJoin from './InitJoinRoom'\r\n\r\nconst ADD_GUEST = gql`\r\nmutation ($guestid:String,$roomid:String){\r\n  addToRoom(guestid:$guestid,roomid:$roomid)\r\n}\r\n`\r\n\r\nexport default function Checkbeforjoining(param){\r\n   \r\n    const auth = useContext(AuthContext)\r\n    let [data,Setdata] = useState(null) \r\n    let info ={\r\n        room:param.roomid,\r\n        userid:auth.userId\r\n    }\r\n\r\n    const [addUser,{loading}] = useMutation(ADD_GUEST,{\r\n        onCompleted:(data)=>{\r\n           Setdata(data.addToRoom)\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error)\r\n        },\r\n    })\r\n\r\n    addUser({variables:{guestid:info.userid,roomid:info.room}})\r\n   \r\n    if(loading) return <p>loading.........</p>\r\n    return(<Redirect to={`roomID=${info.room}`}/>)\r\n    \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}