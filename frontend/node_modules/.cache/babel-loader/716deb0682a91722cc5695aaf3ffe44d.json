{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\ShowEpisode.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useContext } from 'react';\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core';\nimport logo from \"../logo.svg\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: 20,\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  header: {\n    fontWeight: \"bold\"\n  },\n  discription: {\n    fontSize: \"12\"\n  },\n  container: {\n    width: 700,\n    height: 500,\n    display: \"flex\"\n  },\n  box: {\n    flex: 1,\n    padding: 10\n  },\n  imgbox: {\n    flex: 2,\n    padding: 10\n  }\n}));\nconst GET_EPISODE = gql`\n   query reviewEpisode($EpisodeID:String){\n    reviewEpisode(EpisodeID:$EpisodeID){\n        EpisodeName\n        discription\n        img\n        audioFile\n    }\n  }\n`;\nexport default function ShowEpisode(param) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    loading,\n    data\n  } = useQuery(GET_EPISODE, {\n    variables: {\n      EpisodeID: param.param\n    } //   pollInterval: 500,\n\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 22\n  }, this);\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.imgbox,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.image,\n            src: `http://localhost:4000/images/${data.reviewEpisode.img}`,\n            alt: \"pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.box,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: data.reviewEpisode.EpisodeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.reviewEpisode.discription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n} // <Paper className={classes.paper}>\n//            <img className={classes.image} src={`http://localhost:4000/images/${data.reviewEpisode.img}`} alt=\"pic\"/>\n//            <p classesName={classes.header}>{data.reviewEpisode.EpisodeName}</p>\n//            <p classesName={classes.discription}>{data.reviewEpisode.discription}</p>\n//            </Paper>\n\n_s(ShowEpisode, \"DwypvNLheCI32uPWrhjfNakwnMY=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = ShowEpisode;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowEpisode\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/ShowEpisode.js"],"names":["gql","useMutation","useQuery","useContext","createMuiTheme","Grid","makeStyles","Paper","ThemeProvider","React","useStyles","theme","paper","padding","spacing","margin","display","overflow","flexDirection","image","width","height","header","fontWeight","discription","fontSize","container","box","flex","imgbox","GET_EPISODE","ShowEpisode","param","classes","loading","data","variables","EpisodeID","reviewEpisode","img","EpisodeName"],"mappings":"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","sourcesContent":["\r\nimport {gql, useMutation, useQuery} from '@apollo/client';\r\nimport {useContext} from 'react'\r\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin:20,\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n      },\r\n\r\n    image:{\r\n      width:\"100%\",\r\n      height:\"100%\"\r\n    },\r\n    header:{\r\n      fontWeight:\"bold\"\r\n    },\r\n    discription:{\r\n      fontSize:\"12\"\r\n    },\r\n    container:{\r\n      width:700,\r\n      height:500,\r\n      display:\"flex\"\r\n\r\n    },\r\n    box:{\r\n      flex:1,\r\n      padding:10\r\n    },\r\n    imgbox:{\r\n      flex:2,\r\n      padding:10\r\n    }\r\n}))\r\n\r\nconst GET_EPISODE = gql`\r\n   query reviewEpisode($EpisodeID:String){\r\n    reviewEpisode(EpisodeID:$EpisodeID){\r\n        EpisodeName\r\n        discription\r\n        img\r\n        audioFile\r\n    }\r\n  }\r\n`\r\n\r\nexport default function ShowEpisode(param){\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n   const{ loading,data} = useQuery(GET_EPISODE,{\r\n      variables: {EpisodeID:param.param},\r\n    //   pollInterval: 500,\r\n    })\r\n   if(loading)return <p>loading..</p>\r\n   \r\n  if(data){\r\n  return (\r\n\r\n           \r\n        \r\n            <React.Fragment>\r\n            <div className={classes.container}>\r\n            <div className={classes.imgbox}>\r\n            <img className={classes.image} src={`http://localhost:4000/images/${data.reviewEpisode.img}`} alt=\"pic\"/>\r\n            </div>\r\n            <div className={classes.box}>\r\n            <h1>{data.reviewEpisode.EpisodeName}</h1>\r\n            <h3>{data.reviewEpisode.discription}</h3>\r\n            {/*<audio controls>\r\n              <source/>\r\n            </audio>*/}\r\n            </div>\r\n            </div>\r\n            </React.Fragment>\r\n  \r\n          \r\n          \r\n     \r\n      )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n // <Paper className={classes.paper}>\r\n           \r\n //            <img className={classes.image} src={`http://localhost:4000/images/${data.reviewEpisode.img}`} alt=\"pic\"/>\r\n //            <p classesName={classes.header}>{data.reviewEpisode.EpisodeName}</p>\r\n //            <p classesName={classes.discription}>{data.reviewEpisode.discription}</p>\r\n            \r\n //            </Paper>"]},"metadata":{},"sourceType":"module"}