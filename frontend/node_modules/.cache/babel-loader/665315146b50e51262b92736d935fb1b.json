{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\AllUsers.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport Username from './Username';\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { ValidationContext } from 'graphql';\nimport { FormHelperText, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n query listGuests($roomId:string){\n  \n    listGuests(roomId:$roomId)\n  \n }\n`;\nexport default function FS() {\n  _s();\n\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomId: room\n    }\n  });\n  if (loading) return null;\n  let audio = [];\n  console.log(data); // if(data.files){\n  // data.guestList.map((guest)=>{\n  //     audio.push(\n  //     <li key={voice._id} className={classes.tab}>\n  //       <div className={classes.tabhead}>\n  //       <AllGuests params={voice.speaker}/>\n  //       </div>\n  //     <audio key={voice._id} controls>\n  //        <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/mpeg\"></source>\n  //     </audio>\n  //     </li>\n  //     )\n  //     }\n  // )\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"audio\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"heVWGiGxbyAlMDzxZBp9f74boxM=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/AllUsers.js"],"names":["React","useState","gql","useQuery","Username","useParams","AllGuests","ValidationContext","FormHelperText","makeStyles","SHOW_FILE","FS","room","loading","error","data","variables","roomId","audio","console","log"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,mBAA3C;;AAEA,MAAMC,SAAS,GAAGR,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,eAAe,SAASS,EAAT,GAAa;AAAA;;AAKxB,QAAM;AAAEC,IAAAA;AAAF,MAAWP,SAAS,EAA1B;AAEA,QAAK;AAAEQ,IAAAA,OAAF;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB,MAAwBZ,QAAQ,CAACO,SAAD,EAAW;AAC9CM,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAACL;AAAR;AADmC,GAAX,CAArC;AAMA,MAAIC,OAAJ,EAAa,OAAO,IAAP;AAGb,MAAIK,KAAK,GAAG,EAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAjBwB,CAkBxB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GA3CuBJ,E;UAKHN,S,EAEYF,Q;;;KAPTQ,E","sourcesContent":["\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\nimport Username from './Username'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\nimport { ValidationContext } from 'graphql'\r\nimport { FormHelperText, makeStyles } from '@material-ui/core'\r\n\r\nconst SHOW_FILE = gql`\r\n query listGuests($roomId:string){\r\n  \r\n    listGuests(roomId:$roomId)\r\n  \r\n }\r\n`\r\nexport default function FS(){\r\n\r\n\r\n    \r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomId:room}\r\n    })\r\n   \r\n    \r\n   \r\n    if (loading) return null\r\n\r\n     \r\n    let audio = []\r\n    console.log(data)\r\n    // if(data.files){\r\n    // data.guestList.map((guest)=>{\r\n\r\n    //     audio.push(\r\n    //     <li key={voice._id} className={classes.tab}>\r\n    //       <div className={classes.tabhead}>\r\n    //       <AllGuests params={voice.speaker}/>\r\n    //       </div>\r\n    //     <audio key={voice._id} controls>\r\n    //        <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/mpeg\"></source>\r\n    //     </audio>\r\n    //     </li>\r\n    //     )\r\n    //     }\r\n       \r\n    // )\r\n    //   }\r\n    \r\n\r\n    return(\r\n      <div >\r\n        \r\n        audio\r\n      </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}