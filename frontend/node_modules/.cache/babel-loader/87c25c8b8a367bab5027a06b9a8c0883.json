{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport Username from './Username';\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { ValidationContext } from 'graphql';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n      }\n  }\n`; // a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\n\nconst useStyles = makeStyles(theme => ({\n  tab: {\n    backgroundColor: \"#80cbc4\"\n  }\n}));\nexport default function FS() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    }\n  });\n  if (loading) return null;\n  let audio = [];\n  console.log(data);\n\n  if (data.files) {\n    data.files.map(voice => {\n      audio.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.tab,\n        children: [/*#__PURE__*/_jsxDEV(AllGuests, {\n          params: voice.speaker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: `http://localhost:4000/Audio/${voice.file}`,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 12\n          }, this)\n        }, voice._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, voice._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: audio\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"o2P9oX9SH5s8397WFprBFt/yLTQ=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","useState","gql","useQuery","Username","useParams","AllGuests","ValidationContext","makeStyles","SHOW_FILE","useStyles","theme","tab","backgroundColor","FS","classes","room","loading","error","data","variables","roomid","audio","console","log","files","map","voice","push","speaker","file","_id"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,SAAS,GAAGP,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CAUA;;AAEA,MAAMQ,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACnCC,EAAAA,GAAG,EAAC;AACFC,IAAAA,eAAe,EAAC;AADd;AAD+B,CAAZ,CAAD,CAA5B;AAKA,eAAe,SAASC,EAAT,GAAa;AAAA;;AAExB,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AAGA,QAAM;AAAEM,IAAAA;AAAF,MAAWX,SAAS,EAA1B;AAEA,QAAK;AAAEY,IAAAA,OAAF;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB,MAAwBhB,QAAQ,CAACM,SAAD,EAAW;AAC9CW,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAACL;AAAR;AADmC,GAAX,CAArC;AAMA,MAAIC,OAAJ,EAAa,OAAO,IAAP;AAGb,MAAIK,KAAK,GAAG,EAAZ;AAECC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACD,MAAGA,IAAI,CAACM,KAAR,EAAc;AACdN,IAAAA,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAgBC,KAAD,IAAS;AAEpBL,MAAAA,KAAK,CAACM,IAAN,eACA;AAAoB,QAAA,SAAS,EAAEb,OAAO,CAACH,GAAvC;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEe,KAAK,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEA;AAAuB,UAAA,QAAQ,MAA/B;AAAA,iCACG;AAAS,YAAA,GAAG,EAAG,+BAA8BF,KAAK,CAACG,IAAK,EAAxD;AAA2D,YAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADH,WAAYH,KAAK,CAACI,GAAlB;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA,SAASJ,KAAK,CAACI,GAAf;AAAA;AAAA;AAAA;AAAA,cADA;AAQC,KAVL;AAaG;;AAGH,sBACE;AAAA,cAEGT;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GA1CuBR,E;UAEJJ,S,EAGCL,S,EAEYF,Q;;;KAPTW,E","sourcesContent":["\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\nimport Username from './Username'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\nimport { ValidationContext } from 'graphql'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n      }\r\n  }\r\n`\r\n\r\n// a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      tab:{\r\n        backgroundColor:\"#80cbc4\"\r\n      }\r\n}))\r\nexport default function FS(){\r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room}\r\n    })\r\n   \r\n    \r\n   \r\n    if (loading) return null\r\n\r\n     \r\n    let audio = []\r\n\r\n     console.log(data)\r\n    if(data.files){\r\n    data.files.map((voice)=>{\r\n\r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab}>\r\n          <AllGuests params={voice.speaker}/>\r\n        <audio key={voice._id} controls>\r\n           <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/mpeg\"></source>\r\n        </audio>\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n    return(\r\n      <div >\r\n        \r\n        {audio}\r\n      </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}