{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\EditorFiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { gql, useLazyQuery, useQuery } from '@apollo/client'; // import Username from './Username'\n\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { FormHelperText, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n        speech\n      }\n  }\n`; // a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'block'\n  },\n  tab: {\n    listStyleType: \"none\",\n    borderRadius: \"10px\",\n    border: \"1px solid\",\n    margin: 0,\n    fontWeight: \"bold\",\n    fontSize: \"20px\"\n  },\n  tabhead: {\n    paddingLeft: \"0px\",\n    paddingTop: \"0px\"\n  },\n  speech: {\n    fontSize: \"18px\",\n    fontWeight: \"100\"\n  }\n}));\nexport default function FS() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    },\n    pollInterval: 500\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 24\n  }, this);\n  let audio = [];\n\n  if (data === undefined || err) {\n    audio = [];\n  } else {\n    data.files.map(voice => {\n      console.log(voice);\n      audio.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.tab,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tabhead,\n          children: [/*#__PURE__*/_jsxDEV(AllGuests, {\n            params: voice.speaker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.speech,\n            children: voice.speech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: `http://localhost:4000/Audio/${voice.file}`,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 12\n          }, this)\n        }, voice._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, voice._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.box,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"Y9FqCjClrB3IdqE+v5AafyrfISw=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/EditorFiles.js"],"names":["React","useEffect","useState","gql","useLazyQuery","useQuery","useParams","AllGuests","FormHelperText","makeStyles","SHOW_FILE","useStyles","theme","box","display","tab","listStyleType","borderRadius","border","margin","fontWeight","fontSize","tabhead","paddingLeft","paddingTop","speech","FS","classes","room","loading","err","data","variables","roomid","pollInterval","audio","undefined","files","map","voice","console","log","push","speaker","file","_id"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useLazyQuery, useQuery } from '@apollo/client'\r\n// import Username from './Username'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\n\r\nimport { FormHelperText, makeStyles } from '@material-ui/core'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n// a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      box:{\r\n        display:'block'\r\n      },\r\n      tab:{\r\n       \r\n        listStyleType:\"none\",\r\n        borderRadius:\"10px\",\r\n        border:\"1px solid\",\r\n        margin:0,\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\"\r\n      },\r\n      tabhead:{\r\n      paddingLeft:\"0px\",\r\n      paddingTop:\"0px\",\r\n     \r\n      },\r\n      speech:{\r\n        fontSize:\"18px\",\r\n        fontWeight:\"100\",\r\n      },\r\n\r\n}))\r\nexport default function FS(){\r\n\r\n  \r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n      pollInterval: 500,\r\n    })\r\n   \r\n    if(loading) return <p>loading</p>\r\n   \r\n    \r\n\r\n    let audio = []\r\n \r\n      if(data === undefined || err ){\r\n        audio = []\r\n      }\r\n      \r\n      else{\r\n    data.files.map((voice)=>{\r\n        console.log(voice)\r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab} >\r\n          <div className={classes.tabhead}>\r\n          <AllGuests params={voice.speaker}/>\r\n          <p className={classes.speech}>{voice.speech}</p>\r\n          </div>\r\n          \r\n        <audio key={voice._id}  controls>\r\n           <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/mpeg\"></source>\r\n        </audio>\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n    return(\r\n      <div className={classes.box}>\r\n        <ul>\r\n        {audio}\r\n        </ul>\r\n      </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}