{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _microphone = require('./microphone');\n\nvar _microphone2 = _interopRequireDefault(_microphone);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar defaultConfig = {\n  nFrequencyBars: 255,\n  onAnalysed: null\n};\n\nvar Recorder = function () {\n  function Recorder(audioContext) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Recorder);\n\n    this.config = Object.assign({}, defaultConfig, config);\n    this.audioContext = audioContext;\n    this.audioInput = null;\n    this.realAudioInput = null;\n    this.inputPoint = null;\n    this.audioRecorder = null;\n    this.rafID = null;\n    this.analyserContext = null;\n    this.recIndex = 0;\n    this.stream = null;\n    this.updateAnalysers = this.updateAnalysers.bind(this);\n  }\n\n  _createClass(Recorder, [{\n    key: 'init',\n    value: function init(stream) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.inputPoint = _this.audioContext.createGain();\n        _this.stream = stream;\n        _this.realAudioInput = _this.audioContext.createMediaStreamSource(stream);\n        _this.audioInput = _this.realAudioInput;\n\n        _this.audioInput.connect(_this.inputPoint);\n\n        _this.analyserNode = _this.audioContext.createAnalyser();\n        _this.analyserNode.fftSize = 2048;\n\n        _this.inputPoint.connect(_this.analyserNode);\n\n        _this.audioRecorder = new _microphone2.default(_this.inputPoint);\n\n        var zeroGain = _this.audioContext.createGain();\n\n        zeroGain.gain.value = 0.0;\n\n        _this.inputPoint.connect(zeroGain);\n\n        zeroGain.connect(_this.audioContext.destination);\n\n        _this.updateAnalysers();\n\n        resolve();\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.audioRecorder) {\n          reject('Not currently recording');\n          return;\n        }\n\n        _this2.audioRecorder.clear();\n\n        _this2.audioRecorder.record();\n\n        resolve(_this2.stream);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3.audioRecorder.stop();\n\n        _this3.audioRecorder.getBuffer(function (buffer) {\n          _this3.audioRecorder.exportWAV(function (blob) {\n            return resolve({\n              buffer: buffer,\n              blob: blob\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: 'updateAnalysers',\n    value: function updateAnalysers() {\n      if (this.config.onAnalysed) {\n        requestAnimationFrame(this.updateAnalysers);\n        var freqByteData = new Uint8Array(this.analyserNode.frequencyBinCount);\n        this.analyserNode.getByteFrequencyData(freqByteData);\n        var data = new Array(255);\n        var lastNonZero = 0;\n        var datum = void 0;\n\n        for (var idx = 0; idx < 255; idx += 1) {\n          datum = Math.floor(freqByteData[idx]) - Math.floor(freqByteData[idx]) % 5;\n\n          if (datum !== 0) {\n            lastNonZero = idx;\n          }\n\n          data[idx] = datum;\n        }\n\n        this.config.onAnalysed({\n          data: data,\n          lineTo: lastNonZero\n        });\n      }\n    }\n  }, {\n    key: 'setOnAnalysed',\n    value: function setOnAnalysed(handler) {\n      this.config.onAnalysed = handler;\n    }\n  }]);\n\n  return Recorder;\n}();\n\nRecorder.download = function download(blob) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'audio';\n\n  _microphone2.default.forceDownload(blob, filename + '.wav');\n};\n\nexports.default = Recorder;","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/node_modules/recorder-js/lib/index.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_microphone","require","_microphone2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","defaultConfig","nFrequencyBars","onAnalysed","Recorder","audioContext","config","arguments","undefined","assign","audioInput","realAudioInput","inputPoint","audioRecorder","rafID","analyserContext","recIndex","stream","updateAnalysers","bind","init","_this","Promise","resolve","createGain","createMediaStreamSource","connect","analyserNode","createAnalyser","fftSize","zeroGain","gain","destination","start","_this2","reject","clear","record","stop","_this3","getBuffer","buffer","exportWAV","blob","requestAnimationFrame","freqByteData","Uint8Array","frequencyBinCount","getByteFrequencyData","data","Array","lastNonZero","datum","idx","Math","floor","lineTo","setOnAnalysed","handler","download","filename","forceDownload"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _microphone = require('./microphone');\n\nvar _microphone2 = _interopRequireDefault(_microphone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  nFrequencyBars: 255,\n  onAnalysed: null\n};\n\nvar Recorder = function () {\n  function Recorder(audioContext) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Recorder);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.audioContext = audioContext;\n    this.audioInput = null;\n    this.realAudioInput = null;\n    this.inputPoint = null;\n    this.audioRecorder = null;\n    this.rafID = null;\n    this.analyserContext = null;\n    this.recIndex = 0;\n    this.stream = null;\n\n    this.updateAnalysers = this.updateAnalysers.bind(this);\n  }\n\n  _createClass(Recorder, [{\n    key: 'init',\n    value: function init(stream) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.inputPoint = _this.audioContext.createGain();\n\n        _this.stream = stream;\n\n        _this.realAudioInput = _this.audioContext.createMediaStreamSource(stream);\n        _this.audioInput = _this.realAudioInput;\n        _this.audioInput.connect(_this.inputPoint);\n\n        _this.analyserNode = _this.audioContext.createAnalyser();\n        _this.analyserNode.fftSize = 2048;\n        _this.inputPoint.connect(_this.analyserNode);\n\n        _this.audioRecorder = new _microphone2.default(_this.inputPoint);\n\n        var zeroGain = _this.audioContext.createGain();\n        zeroGain.gain.value = 0.0;\n\n        _this.inputPoint.connect(zeroGain);\n        zeroGain.connect(_this.audioContext.destination);\n\n        _this.updateAnalysers();\n\n        resolve();\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.audioRecorder) {\n          reject('Not currently recording');\n          return;\n        }\n\n        _this2.audioRecorder.clear();\n        _this2.audioRecorder.record();\n\n        resolve(_this2.stream);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3.audioRecorder.stop();\n\n        _this3.audioRecorder.getBuffer(function (buffer) {\n          _this3.audioRecorder.exportWAV(function (blob) {\n            return resolve({ buffer: buffer, blob: blob });\n          });\n        });\n      });\n    }\n  }, {\n    key: 'updateAnalysers',\n    value: function updateAnalysers() {\n      if (this.config.onAnalysed) {\n        requestAnimationFrame(this.updateAnalysers);\n\n        var freqByteData = new Uint8Array(this.analyserNode.frequencyBinCount);\n\n        this.analyserNode.getByteFrequencyData(freqByteData);\n\n        var data = new Array(255);\n        var lastNonZero = 0;\n        var datum = void 0;\n\n        for (var idx = 0; idx < 255; idx += 1) {\n          datum = Math.floor(freqByteData[idx]) - Math.floor(freqByteData[idx]) % 5;\n\n          if (datum !== 0) {\n            lastNonZero = idx;\n          }\n\n          data[idx] = datum;\n        }\n\n        this.config.onAnalysed({ data: data, lineTo: lastNonZero });\n      }\n    }\n  }, {\n    key: 'setOnAnalysed',\n    value: function setOnAnalysed(handler) {\n      this.config.onAnalysed = handler;\n    }\n  }]);\n\n  return Recorder;\n}();\n\nRecorder.download = function download(blob) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'audio';\n\n  _microphone2.default.forceDownload(blob, filename + '.wav');\n};\n\nexports.default = Recorder;"]},"metadata":{},"sourceType":"script"}