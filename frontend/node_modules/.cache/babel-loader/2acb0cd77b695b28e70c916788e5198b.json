{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query ($roomid:String,$userid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n      }\n      finduser(id:$userid){\n        _id\n        username\n      }\n  }\n`;\nexport default function FS() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: \"a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\"\n    }\n  });\n  if (loading) return null;\n  let audio = []; // console.log(data.files)\n\n  data.files.map(voice => {\n    // console.log(voice.file)\n    audio.push( /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: `http://localhost:4000/Audio/${voice.file}`,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, voice._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), audio]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"hLsNeCM6uPLZqykYOKQzV+Uk/qM=\", false, function () {\n  return [useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","useState","gql","useQuery","SHOW_FILE","FS","loading","error","data","variables","roomid","audio","files","map","voice","push","file","_id"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;;AAGA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAgBA,eAAe,SAASG,EAAT,GAAa;AAAA;;AACxB,QAAK;AAAEC,IAAAA,OAAF;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB,MAAwBL,QAAQ,CAACC,SAAD,EAAW;AAC9CK,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR;AADmC,GAAX,CAArC;AAIA,MAAIJ,OAAJ,EAAa,OAAO,IAAP;AAEb,MAAIK,KAAK,GAAG,EAAZ,CAPwB,CAQxB;;AACAH,EAAAA,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAgBC,KAAD,IAAS;AACtB;AACEH,IAAAA,KAAK,CAACI,IAAN,eACI;AAAuB,MAAA,QAAQ,MAA/B;AAAA,6BACF;AAAS,QAAA,GAAG,EAAG,+BAA8BD,KAAK,CAACE,IAAK,EAAxD;AAA2D,QAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADE,OAAYF,KAAK,CAACG,GAAlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKC,GAPL;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GA5BuBN,E;UACSF,Q;;;KADTE,E","sourcesContent":["\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n  query ($roomid:String,$userid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n      }\r\n      finduser(id:$userid){\r\n        _id\r\n        username\r\n      }\r\n  }\r\n`\r\n\r\n\r\n\r\nexport default function FS(){\r\n    const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:\"a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\"}\r\n    })\r\n   \r\n    if (loading) return null\r\n     \r\n    let audio = []\r\n    // console.log(data.files)\r\n    data.files.map((voice)=>{\r\n      // console.log(voice.file)\r\n        audio.push(\r\n            <audio key={voice._id} controls>\r\n          <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/mpeg\"></source>\r\n        </audio>\r\n        )\r\n        }\r\n    )\r\n    \r\n  \r\n\r\n    \r\n    return(\r\n      <div >\r\n        <h1>click</h1>\r\n        {audio}\r\n      </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}