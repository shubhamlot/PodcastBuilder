{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n      }\n  }\n`;\nconst FIND = gql`\n    query find($userid:String){\n      finduser(id:$userid){\n        _id\n        username\n        email\n      }\n    }\n`;\nexport default function FS() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: \"a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\"\n    }\n  });\n  if (loading) return null;\n  const {\n    loading1,\n    error1,\n    data1\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      userid: \"606b367f6a34b008e829d1f4\"\n    }\n  });\n  let audio = []; // console.log(data.files)\n\n  data.files.map(voice => {\n    // console.log(voice.file)\n    audio.push( /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"data1.find.username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n        src: `http://localhost:4000/Audio/${voice.file}`,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, voice._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), audio]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"S8LXrWXEpMZtlsluX8pg2A5DOGs=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","useState","gql","useQuery","SHOW_FILE","FIND","FS","loading","error","data","variables","roomid","loading1","error1","data1","userid","audio","files","map","voice","push","file","_id"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;;AAGA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,MAAMG,IAAI,GAAGH,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAWA,eAAe,SAASI,EAAT,GAAa;AAAA;;AACxB,QAAK;AAAEC,IAAAA,OAAF;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB,MAAwBN,QAAQ,CAACC,SAAD,EAAW;AAC9CM,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR;AADmC,GAAX,CAArC;AAIA,MAAIJ,OAAJ,EAAa,OAAO,IAAP;AACb,QAAK;AAAEK,IAAAA,QAAF;AAAWC,IAAAA,MAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACC,SAAD,EAAW;AACjDM,IAAAA,SAAS,EAAE;AAACK,MAAAA,MAAM,EAAC;AAAR;AADsC,GAAX,CAAxC;AAGA,MAAIC,KAAK,GAAG,EAAZ,CATwB,CAUxB;;AACAP,EAAAA,IAAI,CAACQ,KAAL,CAAWC,GAAX,CAAgBC,KAAD,IAAS;AACtB;AAEEH,IAAAA,KAAK,CAACI,IAAN,eACI;AAAuB,MAAA,QAAQ,MAA/B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEF;AAAS,QAAA,GAAG,EAAG,+BAA8BD,KAAK,CAACE,IAAK,EAAxD;AAA2D,QAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA,OAAYF,KAAK,CAACG,GAAlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMC,GATL;AAeA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GAhCuBV,E;UACSH,Q,EAKGA,Q;;;KANZG,E","sourcesContent":["\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n      }\r\n  }\r\n`\r\nconst FIND = gql`\r\n    query find($userid:String){\r\n      finduser(id:$userid){\r\n        _id\r\n        username\r\n        email\r\n      }\r\n    }\r\n`\r\n\r\n\r\nexport default function FS(){\r\n    const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:\"a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\"}\r\n    })\r\n   \r\n    if (loading) return null\r\n    const{ loading1,error1,data1} = useQuery(SHOW_FILE,{\r\n      variables: {userid:\"606b367f6a34b008e829d1f4\"}\r\n    })\r\n    let audio = []\r\n    // console.log(data.files)\r\n    data.files.map((voice)=>{\r\n      // console.log(voice.file)\r\n      \r\n        audio.push(\r\n            <audio key={voice._id} controls>\r\n              <h3>data1.find.username</h3>\r\n          <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/mpeg\"></source>\r\n        </audio>\r\n        )\r\n        }\r\n    )\r\n    \r\n  \r\n\r\n    \r\n    return(\r\n      <div >\r\n        <h1>click</h1>\r\n        {audio}\r\n      </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}