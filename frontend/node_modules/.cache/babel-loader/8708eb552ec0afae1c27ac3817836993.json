{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\EditorFiles.js\",\n    _s = $RefreshSig$();\n\n// import {gql, useMutation, useQuery} from '@apollo/client';\n// import { AppBar, BottomNavigation, BottomNavigationAction, Button, Icon, IconButton, makeStyles, Menu, Paper, Toolbar, Typography,createMuiTheme } from '@material-ui/core';\n// import React, { useState } from 'react';\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n// import { Redirect, useParams } from 'react-router';\n// import AllGuests from './AllGuests';\n// import {Delete, Restore} from '@material-ui/icons'\n// const COMBINE = gql`\n// mutation CombineFiles($list:[String]){\n//   CombineFiles(list:$list)\n//    }\n// `\n// const SHOW_FILE = gql`\n//   query file ($roomid:String){\n//       files(roomid:$roomid){\n//         _id\n//         speaker\n//         file\n//         speech\n//       }\n//   }\n// `\n// const useStyles = makeStyles((theme) => ({\n//     box:{\n//       display:'block'\n//     },\n//     tab:{\n//       // listStyleType:\"none\",\n//       // borderRadius:\"1px\",\n//       // backgroundColor:\"#ede7f6\",\n//       // marginTop:1,\n//       // marginLeft:5,\n//       // fontWeight:\"bold\",\n//       // fontSize:\"15px\",\n//       // cursor:\"pointer\",\n//       // width:\"90%\" \n//     },\n//     tabhead:{\n//     // paddingLeft:\"10px\",\n//     // paddingTop:\"10px\",\n//     // display:\"flex\"\n//     },\n//     speech:{\n//       // fontSize:\"15px\",\n//       // fontWeight:\"100\",\n//       // marginLeft:1\n//     },\n//     ul:{\n//         // width:\"100%\"\n//     },\n//     subdiv:{\n//         // flex:1\n//     },\n//     icon:{\n//         // cursor:\"pointer\",\n//         // '&:hover':{\n//         //     color:\"red\"\n//         // }\n//     },\n//     paperextra:{\n//       // overflow:'auto',\n//       // height: 300,\n//     },\n//     button:{\n//       // padding:5,\n//       // margin:5,\n//     }\n// }))\n// function App( props ) {\n//   const classes = useStyles();\n//   const [list,setList] = useState([])\n//   const [check,setCheck] = useState(0)\n//   function handleOnDragEnd(result) {\n//     if (!result.destination) return;\n//     const items = list\n//     const [reorderedItem] = items.splice(result.source.index, 1);\n//     items.splice(result.destination.index, 0, reorderedItem);\n//     setList(items)\n//   }\n//   const { room } = useParams()\n//     const{ loading,err,data} = useQuery(SHOW_FILE,{\n//       variables: {roomid:room},\n//     //   pollInterval: 500,\n//     })\n//     const [combine] = useMutation(COMBINE,{\n//       onCompleted:(data)=>{console.log(data)}\n//     })\n//     let audioList =[]\n//     if(loading) return <p>loading</p>\n//     if(data){\n//     data.files.map((audio)=>{\n//         audioList.push({_id:audio._id,speaker:audio.speaker,file:audio.file,apeech:audio.speech})\n//     })\n//     }\n//     const handleRemove=(id)=>{\n//       const newList = list.filter((list) => list._id !== id);\n//       console.log(list)\n//       setList(newList);\n//     }\n//     const handleLoad=()=>{\n//       let temp =[]\n//       data.files.map((item,index)=>{\n//         temp.push(item)\n//         setList(temp)\n//       })\n//       if(list === []){\n//         console.log(list)\n//       }\n//       else{\n//         setCheck(true)\n//       }\n//     }\n//     const combineFunction=(e)=>{\n//       let temp=[]\n//       let audio = list\n//       audio.forEach((item)=>{temp.push(item.file)})\n//       combine({variables:{list:temp}})\n//       props.parentCallback(list);\n//     }\n//     if(!check){\n//       return( <div>\n//          <Button onClick={handleLoad}>Load</Button>\n//        </div>)\n//      }\n//      else{\n//   return (\n//     <Paper >\n//     <Paper className={classes.paperextra} elevation={0}>\n//     <div className=\"App\">\n//         <DragDropContext onDragEnd={handleOnDragEnd}>\n//           <Droppable droppableId=\"characters\">\n//             {(provided) => (\n//               <ul className={classes.ul} {...provided.droppableProps} ref={provided.innerRef}>\n//                 {list.map(({_id, speaker,speech,file}, index) => {\n//                   return (\n//                     <Draggable  key={_id} draggableId={_id} index={index}>\n//                       {(provided) => (\n//                         <li className={classes.tab} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n//                           <div className={classes.tabhead}>\n//                               <div className={classes.subdiv}>\n//                           <AllGuests params={speaker}/>\n//                           {/* </div>\n//                           <div className={classes.speech}> */}\n//                             {/* <AllGuests params={voice.speaker}/> */}\n//                             <p >{speech}</p>\n//                             </div>\n//                             <div className={classes.icon}>\n//                               <IconButton onClick={()=>handleRemove(_id)}>\n//                                   <Delete/>\n//                               </IconButton>\n//                           </div>\n//                           </div>\n//                         </li>\n//                       )}\n//                     </Draggable>\n//                   );\n//                 })}\n//                 {provided.placeholder}\n//               </ul>\n//             )}\n//           </Droppable>\n//         </DragDropContext>\n//     </div>\n//    </Paper>\n//    <Button onClick={combineFunction}  variant=\"contained\" color=\"secondary\">combine</Button>\n//     </Paper>\n//   );\n//     }\n// }\n// export default App;\nimport React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light'\n    }\n  }), [prefersDarkMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"s6GPQHExF/FrDfB4Jza+zlx2KnY=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/EditorFiles.js"],"names":["React","useMediaQuery","createMuiTheme","ThemeProvider","CssBaseline","App","prefersDarkMode","theme","useMemo","palette","type"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAIA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,eAAe,GAAGL,aAAa,CAAC,8BAAD,CAArC;AAEA,QAAMM,KAAK,GAAGP,KAAK,CAACQ,OAAN,CACZ,MACEN,cAAc,CAAC;AACbO,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEJ,eAAe,GAAG,MAAH,GAAY;AAD1B;AADI,GAAD,CAFJ,EAOZ,CAACA,eAAD,CAPY,CAAd;AAUA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEC,KAAtB;AAAA,2BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAnBuBF,G;UACEJ,a;;;KADFI,G","sourcesContent":["\r\n// import {gql, useMutation, useQuery} from '@apollo/client';\r\n// import { AppBar, BottomNavigation, BottomNavigationAction, Button, Icon, IconButton, makeStyles, Menu, Paper, Toolbar, Typography,createMuiTheme } from '@material-ui/core';\r\n// import React, { useState } from 'react';\r\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n// import { Redirect, useParams } from 'react-router';\r\n// import AllGuests from './AllGuests';\r\n// import {Delete, Restore} from '@material-ui/icons'\r\n\r\n\r\n// const COMBINE = gql`\r\n// mutation CombineFiles($list:[String]){\r\n//   CombineFiles(list:$list)\r\n//    }\r\n// `\r\n\r\n// const SHOW_FILE = gql`\r\n//   query file ($roomid:String){\r\n//       files(roomid:$roomid){\r\n//         _id\r\n//         speaker\r\n//         file\r\n//         speech\r\n//       }\r\n//   }\r\n// `\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     box:{\r\n//       display:'block'\r\n//     },\r\n//     tab:{\r\n//       // listStyleType:\"none\",\r\n//       // borderRadius:\"1px\",\r\n//       // backgroundColor:\"#ede7f6\",\r\n//       // marginTop:1,\r\n//       // marginLeft:5,\r\n//       // fontWeight:\"bold\",\r\n//       // fontSize:\"15px\",\r\n//       // cursor:\"pointer\",\r\n//       // width:\"90%\" \r\n//     },\r\n//     tabhead:{\r\n//     // paddingLeft:\"10px\",\r\n//     // paddingTop:\"10px\",\r\n//     // display:\"flex\"\r\n//     },\r\n//     speech:{\r\n//       // fontSize:\"15px\",\r\n//       // fontWeight:\"100\",\r\n//       // marginLeft:1\r\n//     },\r\n//     ul:{\r\n//         // width:\"100%\"\r\n//     },\r\n//     subdiv:{\r\n//         // flex:1\r\n//     },\r\n//     icon:{\r\n        \r\n//         // cursor:\"pointer\",\r\n//         // '&:hover':{\r\n//         //     color:\"red\"\r\n//         // }\r\n//     },\r\n//     paperextra:{\r\n//       // overflow:'auto',\r\n//       // height: 300,\r\n     \r\n//     },\r\n//     button:{\r\n     \r\n//       // padding:5,\r\n//       // margin:5,\r\n    \r\n//     }\r\n\r\n// }))\r\n\r\n\r\n\r\n// function App( props ) {\r\n \r\n  \r\n//   const classes = useStyles();\r\n//   const [list,setList] = useState([])\r\n//   const [check,setCheck] = useState(0)\r\n\r\n//   function handleOnDragEnd(result) {\r\n//     if (!result.destination) return;\r\n\r\n//     const items = list\r\n//     const [reorderedItem] = items.splice(result.source.index, 1);\r\n//     items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n//     setList(items)\r\n//   }\r\n\r\n//   const { room } = useParams()\r\n    \r\n//     const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n//       variables: {roomid:room},\r\n//     //   pollInterval: 500,\r\n//     })\r\n\r\n//     const [combine] = useMutation(COMBINE,{\r\n//       onCompleted:(data)=>{console.log(data)}\r\n//     })\r\n\r\n//     let audioList =[]\r\n//     if(loading) return <p>loading</p>\r\n//     if(data){\r\n    \r\n//     data.files.map((audio)=>{\r\n//         audioList.push({_id:audio._id,speaker:audio.speaker,file:audio.file,apeech:audio.speech})\r\n//     })\r\n    \r\n//     }\r\n//     const handleRemove=(id)=>{\r\n//       const newList = list.filter((list) => list._id !== id);\r\n//       console.log(list)\r\n//       setList(newList);\r\n//     }\r\n \r\n//     const handleLoad=()=>{\r\n//       let temp =[]\r\n//       data.files.map((item,index)=>{\r\n//         temp.push(item)\r\n//         setList(temp)\r\n//       })\r\n      \r\n//       if(list === []){\r\n//         console.log(list)\r\n//       }\r\n//       else{\r\n//         setCheck(true)\r\n//       }\r\n      \r\n//     }\r\n//     const combineFunction=(e)=>{\r\n//       let temp=[]\r\n//       let audio = list\r\n//       audio.forEach((item)=>{temp.push(item.file)})\r\n      \r\n//       combine({variables:{list:temp}})\r\n//       props.parentCallback(list);\r\n      \r\n//     }\r\n\r\n//     if(!check){\r\n//       return( <div>\r\n//          <Button onClick={handleLoad}>Load</Button>\r\n//        </div>)\r\n//      }\r\n//      else{\r\n\r\n//   return (\r\n//     <Paper >\r\n\r\n//     <Paper className={classes.paperextra} elevation={0}>\r\n//     <div className=\"App\">\r\n//         <DragDropContext onDragEnd={handleOnDragEnd}>\r\n//           <Droppable droppableId=\"characters\">\r\n//             {(provided) => (\r\n//               <ul className={classes.ul} {...provided.droppableProps} ref={provided.innerRef}>\r\n//                 {list.map(({_id, speaker,speech,file}, index) => {\r\n//                   return (\r\n//                     <Draggable  key={_id} draggableId={_id} index={index}>\r\n//                       {(provided) => (\r\n//                         <li className={classes.tab} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n//                           <div className={classes.tabhead}>\r\n//                               <div className={classes.subdiv}>\r\n//                           <AllGuests params={speaker}/>\r\n                       \r\n//                           {/* </div>\r\n                         \r\n//                           <div className={classes.speech}> */}\r\n//                             {/* <AllGuests params={voice.speaker}/> */}\r\n                             \r\n//                             <p >{speech}</p>\r\n                            \r\n//                             </div>\r\n//                             <div className={classes.icon}>\r\n//                               <IconButton onClick={()=>handleRemove(_id)}>\r\n//                                   <Delete/>\r\n//                               </IconButton>\r\n//                           </div>\r\n                           \r\n//                           </div>\r\n                          \r\n                          \r\n                         \r\n//                         </li>\r\n//                       )}\r\n//                     </Draggable>\r\n//                   );\r\n//                 })}\r\n//                 {provided.placeholder}\r\n//               </ul>\r\n//             )}\r\n//           </Droppable>\r\n\r\n//         </DragDropContext>\r\n        \r\n      \r\n//     </div>\r\n//    </Paper>\r\n//    <Button onClick={combineFunction}  variant=\"contained\" color=\"secondary\">combine</Button>\r\n//     </Paper>\r\n//   );\r\n//     }\r\n\r\n// }\r\n\r\n\r\n\r\n// export default App;\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nexport default function App() {\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: prefersDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [prefersDarkMode],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline/>\r\n      {/* <Routes /> */}\r\n    </ThemeProvider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}