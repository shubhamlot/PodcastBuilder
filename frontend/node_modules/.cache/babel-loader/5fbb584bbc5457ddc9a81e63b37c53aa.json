{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { Icon, IconButton, makeStyles } from '@material-ui/core';\nimport { PlayCircleFilledOutlined } from '@material-ui/icons';\nimport Loading from './loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n        speech\n      }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'block'\n  },\n  tab: {\n    listStyleType: \"none\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#D6D5B3\",\n    margin: 20,\n    fontWeight: \"bold\",\n    fontSize: \"20px\"\n  },\n  tabhead: {\n    paddingLeft: 10,\n    paddingTop: \"10px\",\n    color: \"#000000\"\n  },\n  speech: {\n    fontSize: \"18px\",\n    fontWeight: \"100\",\n    paddingLeft: 20\n  },\n  container: {\n    // display:\"flex\",\n    color: \"#000000\"\n  },\n  icon: {\n    color: \"#000000\"\n  }\n}));\nexport default function FS() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    },\n    pollInterval: 500\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 24\n  }, this);\n  let audio = [];\n\n  if (data === undefined || err || data === null) {\n    audio = [];\n  } else {\n    data.files.map(voice => {\n      audio.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.tab,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.tabhead,\n            children: /*#__PURE__*/_jsxDEV(AllGuests, {\n              params: voice.speaker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.speech,\n            children: voice.speech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: `http://localhost:4000/audio/${voice.file}`,\n              type: \"audio/wav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 12\n            }, this)\n          }, voice._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, voice._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this));\n    });\n  }\n\n  if (data.files[0] === undefined) {\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"lets start.... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: audio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(FS, \"Y9FqCjClrB3IdqE+v5AafyrfISw=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","gql","useQuery","useParams","AllGuests","Icon","IconButton","makeStyles","PlayCircleFilledOutlined","Loading","SHOW_FILE","useStyles","theme","box","display","tab","listStyleType","borderRadius","backgroundColor","margin","fontWeight","fontSize","tabhead","paddingLeft","paddingTop","color","speech","container","icon","FS","classes","room","loading","err","data","variables","roomid","pollInterval","audio","undefined","files","map","voice","push","speaker","file","_id","console","log"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\n\r\nimport { Icon, IconButton, makeStyles } from '@material-ui/core'\r\nimport { PlayCircleFilledOutlined } from '@material-ui/icons';\r\n\r\nimport Loading from './loading'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      box:{\r\n        display:'block'\r\n      },\r\n      tab:{\r\n       \r\n        listStyleType:\"none\",\r\n        borderRadius:\"10px\",\r\n        backgroundColor:\"#D6D5B3\",\r\n        margin:20,\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\"\r\n      },\r\n      tabhead:{\r\n      paddingLeft:10,\r\n      paddingTop:\"10px\",\r\n      color:\"#000000\",\r\n      \r\n      },\r\n      speech:{\r\n        fontSize:\"18px\",\r\n        fontWeight:\"100\",\r\n        paddingLeft:20\r\n      },\r\n      container:{\r\n        // display:\"flex\",\r\n        color:\"#000000\",\r\n\r\n      },\r\n      icon:{\r\n        color:\"#000000\"\r\n      }\r\n\r\n}))\r\nexport default function FS(){\r\n\r\n  \r\n    \r\n    const classes = useStyles();\r\n    \r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n      pollInterval: 500,\r\n    })\r\n   \r\n    if(loading) return <Loading/>\r\n   \r\n   \r\n\r\n    let audio = []\r\n \r\n      if(data === undefined || err || data === null){\r\n        audio = []\r\n      }\r\n      \r\n      else{\r\n    data.files.map((voice)=>{\r\n        \r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab} >\r\n          <div className={classes.container}>\r\n          <div className={classes.tabhead}>\r\n          <AllGuests params={voice.speaker}/>\r\n          </div>\r\n          <p className={classes.speech}>{voice.speech}</p>\r\n          </div>\r\n          <div>\r\n            {/* <IconButton className={classes.icon}>\r\n              <Icon>\r\n                <PlayCircleFilledOutlined/>\r\n              </Icon>\r\n            </IconButton> */}\r\n        <audio key={voice._id}  controls>\r\n           <source  src={`http://localhost:4000/audio/${voice.file}`} type=\"audio/wav\"></source>\r\n        </audio>\r\n        {/*</div>*/}\r\n        </div>\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n\r\n\r\n\r\nif(data.files[0] === undefined){\r\n  console.log(data)\r\n  return(<h1>lets start.... </h1>)\r\n}\r\n\r\nelse{\r\n \r\n    return(\r\n     \r\n      <div className={classes.box}>\r\n        <ul>\r\n        {audio}\r\n        </ul>\r\n\r\n      \r\n      </div>\r\n    )\r\n}\r\n    \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}