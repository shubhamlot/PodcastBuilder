{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\Reactmic.js\";\nimport { ReactMic } from 'react-mic';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Reactmic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startRecording = () => {\n      this.setState({\n        record: true\n      });\n    };\n\n    this.stopRecording = () => {\n      this.setState({\n        record: false\n      });\n    };\n\n    this.onStop = recordedBlob => {\n      const url = URL.createObjectURL(recordedBlob.blob);\n      this.setState({\n        url: url.split(\"blob:\")[1]\n      });\n    };\n\n    this.state = {\n      record: false,\n      url: \"\"\n    }; // this.onStop = this.onStop.bind(this)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactMic, {\n        record: this.state.record,\n        className: \"sound-wave\",\n        onStop: this.onStop,\n        strokeColor: \"#000000\",\n        backgroundColor: \"#FF4081\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.startRecording,\n        type: \"button\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stopRecording,\n        type: \"button\",\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: this.state.url,\n        controls: \"controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/Reactmic.js"],"names":["ReactMic","React","Reactmic","Component","constructor","props","startRecording","setState","record","stopRecording","onStop","recordedBlob","url","URL","createObjectURL","blob","split","state","render"],"mappings":";AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,cATmB,GASF,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAXkB;;AAAA,SAanBC,aAbmB,GAaH,MAAM;AACpB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAfkB;;AAAA,SAmBnBE,MAnBmB,GAmBXC,YAAD,IAAiB;AACtB,YAAMC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,YAAY,CAACI,IAAjC,CAAZ;AAEA,WAAKR,QAAL,CAAc;AAACK,QAAAA,GAAG,EAACA,GAAG,CAACI,KAAJ,CAAU,OAAV,EAAmB,CAAnB;AAAL,OAAd;AACD,KAvBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXT,MAAAA,MAAM,EAAE,KADG;AAEXI,MAAAA,GAAG,EAAC;AAFO,KAAb,CAFiB,CAMjB;AACD;;AAkBDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWT,MADrB;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,MAAM,EAAE,KAAKE,MAHf;AAIE,QAAA,WAAW,EAAC,SAJd;AAKE,QAAA,eAAe,EAAC;AALlB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,OAAO,EAAE,KAAKJ,cAAtB;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,OAAO,EAAE,KAAKG,aAAtB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAO,QAAA,GAAG,EAAE,KAAKQ,KAAL,CAAWL,GAAvB;AAA4B,QAAA,QAAQ,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAxCmD","sourcesContent":["import { ReactMic } from 'react-mic';\r\nimport React from 'react' \r\n\r\nexport default class Reactmic extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      record: false,\r\n      url:\"\"\r\n    }\r\n    // this.onStop = this.onStop.bind(this)\r\n  }\r\n \r\n  startRecording = () => {\r\n    this.setState({ record: true });\r\n  }\r\n \r\n  stopRecording = () => {\r\n    this.setState({ record: false });\r\n  }\r\n \r\n\r\n \r\n  onStop=(recordedBlob)=> {\r\n    const url = URL.createObjectURL(recordedBlob.blob)\r\n   \r\n    this.setState({url:url.split(\"blob:\")[1]})\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactMic\r\n          record={this.state.record}\r\n          className=\"sound-wave\"\r\n          onStop={this.onStop}\r\n          strokeColor=\"#000000\"\r\n          backgroundColor=\"#FF4081\" />\r\n        <button onClick={this.startRecording} type=\"button\">Start</button>\r\n        <button onClick={this.stopRecording} type=\"button\">Stop</button>\r\n        <audio src={this.state.url} controls=\"controls\"/>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}