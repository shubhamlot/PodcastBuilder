{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect } from 'react-router-dom';\nimport React, { useContext } from 'react';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { LockOutlined } from '@material-ui/icons';\nimport { makeStyles, ThemeProvider, Avatar, Button, CssBaseline, TextField, Link, Grid, createMuiTheme, Container, Typography } from '@material-ui/core';\nimport AuthContext from '../context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#000000\"\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#212121\",\n    '&:hover': {\n      background: \"#000000\",\n      color: \"#00000\"\n    }\n  }\n}));\nconst LOGIN_USER = gql`\nquery login($email:String,$password:String){\n    login(email:$email,password:$password){\n      _id\n      username\n      email\n      token\n      tokenExpiration\n      isGuest\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const passwordRef = React.useRef();\n  const emailRef = React.useRef();\n  const [loginuser, {\n    loading,\n    data,\n    err\n  }] = useLazyQuery(LOGIN_USER, {\n    onError: err => {\n      console.log(err);\n    },\n    onCompleted: data => {\n      auth.login(data.login._id, data.login.username, data.login.isGuest);\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const passwordG = passwordRef.current.value;\n    const emailG = emailRef.current.value;\n\n    if (passwordG.trim() === null || emailG.trim() === null) {\n      console.log(\"enter the data\");\n    } else {\n      loginuser({\n        variables: {\n          email: emailG,\n          password: passwordG\n        }\n      });\n      if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 32\n      }, this);\n    }\n  }; //this is all for themes\n\n\n  const theme = createMuiTheme({\n    palette: {\n      type: 'light'\n    }\n  });\n  const classes = useStyles();\n\n  if (err || data === undefined) {\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            children: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  inputRef: emailRef,\n                  required: true,\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  inputRef: passwordRef,\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"current-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.submit,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justify: \"\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"#\",\n                  variant: \"body2\",\n                  children: \"Dont have an account? Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Login, \"uTGA9/DSAo5XgUpLqIV7j7jbp/A=\", false, function () {\n  return [useLazyQuery, useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Login.js"],"names":["Redirect","React","useContext","gql","useLazyQuery","LockOutlined","makeStyles","ThemeProvider","Avatar","Button","CssBaseline","TextField","Link","Grid","createMuiTheme","Container","Typography","AuthContext","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","background","color","LOGIN_USER","Login","auth","passwordRef","useRef","emailRef","loginuser","loading","data","err","onError","console","log","onCompleted","login","_id","username","isGuest","handleSubmit","e","preventDefault","passwordG","current","value","emailG","trim","variables","email","password","palette","type","classes","undefined"],"mappings":"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","sourcesContent":["import {Redirect} from 'react-router-dom'\r\nimport React,{useContext} from 'react';\r\n\r\nimport {gql,useLazyQuery} from '@apollo/client'\r\nimport {LockOutlined} from '@material-ui/icons';\r\n\r\nimport { makeStyles, ThemeProvider, Avatar,Button,CssBaseline,\r\n   TextField,Link,Grid,createMuiTheme,Container,Typography } from '@material-ui/core';\r\n\r\n\r\nimport AuthContext from '../context/auth-context'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#000000\",\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#212121\",\r\n    '&:hover': {\r\n        background: \"#000000\",\r\n        color:\"#00000\"\r\n     },\r\n  },\r\n}));\r\n\r\nconst LOGIN_USER = gql`\r\nquery login($email:String,$password:String){\r\n    login(email:$email,password:$password){\r\n      _id\r\n      username\r\n      email\r\n      token\r\n      tokenExpiration\r\n      isGuest\r\n    }\r\n  }\r\n`\r\nexport default function Login(){\r\n\r\n    const auth = useContext(AuthContext)\r\n    const passwordRef = React.useRef()\r\n    const emailRef = React.useRef()\r\n \r\n    \r\n    const [loginuser,{loading,data,err}] = useLazyQuery(LOGIN_USER,{\r\n        \r\n        onError:(err)=>{console.log(err)},\r\n        onCompleted:(data)=>{\r\n          \r\n          auth.login(data.login._id,data.login.username,data.login.isGuest)\r\n        }\r\n    })\r\n \r\n    \r\n \r\n\r\n \r\n    \r\n    const handleSubmit=(e)=>{\r\n       e.preventDefault()\r\n     \r\n        const passwordG = passwordRef.current.value\r\n        const emailG = emailRef.current.value\r\n\r\n        if(passwordG.trim() === null ||\r\n           emailG.trim() === null){\r\n                console.log(\"enter the data\")\r\n           }\r\n        else{\r\n           \r\n         \r\n            loginuser({variables:{email:emailG,password:passwordG}})\r\n            if(loading) return <p>loading..</p>\r\n            \r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    //this is all for themes\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n          type: 'light'\r\n        },\r\n      });\r\n  const classes = useStyles();\r\n  \r\n  if(err || data === undefined){\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n   <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlined/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n               \r\n                variant=\"outlined\"\r\n                inputRef={emailRef}\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={passwordRef}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                \r\n              />\r\n            </Grid>\r\n            \r\n            \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container justify=\"\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Dont have an account? Sign up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n  }\r\n\r\n  else{\r\n    return (<Redirect to='/home' />)\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}