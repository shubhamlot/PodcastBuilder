{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\CreateChannel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InputLabel, NativeSelect } from '@material-ui/core';\nimport { Redirect } from 'react-router';\nimport defaultimage from '../../../backend/public/images/default.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    margin: 60\n  },\n  img: {\n    width: \"70vh\",\n    hight: \"70vh\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    width: \"100%\",\n    backgroundColor: \"#01579b\",\n    color: \"#ffffff\",\n    '&:hover': {\n      background: \"#006064\"\n    }\n  },\n  buttondisable: {\n    width: \"100%\",\n    backgroundColor: \"#039be5\"\n  },\n  form: {\n    marginTop: 20,\n    width: \"100%\"\n  },\n  textfield: {\n    width: \"100%\"\n  }\n}));\nexport default function CreateChannel() {\n  _s();\n\n  const classes = useStyles();\n  const [contenttype, setContenttype] = React.useState('');\n  const [country, setContry] = React.useState('');\n  const [language, setLanguage] = React.useState('');\n  const [state, setState] = React.useState({\n    file: defaultimage,\n    _issubmitted: false\n  });\n  const [accepted, setAccepted] = React.useState(false);\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'contenttype':\n        setContenttype({\n          contenttype: event.target.value\n        });\n        console.log(event.target.value);\n        break;\n\n      case 'country':\n        setContry({\n          country: event.target.value\n        });\n        break;\n\n      case 'language':\n        setLanguage({\n          language: event.target.value\n        });\n        break;\n\n      case 'accepted':\n        if (accepted) setAccepted(false);else setAccepted(true);\n        break;\n\n      case 'file':\n        let file = URL.createObjectURL(event.target.files[0]);\n        setState({\n          file: file\n        });\n        break;\n    }\n  };\n\n  const channelNameRef = React.useRef();\n  const discriptionRef = React.useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const channelname = channelNameRef.current.value;\n    const discription = discriptionRef.current.value;\n\n    if (channelname.trim() != \"\" || discription.trim() != \"\") {\n      console.log(\"form submitted\");\n      setState({\n        _issubmitted: true\n      });\n    }\n  };\n\n  if (!state._issubmitted) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: false,\n        sm: 4,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: state.file,\n            className: classes.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 7,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Create your channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit,\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  className: classes.textfield,\n                  inputRef: channelNameRef,\n                  id: \"outlined-basic\",\n                  label: \"Channel Name\",\n                  variant: \"outlined\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  inputRef: discriptionRef,\n                  className: classes.textfield,\n                  id: \"outlined-textarea\",\n                  label: \"Discription About Channel\",\n                  rows: 4,\n                  multiline: true,\n                  variant: \"outlined\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n                  id: \"demo-customized-select-native\" // value={age}\n                  ,\n                  onChange: handleChange,\n                  name: \"language\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    \"aria-label\": \"None\",\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"India\",\n                    children: \"India\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n                  id: \"demo-customized-select-native\" // value={age}\n                  ,\n                  onChange: handleChange,\n                  name: \"language\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    \"aria-label\": \"None\",\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"English\",\n                    children: \"English\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Content Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n                  id: \"demo-customized-select-native\" // value={age}\n                  ,\n                  name: \"contenttype\",\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    \"aria-label\": \"None\",\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Education\",\n                    children: \"Education\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"label\",\n                  children: [\"Add Cover Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/png, image/jpeg\",\n                    hidden: true,\n                    name: \"file\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    onChange: handleChange,\n                    name: \"accepted\",\n                    value: accepted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 22\n                  }, this),\n                  label: \"Accept Terms and Conditons\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: accepted ? /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: classes.button,\n                  children: \"Create My Channel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 11\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: classes.buttondisable,\n                  disabled: true,\n                  children: \"Create My Channel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(CreateChannel, \"T4baxflYyawTmL41Un99MKUL5lQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateChannel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChannel\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/CreateChannel.js"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Paper","Box","Grid","LockOutlinedIcon","Typography","makeStyles","InputLabel","NativeSelect","Redirect","defaultimage","useStyles","theme","root","height","image","margin","img","width","hight","paper","spacing","display","flexDirection","alignItems","button","backgroundColor","color","background","buttondisable","form","marginTop","textfield","CreateChannel","classes","contenttype","setContenttype","useState","country","setContry","language","setLanguage","state","setState","file","_issubmitted","accepted","setAccepted","handleChange","event","target","name","value","console","log","URL","createObjectURL","files","channelNameRef","useRef","discriptionRef","handleSubmit","e","preventDefault","channelname","current","discription","trim"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { InputLabel, NativeSelect } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport defaultimage from '../../../backend/public/images/default.jpg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    margin:60,\r\n    \r\n  },\r\n  img:{\r\n    width:\"70vh\",\r\n    hight:\"70vh\"\r\n  },\r\n  \r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n    button:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#01579b\",\r\n    color:\"#ffffff\",\r\n    '&:hover': {\r\n      background: \"#006064\",  \r\n   }\r\n  },\r\n\r\n  buttondisable:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#039be5\"\r\n  },\r\n\r\n  form:{\r\n    marginTop:20,\r\n    width:\"100%\",\r\n  },\r\n  textfield:{\r\n    width:\"100%\"\r\n  },\r\n  \r\n}));\r\n\r\nexport default function CreateChannel() {\r\n  const classes = useStyles();\r\n\r\n  const[contenttype,setContenttype]=React.useState('')\r\n  const[country,setContry]=React.useState('')\r\n  const[language,setLanguage]=React.useState('')\r\n  const [state,setState] = React.useState({\r\n    file:defaultimage,\r\n    _issubmitted:false\r\n  })\r\n  const[accepted,setAccepted] = React.useState(false)\r\n  const handleChange = (event) => {\r\n\r\n    switch(event.target.name){\r\n      case 'contenttype':\r\n        setContenttype({contenttype:event.target.value})\r\n        console.log(event.target.value)\r\n        break\r\n      case 'country':\r\n        setContry({country:event.target.value})\r\n       \r\n        break\r\n      case 'language':\r\n        setLanguage({language:event.target.value})\r\n     \r\n        break\r\n      case 'accepted':\r\n        if(accepted) setAccepted(false)\r\n        else setAccepted(true)\r\n       \r\n        break\r\n      case 'file':\r\n        let file=URL.createObjectURL(event.target.files[0])\r\n        setState({file:file})\r\n        \r\n        break\r\n    }\r\n    \r\n  }\r\n\r\n  const channelNameRef = React.useRef()\r\n  const discriptionRef = React.useRef()\r\n\r\n  const handleSubmit =(e)=>{\r\n    e.preventDefault()\r\n    const channelname = channelNameRef.current.value\r\n    const discription = discriptionRef.current.value\r\n    if(channelname.trim() != \"\" || discription.trim() != \"\"){\r\n      console.log(\"form submitted\")\r\n      setState({_issubmitted:true})\r\n    }\r\n  }\r\n\r\n  if(!state._issubmitted){\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={5}  >\r\n        <div className={classes.image}>\r\n          <img src={state.file} className={classes.img}/>\r\n        </div>\r\n        </Grid>\r\n      <Grid item xs={12} sm={8} md={7} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create your channel\r\n        </Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate> \r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n          <TextField className={classes.textfield} inputRef={channelNameRef} \r\n          id=\"outlined-basic\" label=\"Channel Name\" variant=\"outlined\"  required />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <TextField\r\n          inputRef={discriptionRef}\r\n          className={classes.textfield} \r\n          id=\"outlined-textarea\"\r\n          label=\"Discription About Channel\"\r\n          rows={4}\r\n          multiline\r\n          variant=\"outlined\"\r\n          required\r\n        />\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n          <InputLabel>Country</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          // value={age}\r\n          onChange={handleChange}\r\n          name=\"language\"\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"India\"}>India</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={4}>\r\n          <InputLabel>Language</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          // value={age}\r\n          onChange={handleChange}\r\n          name=\"language\"\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"English\"}>English</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n          <InputLabel>Content Type</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          // value={age}\r\n          name=\"contenttype\"\r\n          onChange={handleChange}\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"Education\"}>Education</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <Button variant=\"contained\" component=\"label\">Add Cover Image\r\n            <input type=\"file\" accept=\"image/png, image/jpeg\" hidden \r\n            name=\"file\" onChange={handleChange}></input>\r\n            </Button>\r\n          \r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox  onChange={handleChange} name=\"accepted\" value={accepted}/>}\r\n            label=\"Accept Terms and Conditons\"\r\n          />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n          {accepted?\r\n          <Button type=\"submit\" className={classes.button}>Create My Channel</Button>\r\n          :<Button type=\"submit\" className={classes.buttondisable} disabled>Create My Channel</Button>}\r\n          </Grid>\r\n          \r\n          \r\n        </Grid>\r\n\r\n       \r\n\r\n        </form>\r\n       \r\n\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n   }\r\n   else{\r\n     return <Redirect to=\"/home\"/>\r\n   }\r\n}"]},"metadata":{},"sourceType":"module"}