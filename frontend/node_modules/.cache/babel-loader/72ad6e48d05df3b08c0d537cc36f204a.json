{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\EditorFiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { gql, useLazyQuery, useQuery } from '@apollo/client'; // import Username from './Username'\n\nimport { useParams } from 'react-router';\nimport AllGuests from './AllGuests';\nimport { FormHelperText, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n        speech\n      }\n  }\n`; // a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'block'\n  },\n  tab: {\n    listStyleType: \"none\",\n    borderRadius: \"1px\",\n    backgroundColor: \"#ede7f6\",\n    marginTop: 1,\n    marginLeft: 5,\n    fontWeight: \"bold\",\n    fontSize: \"15px\"\n  },\n  tabhead: {\n    paddingLeft: \"5px\",\n    paddingTop: \"5px\"\n  },\n  speech: {\n    fontSize: \"15px\",\n    fontWeight: \"100\"\n  }\n}));\nexport default function EditorFiles() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    listItem: []\n  });\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    },\n    pollInterval: 500\n  });\n\n  const handleClick = id => {\n    let templist = state.listItem;\n\n    if (!templist.includes(id)) {\n      templist.push(id);\n      setState({\n        listItem: templist\n      });\n    }\n\n    console.log(\"cliked\");\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 24\n  }, this);\n  let audio = [];\n\n  if (data === undefined || err) {\n    audio = [];\n  } else {\n    data.files.map(voice => {\n      console.log(voice);\n      audio.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.tab,\n        onClickCapture: handleClick(voice._id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tabhead,\n          children: [\"user\", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.speech,\n            children: voice.speech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, voice._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.box,\n    children: audio\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditorFiles, \"4o++sBKE0xJ/gLewSV01OWfGVTc=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = EditorFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorFiles\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/EditorFiles.js"],"names":["React","useEffect","useState","gql","useLazyQuery","useQuery","useParams","AllGuests","FormHelperText","makeStyles","SHOW_FILE","useStyles","theme","box","display","tab","listStyleType","borderRadius","backgroundColor","marginTop","marginLeft","fontWeight","fontSize","tabhead","paddingLeft","paddingTop","speech","EditorFiles","classes","state","setState","listItem","room","loading","err","data","variables","roomid","pollInterval","handleClick","id","templist","includes","push","console","log","audio","undefined","files","map","voice","_id"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useLazyQuery, useQuery } from '@apollo/client'\r\n// import Username from './Username'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\n\r\nimport { FormHelperText, makeStyles } from '@material-ui/core'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n// a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      box:{\r\n        display:'block'\r\n      },\r\n      tab:{\r\n        listStyleType:\"none\",\r\n        borderRadius:\"1px\",\r\n        backgroundColor:\"#ede7f6\",\r\n        marginTop:1,\r\n        marginLeft:5,\r\n        fontWeight:\"bold\",\r\n        fontSize:\"15px\",\r\n        \r\n      },\r\n      tabhead:{\r\n      paddingLeft:\"5px\",\r\n      paddingTop:\"5px\",\r\n     \r\n      },\r\n      speech:{\r\n        fontSize:\"15px\",\r\n        fontWeight:\"100\",\r\n      },\r\n\r\n}))\r\nexport default function EditorFiles(){\r\n\r\n  \r\n\r\n    const classes = useStyles();\r\n    const [state,setState] = useState({\r\n        listItem:[]\r\n    })\r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n      pollInterval: 500,\r\n    })\r\n\r\n    const handleClick = (id)=>{\r\n       let templist = state.listItem\r\n       if(!templist.includes(id)){\r\n           templist.push(id)\r\n           setState({listItem:templist})\r\n       }\r\n       console.log(\"cliked\")\r\n    }\r\n   \r\n    if(loading) return <p>loading</p>\r\n   \r\n    \r\n\r\n    let audio = []\r\n \r\n      if(data === undefined || err ){\r\n        audio = []\r\n      }\r\n      \r\n      else{\r\n    data.files.map((voice)=>{\r\n        console.log(voice)\r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab} onClickCapture={handleClick(voice._id)}>\r\n          <div className={classes.tabhead}>\r\n          {/* <AllGuests params={voice.speaker}/> */}\r\n          user\r\n          <p className={classes.speech}>{voice.speech}</p>\r\n          </div>\r\n          \r\n        {/* <audio key={voice._id}  controls>\r\n           <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/mpeg\"></source>\r\n        </audio> */}\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n    return(\r\n      <div className={classes.box}>\r\n        \r\n        {audio}\r\n        \r\n      </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}