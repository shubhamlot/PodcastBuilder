{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\InitJoinRoom.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InitJoinRoom() {\n  _s();\n\n  const FIND_ROOM = gql`\n    query($id:String){\n        findRoom(id:$id){\n          roomID\n          roomname\n          creator\n        }\n      }\n`;\n  let [state, setstate] = useState('');\n\n  const handleChange = e => {\n    setstate({\n      roomid: e.target.value\n    });\n  };\n\n  const room = useQuery(FIND_ROOM, {\n    variables: {\n      id: state.roomid\n    }\n  });\n  if (room.loading) return null;\n\n  if (room.data != null) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: room,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        name: \"roomid\",\n        value: state.roomid,\n        placeholder: \"eneter the Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: `roomID=${state.roomid}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(InitJoinRoom, \"hpVY/k5E1gek9dS/vPWdN9X6sWY=\", false, function () {\n  return [useQuery];\n});\n\n_c = InitJoinRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"InitJoinRoom\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/InitJoinRoom.js"],"names":["React","useState","gql","useQuery","Redirect","InitJoinRoom","FIND_ROOM","state","setstate","handleChange","e","roomid","target","value","room","variables","id","loading","data"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,QAA6B,OAA7B;AACA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AACA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAIlC,QAAMC,SAAS,GAAGJ,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARI;AAYA,MAAI,CAACK,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,EAAD,CAA/B;;AAED,QAAMQ,YAAY,GAAIC,CAAD,IAAK;AACrBF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,MAAM,EAACD,CAAC,CAACE,MAAF,CAASC;AAAjB,KAAD,CAAR;AACH,GAFF;;AAIK,QAAMC,IAAI,GAAGX,QAAQ,CAACG,SAAD,EAAW;AAC5BS,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAACT,KAAK,CAACI;AAAV;AADiB,GAAX,CAArB;AAGE,MAAGG,IAAI,CAACG,OAAR,EAAiB,OAAO,IAAP;;AAG3B,MAAGH,IAAI,CAACI,IAAL,IAAa,IAAhB,EAAqB;AACjB,wBAGI;AAAM,MAAA,QAAQ,EAAEJ,IAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,QAAQ,EAAEL,YAA9B;AACA,QAAA,IAAI,EAAC,QADL;AACc,QAAA,KAAK,EAAEF,KAAK,CAACI,MAD3B;AACmC,QAAA,WAAW,EAAC;AAD/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AASH,GAVD,MAWI;AACA;AAAA,YAAC,QAAD;AAAU,MAAA,EAAE,EAAG,UAASJ,KAAK,CAACI,MAAO;AAArC;AAAA;AAAA;AAAA;AAAA;AACH;AACA;;GA1CuBN,Y;UAsBHF,Q;;;KAtBGE,Y","sourcesContent":["import {React,useState} from 'react'\r\nimport {  gql, useQuery } from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\nexport default function InitJoinRoom(){\r\n\r\n\r\n\r\n    const FIND_ROOM = gql`\r\n    query($id:String){\r\n        findRoom(id:$id){\r\n          roomID\r\n          roomname\r\n          creator\r\n        }\r\n      }\r\n`\r\n\r\n\r\n\r\n    let [state,setstate] = useState('')\r\n\r\n   const handleChange = (e)=>{\r\n        setstate({roomid:e.target.value})\r\n    }\r\n\r\n        const room = useQuery(FIND_ROOM,{\r\n            variables: {id:state.roomid}\r\n          })\r\n          if(room.loading) return null\r\n          \r\n    \r\nif(room.data != null){\r\n    return(\r\n      \r\n\r\n        <form onSubmit={room}>\r\n            <input type=\"text\"  onChange={handleChange}\r\n            name=\"roomid\" value={state.roomid} placeholder=\"eneter the Room ID\"/>\r\n            <input type=\"submit\" />\r\n        </form>\r\n    )\r\n}\r\nelse{\r\n    <Redirect to={`roomID=${state.roomid}`}/>\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}