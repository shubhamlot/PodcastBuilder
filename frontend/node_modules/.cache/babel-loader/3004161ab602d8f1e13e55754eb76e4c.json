{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query{\n      files\n  }\n`;\nlet audio = [];\n\nfunction obj() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE);\n  if (loading) return null;\n  data.files.map(voice => {\n    audio.push( /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: `http://localhost:4000/Audio/${voice}`,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this));\n  } //   images.push(<li> <img key={pic} src={`http://localhost:4000/${pic}`} alt={pic}/></li>)\n  );\n}\n\n_s(obj, \"hLsNeCM6uPLZqykYOKQzV+Uk/qM=\", false, function () {\n  return [useQuery];\n});\n\nexport default function FS() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: obj,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), audio]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","gql","useQuery","SHOW_FILE","audio","obj","loading","error","data","files","map","voice","push","FS"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;;AAGA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA,CAJA;AAMA,IAAIG,KAAK,GAAG,EAAZ;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAK;AAAEC,IAAAA,OAAF;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB,MAAwBN,QAAQ,CAACC,SAAD,CAArC;AAEI,MAAIG,OAAJ,EAAa,OAAO,IAAP;AAIbE,EAAAA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAgBC,KAAD,IAAS;AAEpBP,IAAAA,KAAK,CAACQ,IAAN,eACI;AAAO,MAAA,QAAQ,MAAf;AAAA,6BACF;AAAQ,QAAA,GAAG,EAAG,+BAA8BD,KAAM,EAAlD;AAAqD,QAAA,IAAI,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADJ;AAKC,GAPL,CAQA;AARA;AAUF;;GAjBON,G;UACoBH,Q;;;AAkB7B,eAAe,SAASW,EAAT,GAAa;AAKxB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAER,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOH;KAZuBS,E","sourcesContent":["\r\nimport React from 'react'\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n  query{\r\n      files\r\n  }\r\n`\r\n\r\nlet audio = []\r\n\r\nfunction obj (){\r\nconst{ loading,error,data} = useQuery(SHOW_FILE)\r\n\r\n    if (loading) return null\r\n     \r\n  \r\n  \r\n    data.files.map((voice)=>{\r\n\r\n        audio.push(\r\n            <audio controls>\r\n          <source src={`http://localhost:4000/Audio/${voice}`} type=\"audio/mpeg\"></source>\r\n        </audio>\r\n        )\r\n        }\r\n    //   images.push(<li> <img key={pic} src={`http://localhost:4000/${pic}`} alt={pic}/></li>)\r\n    \r\n)}\r\n\r\nexport default function FS(){\r\n    \r\n\r\n   \r\n    \r\n    return(\r\n      <div >\r\n        <h1>click</h1>\r\n        <button onClick={obj}>click</button>\r\n        {audio}\r\n      </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}