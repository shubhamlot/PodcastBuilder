{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\EpisodeDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core';\nimport logo from \"../logo.svg\";\nimport { useContext } from 'react';\nimport AuthContext from '../context/auth-context';\nimport FindEpisode from './FindEpisode';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: 20,\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  text: {\n    padding: 40,\n    color: \"#ffffff\"\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nconst EPISODEDISPLAY = gql`\n  query displayEpisode ($userId:String){\n      displayEpisode(userId:$userId)\n  }\n`;\nconst GET_EPISODE = gql`\n   query reviewEpisode($EpisodeID:String){\n    reviewEpisode(EpisodeID:$EpisodeID){\n        EpisodeName\n        discription\n        audioFile\n    }\n  }\n`;\nexport default function EpisodeDisplay() {\n  _s();\n\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\"\n    }\n  });\n  const {\n    loading,\n    data\n  } = useQuery(EPISODEDISPLAY, {\n    variables: {\n      userId: auth.userId\n    } //   pollInterval: 500,\n\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 22\n  }, this);\n  console.log(data.displayEpisode);\n\n  if (data) {\n    let bucket = [];\n    data.displayEpisode.map(data => {\n      bucket.push( /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(FindEpisode, {\n          param: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: bucket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        className: classes.backdrop,\n        open: open,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.text,\n        children: \"Hmm... Seems Like You have not created any Episode Yet !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.text,\n        children: \"Be a Creator to share your idea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(EpisodeDisplay, \"3tgyFI1Ej+U1a39fynH9fZt8I5k=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = EpisodeDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"EpisodeDisplay\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/EpisodeDisplay.js"],"names":["gql","useMutation","useQuery","createMuiTheme","Grid","makeStyles","Paper","ThemeProvider","useContext","AuthContext","FindEpisode","Backdrop","CircularProgress","Button","React","useStyles","theme","paper","padding","spacing","margin","display","overflow","flexDirection","text","color","backdrop","zIndex","drawer","EPISODEDISPLAY","GET_EPISODE","EpisodeDisplay","classes","auth","palette","type","loading","data","variables","userId","open","setOpen","useState","handleClose","handleToggle","console","log","displayEpisode","bucket","map","push"],"mappings":"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","sourcesContent":["\r\nimport {gql, useMutation, useQuery} from '@apollo/client';\r\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\nimport {useContext} from 'react'\r\nimport AuthContext from '../context/auth-context'\r\nimport FindEpisode from './FindEpisode'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport React from 'react'\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin:20,\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n      },\r\n      text:{\r\n        padding:40,\r\n        color:\"#ffffff\"\r\n      },\r\n      backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}))\r\n\r\n\r\nconst EPISODEDISPLAY = gql`\r\n  query displayEpisode ($userId:String){\r\n      displayEpisode(userId:$userId)\r\n  }\r\n`\r\n\r\nconst GET_EPISODE = gql`\r\n   query reviewEpisode($EpisodeID:String){\r\n    reviewEpisode(EpisodeID:$EpisodeID){\r\n        EpisodeName\r\n        discription\r\n        audioFile\r\n    }\r\n  }\r\n`\r\n\r\nexport default function EpisodeDisplay(){\r\n    const classes = useStyles()\r\n    const auth = useContext(AuthContext)\r\n    const theme = createMuiTheme({\r\n      palette:{\r\n        type:\"dark\"\r\n      }\r\n    })\r\n\r\n    const{ loading,data} = useQuery(EPISODEDISPLAY,{\r\n      variables: {userId:auth.userId},\r\n    //   pollInterval: 500,\r\n    })\r\n\r\n     const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n\r\n\r\n\r\n   if(loading) return<p>loading</p>\r\n    console.log(data.displayEpisode)\r\n\r\n    if(data){\r\n    let bucket = []\r\n\r\n    data.displayEpisode.map(data=>{\r\n      bucket.push(<Grid><FindEpisode param={data}/></Grid>)\r\n    })\r\n  \r\n    return(\r\n      <ThemeProvider theme={theme}>\r\n\r\n     \r\n\r\n      <Grid container spacing={3}>\r\n       {bucket}\r\n\r\n    </Grid>\r\n    <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </ThemeProvider>\r\n    )\r\n  }\r\n\r\n  else{\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <h1 className={classes.text}>Hmm... Seems Like You have not created any Episode Yet !</h1>\r\n      <h1 className={classes.text}>Be a Creator to share your idea</h1>\r\n      </ThemeProvider>)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}