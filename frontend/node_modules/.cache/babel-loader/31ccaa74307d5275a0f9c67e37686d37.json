{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Guestlists.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React, { useContext } from 'react';\nimport { useParams } from 'react-router';\nimport AuthContext from '../context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Guestlists() {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    room\n  } = useParams();\n  const UPLOAD_GUEST = gql`\n    mutation($guestid:String,$roomid:String){\n        addToRoom(guestid:$guestid,roomid:$roomid)\n      }\n`;\n  const [uploadGuest] = useMutation(UPLOAD_GUEST, {\n    onCompleted: data => {\n      console.log(data.addToRoom);\n    }\n  });\n  uploadGuest({\n    variables: {\n      guestid: auth.userId,\n      roomid: room\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"guest list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Guestlists, \"zs9OmXWpDjiz+Q33HJKcDlU/y/I=\", false, function () {\n  return [useParams, useMutation];\n});\n\n_c = Guestlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guestlists\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Guestlists.js"],"names":["useMutation","gql","React","useContext","useParams","AuthContext","Guestlists","auth","room","UPLOAD_GUEST","uploadGuest","onCompleted","data","console","log","addToRoom","variables","guestid","userId","roomid"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAIA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC,QAAMC,IAAI,GAAGJ,UAAU,CAACE,WAAD,CAAvB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWJ,SAAS,EAA1B;AAEA,QAAMK,YAAY,GAAGR,GAAI;AAC7B;AACA;AACA;AACA,CAJI;AAKJ,QAAK,CAACS,WAAD,IAAgBV,WAAW,CAACS,YAAD,EAAc;AAC1CE,IAAAA,WAAW,EAAEC,IAAI,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,SAAjB;AACH;AAHyC,GAAd,CAAhC;AAMGL,EAAAA,WAAW,CAAC;AAACM,IAAAA,SAAS,EAAC;AAACC,MAAAA,OAAO,EAACV,IAAI,CAACW,MAAd;AAAqBC,MAAAA,MAAM,EAACX;AAA5B;AAAX,GAAD,CAAX;AAIC,sBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AACH;;GArBuBF,U;UAGHF,S,EAOAJ,W;;;KAVGM,U","sourcesContent":["import { useMutation } from '@apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport React, { useContext } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport AuthContext from '../context/auth-context'\r\n\r\n\r\n\r\nexport default function Guestlists(){\r\n\r\n    const auth = useContext(AuthContext)\r\n    const { room } = useParams()\r\n\r\n    const UPLOAD_GUEST = gql`\r\n    mutation($guestid:String,$roomid:String){\r\n        addToRoom(guestid:$guestid,roomid:$roomid)\r\n      }\r\n`\r\nconst[uploadGuest] = useMutation(UPLOAD_GUEST,{\r\n    onCompleted: data => {\r\n        console.log(data.addToRoom)\r\n    }\r\n})\r\n\r\n   uploadGuest({variables:{guestid:auth.userId,roomid:room}})\r\n\r\n     \r\n\r\n    return<h1>guest list</h1>\r\n}"]},"metadata":{},"sourceType":"module"}