{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\AudioProcess.js\";\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mp3Recorder = new MicRecorder({\n  bitRate: 128\n});\n\nclass AudioProcess extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.start = () => {\n      if (this.state.isBlocked) {\n        console.log('Permission Denied');\n      } else {\n        Mp3Recorder.start().then(() => {\n          this.setState({\n            isRecording: true\n          });\n        }).catch(e => console.error(e));\n      }\n    };\n\n    this.stop = () => {\n      Mp3Recorder.stop().getMp3().then(([buffer, blob]) => {\n        console.log(blob);\n        const blobURL = URL.createObjectURL(blob);\n        this.setState({\n          blobURL,\n          isRecording: false,\n          blob\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.stplayprev = () => {\n      console.log(this.state.blob);\n      const blobURLprev = URL.createObjectURL(this.state.blob);\n      this.setState({\n        blobURLprev\n      });\n    };\n\n    this.state = {\n      isRecording: false,\n      blobURL: '',\n      blobURLprev: '',\n      blob: '',\n      isBlocked: false\n    };\n  }\n\n  componentDidMount() {\n    navigator.getUserMedia({\n      audio: true\n    }, () => {\n      console.log('Permission Granted');\n      this.setState({\n        isBlocked: false\n      });\n    }, () => {\n      console.log('Permission Denied');\n      this.setState({\n        isBlocked: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.start,\n        disabled: this.state.isRecording,\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stop,\n        disabled: !this.state.isRecording,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: this.state.blobURL,\n        controls: \"controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stplayprev,\n        children: \"ply prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: this.state.blobURLprev,\n        controls: \"controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AudioProcess;","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/AudioProcess.js"],"names":["MicRecorder","React","useState","Mp3Recorder","bitRate","AudioProcess","Component","constructor","props","start","state","isBlocked","console","log","then","setState","isRecording","catch","e","error","stop","getMp3","buffer","blob","blobURL","URL","createObjectURL","stplayprev","blobURLprev","componentDidMount","navigator","getUserMedia","audio","render"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAJ,CAAgB;AAAEI,EAAAA,OAAO,EAAE;AAAX,CAAhB,CAApB;;AACA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA2BlBC,KA3BkB,GA2BV,MAAM;AACV,UAAI,KAAKC,KAAL,CAAWC,SAAf,EAA0B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,OAFD,MAEO;AACLV,QAAAA,WAAW,CACRM,KADH,GAEGK,IAFH,CAEQ,MAAM;AACV,eAAKC,QAAL,CAAc;AAAEC,YAAAA,WAAW,EAAE;AAAf,WAAd;AACD,SAJH,EAIKC,KAJL,CAIYC,CAAD,IAAON,OAAO,CAACO,KAAR,CAAcD,CAAd,CAJlB;AAKD;AACF,KArCe;;AAAA,SAuChBE,IAvCgB,GAuCT,MAAM;AACXjB,MAAAA,WAAW,CACRiB,IADH,GAEGC,MAFH,GAGGP,IAHH,CAGQ,CAAC,CAACQ,MAAD,EAASC,IAAT,CAAD,KAAoB;AACtBX,QAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AAEF,cAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAhB;AACA,aAAKR,QAAL,CAAc;AAAES,UAAAA,OAAF;AAAWR,UAAAA,WAAW,EAAE,KAAxB;AAA+BO,UAAAA;AAA/B,SAAd;AACD,OARH,EAQKN,KARL,CAQYC,CAAD,IAAON,OAAO,CAACC,GAAR,CAAYK,CAAZ,CARlB;AASD,KAjDe;;AAAA,SAkDhBS,UAlDgB,GAkDL,MAAI;AACXf,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWa,IAAvB;AACF,YAAMK,WAAW,GAAGH,GAAG,CAACC,eAAJ,CAAoB,KAAKhB,KAAL,CAAWa,IAA/B,CAApB;AACA,WAAKR,QAAL,CAAc;AAACa,QAAAA;AAAD,OAAd;AACD,KAtDe;;AAGd,SAAKlB,KAAL,GAAa;AACTM,MAAAA,WAAW,EAAE,KADJ;AAETQ,MAAAA,OAAO,EAAE,EAFA;AAGTI,MAAAA,WAAW,EAAE,EAHJ;AAITL,MAAAA,IAAI,EAAC,EAJI;AAKTZ,MAAAA,SAAS,EAAE;AALF,KAAb;AAOH;;AACDkB,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,SAAS,CAACC,YAAV,CAAuB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAvB,EACI,MAAM;AACJpB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAJL,EAKI,MAAM;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KARL;AAWH;;AAgCDsB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKxB,KAAtB;AAA6B,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWM,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAIZ;AAAQ,QAAA,OAAO,EAAE,KAAKI,IAAtB;AAA4B,QAAA,QAAQ,EAAE,CAAC,KAAKV,KAAL,CAAWM,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJY,eAOZ;AAAO,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWc,OAAvB;AAAgC,QAAA,QAAQ,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAPY,eAQZ;AAAQ,QAAA,OAAO,EAAE,KAAKG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARY,eAYZ;AAAO,QAAA,GAAG,EAAE,KAAKjB,KAAL,CAAWkB,WAAvB;AAAoC,QAAA,QAAQ,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAZY;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAzEqC;;AA4E1C,eAAevB,YAAf","sourcesContent":["import MicRecorder from 'mic-recorder-to-mp3';\r\nimport React, { useState } from 'react'\r\n\r\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\r\nclass AudioProcess extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            isRecording: false,\r\n            blobURL: '',\r\n            blobURLprev: '',\r\n            blob:'',\r\n            isBlocked: false,\r\n          }\r\n    }\r\n    componentDidMount(){\r\n        navigator.getUserMedia({ audio: true },\r\n            () => {\r\n              console.log('Permission Granted');\r\n              this.setState({ isBlocked: false });\r\n            },\r\n            () => {\r\n              console.log('Permission Denied');\r\n              this.setState({ isBlocked: true })\r\n            },\r\n          );\r\n          \r\n    }\r\n\r\n    \r\n\r\n    start = () => {\r\n        if (this.state.isBlocked) {\r\n          console.log('Permission Denied');\r\n        } else {\r\n          Mp3Recorder\r\n            .start()\r\n            .then(() => {\r\n              this.setState({ isRecording: true });\r\n            }).catch((e) => console.error(e));\r\n        }\r\n      };\r\n\r\n      stop = () => {\r\n        Mp3Recorder\r\n          .stop()\r\n          .getMp3()\r\n          .then(([buffer, blob]) => {\r\n              console.log(blob)\r\n              \r\n            const blobURL = URL.createObjectURL(blob)\r\n            this.setState({ blobURL, isRecording: false, blob });\r\n          }).catch((e) => console.log(e));\r\n      };\r\n      stplayprev=()=>{\r\n          console.log(this.state.blob)\r\n        const blobURLprev = URL.createObjectURL(this.state.blob)\r\n        this.setState({blobURLprev})\r\n      }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button onClick={this.start} disabled={this.state.isRecording}>\r\n  Record\r\n</button>\r\n<button onClick={this.stop} disabled={!this.state.isRecording}>\r\n  Stop\r\n</button>\r\n<audio src={this.state.blobURL} controls=\"controls\" />\r\n<button onClick={this.stplayprev} >\r\n\r\n ply prev\r\n</button>\r\n<audio src={this.state.blobURLprev} controls=\"controls\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioProcess"]},"metadata":{},"sourceType":"module"}