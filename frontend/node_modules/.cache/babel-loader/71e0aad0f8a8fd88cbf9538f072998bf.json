{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\userlogin.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useContext } from 'react';\nimport { userMutation, gql, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport { FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\nimport AuthContext from \"../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Userlogin() {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const UPLOAD_USER = gql`\n    mutation($username:String,$email:String,$password:String){\n        addUser(username:$username,email:$email,password:$password){\n          _id\n          username\n          email\n          isGuest\n        }\n      }\n`;\n  const [createUser] = useMutation(UPLOAD_USER, {\n    onCompleted: data => {\n      console.log();\n    }\n  });\n  let [state, setState] = useState({\n    username: '',\n    password: '',\n    email: '',\n    submitted: false\n  });\n\n  const handleUsername = e => {\n    console.log(state);\n    setState({\n      username: e.target.value,\n      password: state.password,\n      email: state.email\n    });\n  };\n\n  const handlePassword = e => {\n    console.log(state);\n    setState({\n      username: state.username,\n      password: e.target.value,\n      email: state.email\n    });\n  };\n\n  const handleEmail = e => {\n    console.log(state);\n    setState({\n      username: state.username,\n      password: state.password,\n      email: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createUser({\n      variables: {\n        username: state.username,\n        email: state.email,\n        password: state.password\n      }\n    }).then(res => {\n      // console.log(res.data.addUser)\n      if (res.data) {\n        // console.log(res.data.addUser._id)\n        auth.login(res.data.addUser._id, res.data.addUser.username);\n      }\n    });\n    setState({\n      submitted: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"my-input\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"my-iut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"my-iut\",\n        children: \"Email ddress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"my-inut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"my-input\",\n        children: \"Email adress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"my-inut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 1\n  }, this);\n} //     if(!state.submitted){\n//     return(\n//         <form onSubmit={handleSubmit}>\n//             <input type=\"text\" placeholder=\"guestname\" name=\"username\" value={state.username}\n//             onChange={handleUsername}/>\n//             <input type=\"password\" placeholder=\"password\" name=\"password\" value={state.password}\n//             onChange={handlePassword}/>\n//             <input type=\"text\" placeholder=\"email\" name=\"email\" value={state.email}\n//             onChange={handleEmail}/>\n//             <input type=\"submit\"/>\n//         </form>\n//     )\n//     }\n//     else{\n//         return <Redirect to='/initJoinRoom'/>\n//     }\n// }\n\n_s(Userlogin, \"3cmxFvnCdnDQsn6Wg+gJkIJfC20=\", false, function () {\n  return [useMutation];\n});\n\n_c = Userlogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userlogin\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/userlogin.js"],"names":["React","useState","useContext","userMutation","gql","useMutation","Redirect","FormControl","InputLabel","Input","FormHelperText","AuthContext","Userlogin","auth","UPLOAD_USER","createUser","onCompleted","data","console","log","state","setState","username","password","email","submitted","handleUsername","e","target","value","handlePassword","handleEmail","handleSubmit","preventDefault","variables","then","res","login","addUser","_id"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,WAA5B,QAA+C,gBAA/C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,EAAqBC,UAArB,EAAgCC,KAAhC,EAAsCC,cAAtC,QAA4D,mBAA5D;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAGA,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAE/B,QAAMC,IAAI,GAAGX,UAAU,CAACS,WAAD,CAAvB;AACA,QAAMG,WAAW,GAAGV,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATI;AAWJ,QAAK,CAACW,UAAD,IAAeV,WAAW,CAACS,WAAD,EAAa;AACxCE,IAAAA,WAAW,EAAEC,IAAI,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR;AACH;AAHuC,GAAb,CAA/B;AAOA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC;AAC7BqB,IAAAA,QAAQ,EAAC,EADoB;AAE7BC,IAAAA,QAAQ,EAAC,EAFoB;AAG7BC,IAAAA,KAAK,EAAC,EAHuB;AAI7BC,IAAAA,SAAS,EAAC;AAJmB,GAAD,CAAhC;;AAOA,QAAMC,cAAc,GAAIC,CAAD,IAAK;AACxBT,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,QAAQ,EAACK,CAAC,CAACC,MAAF,CAASC,KAAnB;AAAyBN,MAAAA,QAAQ,EAACH,KAAK,CAACG,QAAxC;AAAiDC,MAAAA,KAAK,EAACJ,KAAK,CAACI;AAA7D,KAAD,CAAR;AACH,GAHD;;AAIA,QAAMM,cAAc,GAAIH,CAAD,IAAK;AACxBT,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,QAAQ,EAACF,KAAK,CAACE,QAAhB;AAAyBC,MAAAA,QAAQ,EAACI,CAAC,CAACC,MAAF,CAASC,KAA3C;AAAiDL,MAAAA,KAAK,EAACJ,KAAK,CAACI;AAA7D,KAAD,CAAR;AACH,GAHD;;AAIA,QAAMO,WAAW,GAAIJ,CAAD,IAAK;AACrBT,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,QAAQ,EAACF,KAAK,CAACE,QAAhB;AAAyBC,MAAAA,QAAQ,EAACH,KAAK,CAACG,QAAxC;AAAiDC,MAAAA,KAAK,EAACG,CAAC,CAACC,MAAF,CAASC;AAAhE,KAAD,CAAR;AACH,GAHD;;AAKA,QAAMG,YAAY,GAAIL,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACM,cAAF;AACAlB,IAAAA,UAAU,CAAC;AAAEmB,MAAAA,SAAS,EAAE;AAAEZ,QAAAA,QAAQ,EAACF,KAAK,CAACE,QAAjB;AACpBE,QAAAA,KAAK,EAACJ,KAAK,CAACI,KADQ;AACFD,QAAAA,QAAQ,EAACH,KAAK,CAACG;AADb;AAAb,KAAD,CAAV,CAEKY,IAFL,CAEUC,GAAG,IAAE;AACP;AACA,UAAGA,GAAG,CAACnB,IAAP,EAAY;AACR;AACAJ,QAAAA,IAAI,CAACwB,KAAL,CAAWD,GAAG,CAACnB,IAAJ,CAASqB,OAAT,CAAiBC,GAA5B,EAAgCH,GAAG,CAACnB,IAAJ,CAASqB,OAAT,CAAiBhB,QAAjD;AACH;AACJ,KARL;AASID,IAAAA,QAAQ,CAAC;AAACI,MAAAA,SAAS,EAAC;AAAX,KAAD,CAAR;AAGP,GAdD;;AAiBA,sBACA;AAAA,4BACC,QAAC,WAAD;AAAA,8BACD,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,eAED,QAAC,KAAD;AAAO,QAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,cAFC;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKA,QAAC,WAAD;AAAA,8BACA,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eASA,QAAC,WAAD;AAAA,8BACA,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAgBC,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA5FwBb,S;UAcJP,W;;;KAdIO,S","sourcesContent":["import {React,useState,useContext} from 'react'\r\nimport { userMutation, gql, useMutation } from '@apollo/client'\r\nimport { Redirect } from 'react-router';\r\nimport { FormControl,InputLabel,Input,FormHelperText } from '@material-ui/core';\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\n\r\nexport default function Userlogin(){\r\n\r\n    const auth = useContext(AuthContext)\r\n    const UPLOAD_USER = gql`\r\n    mutation($username:String,$email:String,$password:String){\r\n        addUser(username:$username,email:$email,password:$password){\r\n          _id\r\n          username\r\n          email\r\n          isGuest\r\n        }\r\n      }\r\n`\r\n\r\nconst[createUser] = useMutation(UPLOAD_USER,{\r\n    onCompleted: data => {\r\n        console.log()\r\n    }\r\n})\r\n\r\n\r\nlet [state, setState] = useState({\r\n    username:'',\r\n    password:'',\r\n    email:'',\r\n    submitted:false\r\n});\r\n\r\nconst handleUsername = (e)=>{\r\n    console.log(state)\r\n    setState({username:e.target.value,password:state.password,email:state.email})\r\n}\r\nconst handlePassword = (e)=>{\r\n    console.log(state)\r\n    setState({username:state.username,password:e.target.value,email:state.email})\r\n}\r\nconst handleEmail = (e)=>{\r\n    console.log(state)\r\n    setState({username:state.username,password:state.password,email:e.target.value})\r\n}\r\n\r\nconst handleSubmit = (e)=>{\r\n    e.preventDefault()\r\n    createUser({ variables: { username:state.username,\r\n        email:state.email,password:state.password } })\r\n        .then(res=>{\r\n            // console.log(res.data.addUser)\r\n            if(res.data){\r\n                // console.log(res.data.addUser._id)\r\n                auth.login(res.data.addUser._id,res.data.addUser.username)\r\n            }\r\n        })\r\n        setState({submitted:true})\r\n    \r\n    \r\n}\r\n\r\n\r\nreturn(\r\n<div>\r\n <FormControl>\r\n<InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n<Input id=\"my-iut\"/>\r\n</FormControl>\r\n<FormControl>\r\n<InputLabel htmlFor=\"my-iut\">Email ddress</InputLabel>\r\n<Input id=\"my-inut\"/>\r\n</FormControl>\r\n<FormControl>\r\n<InputLabel htmlFor=\"my-input\">Email adress</InputLabel>\r\n<Input id=\"my-inut\"/>\r\n</FormControl>\r\n</div>)\r\n\r\n}\r\n\r\n//     if(!state.submitted){\r\n//     return(\r\n//         <form onSubmit={handleSubmit}>\r\n//             <input type=\"text\" placeholder=\"guestname\" name=\"username\" value={state.username}\r\n//             onChange={handleUsername}/>\r\n//             <input type=\"password\" placeholder=\"password\" name=\"password\" value={state.password}\r\n//             onChange={handlePassword}/>\r\n//             <input type=\"text\" placeholder=\"email\" name=\"email\" value={state.email}\r\n//             onChange={handleEmail}/>\r\n//             <input type=\"submit\"/>\r\n//         </form>\r\n//     )\r\n//     }\r\n//     else{\r\n//         return <Redirect to='/initJoinRoom'/>\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}