{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\EpisodeDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core';\nimport logo from \"../logo.svg\";\nimport { useContext } from 'react';\nimport AuthContext from '../context/auth-context';\nimport FindEpisode from './FindEpisode';\nimport React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport ShowEpisode from './ShowEpisode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: 20,\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  text: {\n    padding: 40,\n    color: \"#ffffff\"\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#ffffff'\n  }\n}));\nconst EPISODEDISPLAY = gql`\n  query displayEpisode ($userId:String){\n      displayEpisode(userId:$userId)\n  }\n`;\nconst GET_EPISODE = gql`\n   query reviewEpisode($EpisodeID:String){\n    reviewEpisode(EpisodeID:$EpisodeID){\n        EpisodeName\n        discription\n        audioFile\n    }\n  }\n`;\nexport default function EpisodeDisplay() {\n  _s();\n\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\"\n    }\n  });\n  const {\n    loading,\n    data\n  } = useQuery(EPISODEDISPLAY, {\n    variables: {\n      userId: auth.userId\n    } //   pollInterval: 500,\n\n  });\n  const [open, setOpen] = React.useState(false);\n  const [id, setID] = React.useState(null);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = data => {\n    setID(data);\n    setOpen(!open);\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 23\n  }, this);\n\n  if (data) {\n    console.log(id);\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: data.displayEpisode.map(data => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(FindEpisode, {\n                param: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"#ffffff\",\n                value: data,\n                onClick: () => {\n                  handleToggle(data);\n                },\n                children: \"Episode Detail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        className: classes.backdrop,\n        open: open,\n        onClick: handleClose,\n        children: id !== null ? /*#__PURE__*/_jsxDEV(ShowEpisode, {\n          param: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.text,\n        children: \"Hmm... Seems Like You have not created any Episode Yet !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.text,\n        children: \"Be a Creator to share your idea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(EpisodeDisplay, \"31l8jZYg1ArUFZbGnFohAbBbw5U=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = EpisodeDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"EpisodeDisplay\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/EpisodeDisplay.js"],"names":["gql","useMutation","useQuery","createMuiTheme","Grid","makeStyles","Paper","ThemeProvider","useContext","AuthContext","FindEpisode","React","Backdrop","CircularProgress","Button","ShowEpisode","useStyles","theme","paper","padding","spacing","margin","display","overflow","flexDirection","text","color","backdrop","zIndex","drawer","EPISODEDISPLAY","GET_EPISODE","EpisodeDisplay","classes","auth","palette","type","loading","data","variables","userId","open","setOpen","useState","id","setID","handleClose","handleToggle","console","log","displayEpisode","map"],"mappings":"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","sourcesContent":["\r\nimport {gql, useMutation, useQuery} from '@apollo/client';\r\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\nimport {useContext} from 'react'\r\nimport AuthContext from '../context/auth-context'\r\nimport FindEpisode from './FindEpisode'\r\nimport React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShowEpisode from './ShowEpisode'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin:20,\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n      },\r\n      text:{\r\n        padding:40,\r\n        color:\"#ffffff\"\r\n      },\r\n       backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#ffffff',\r\n   \r\n  },\r\n}))\r\n\r\n\r\nconst EPISODEDISPLAY = gql`\r\n  query displayEpisode ($userId:String){\r\n      displayEpisode(userId:$userId)\r\n  }\r\n`\r\n\r\nconst GET_EPISODE = gql`\r\n   query reviewEpisode($EpisodeID:String){\r\n    reviewEpisode(EpisodeID:$EpisodeID){\r\n        EpisodeName\r\n        discription\r\n        audioFile\r\n    }\r\n  }\r\n`\r\n\r\nexport default function EpisodeDisplay(){\r\n    const classes = useStyles()\r\n    const auth = useContext(AuthContext)\r\n    const theme = createMuiTheme({\r\n      palette:{\r\n        type:\"dark\"\r\n      }\r\n    })\r\n\r\n    const{ loading,data} = useQuery(EPISODEDISPLAY,{\r\n      variables: {userId:auth.userId},\r\n    //   pollInterval: 500,\r\n    })\r\n\r\n      const [open, setOpen] = React.useState(false);\r\n      const [id,setID] = React.useState(null);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = (data) => {\r\n    setID(data);\r\n    setOpen(!open);\r\n  };\r\n\r\n\r\n\r\n   if(loading) return <CircularProgress/>\r\n   \r\n    if(data){\r\n    \r\n    console.log(id)\r\n    return(\r\n      <ThemeProvider theme={theme}>\r\n\r\n      \r\n\r\n      <Grid container spacing={3}>\r\n       { data.displayEpisode.map(data=>{\r\n\r\n      return (<Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <Paper className={classes.paper}>\r\n        <FindEpisode param={data}/>\r\n         <Button variant=\"outlined\" color=\"#ffffff\" value={data} onClick={()=>{handleToggle(data)}}>\r\n        Episode Detail\r\n      </Button>\r\n        </Paper>\r\n        </Grid>\r\n        )\r\n    })}\r\n\r\n    </Grid>\r\n     <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n\r\n        {id!==null?<ShowEpisode param={id}/>:<p/>}\r\n\r\n      </Backdrop>\r\n    </ThemeProvider>\r\n    )\r\n  }\r\n\r\n  else{\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <h1 className={classes.text}>Hmm... Seems Like You have not created any Episode Yet !</h1>\r\n      <h1 className={classes.text}>Be a Creator to share your idea</h1>\r\n      </ThemeProvider>)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}