{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\EpisodeDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core';\nimport logo from \"../logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: 20,\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n}));\nconst EPISODEDISPLAY = gql`\n  query displayEpisode ($userId:String){\n      displayEpisode(userId:$userId)\n  }\n`;\nconst GET_EPISODE = gql`\n   query reviewEpisode($EpisodeID:String){\n    reviewEpisode(EpisodeID:$EpisodeID){\n        EpisodeName\n        discription\n        audioFile\n    }\n  }\n`;\nexport default function EpisodeDisplay() {\n  _s();\n\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\"\n    }\n  });\n  const {\n    loading,\n    data\n  } = useQuery(EPISODEDISPLAY, {\n    variables: {\n      userId: auth.userId\n    } //   pollInterval: 500,\n\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              alt: \"pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Podcast Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"here is the new podcast...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EpisodeDisplay, \"Ro+SSnoDgCBVr8w8rc0VkZwgWq0=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = EpisodeDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"EpisodeDisplay\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/EpisodeDisplay.js"],"names":["gql","useMutation","useQuery","createMuiTheme","Grid","makeStyles","Paper","ThemeProvider","useStyles","theme","paper","padding","spacing","margin","display","overflow","flexDirection","EPISODEDISPLAY","GET_EPISODE","EpisodeDisplay","classes","auth","useContext","AuthContext","palette","type","loading","data","variables","userId","logo"],"mappings":";;;AACA,SAAQA,GAAR,EAAaC,WAAb,EAA0BC,QAA1B,QAAyC,gBAAzC;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,UAA/B,EAA2CC,KAA3C,EAAkDC,aAAlD,QAAuE,mBAAvE;;;AAIA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAU;AACnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,MAAM,EAAC,EAFJ;AAGHC,IAAAA,OAAO,EAAE,MAHN;AAIHC,IAAAA,QAAQ,EAAE,MAJP;AAKHC,IAAAA,aAAa,EAAE;AALZ;AAD4B,CAAV,CAAD,CAA5B;AAWA,MAAMC,cAAc,GAAGjB,GAAI;AAC3B;AACA;AACA;AACA,CAJA;AAMA,MAAMkB,WAAW,GAAGlB,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAe,SAASmB,cAAT,GAAyB;AAAA;;AACpC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,IAAI,GAAGC,UAAU,CAACC,WAAD,CAAvB;AACA,QAAMd,KAAK,GAAGN,cAAc,CAAC;AAC3BqB,IAAAA,OAAO,EAAC;AACNC,MAAAA,IAAI,EAAC;AADC;AADmB,GAAD,CAA5B;AAMA,QAAK;AAAEC,IAAAA,OAAF;AAAUC,IAAAA;AAAV,MAAkBzB,QAAQ,CAACe,cAAD,EAAgB;AAC7CW,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAACR,IAAI,CAACQ;AAAb,KADkC,CAE/C;;AAF+C,GAAhB,CAA/B;AAOA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEpB,KAAtB;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,6BAEA,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,EAAE,EAAE,CAArC;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEW,OAAO,CAACV,KAA1B;AAAA,iCACI;AAAA,oCACA;AAAK,cAAA,GAAG,EAAEoB,IAAV;AAAgB,cAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBH;;GApCuBX,c;UACJX,S,EAQON,Q;;;KATHiB,c","sourcesContent":["\r\nimport {gql, useMutation, useQuery} from '@apollo/client';\r\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin:20,\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n      },\r\n}))\r\n\r\n\r\nconst EPISODEDISPLAY = gql`\r\n  query displayEpisode ($userId:String){\r\n      displayEpisode(userId:$userId)\r\n  }\r\n`\r\n\r\nconst GET_EPISODE = gql`\r\n   query reviewEpisode($EpisodeID:String){\r\n    reviewEpisode(EpisodeID:$EpisodeID){\r\n        EpisodeName\r\n        discription\r\n        audioFile\r\n    }\r\n  }\r\n`\r\n\r\nexport default function EpisodeDisplay(){\r\n    const classes = useStyles()\r\n    const auth = useContext(AuthContext)\r\n    const theme = createMuiTheme({\r\n      palette:{\r\n        type:\"dark\"\r\n      }\r\n    })\r\n\r\n    const{ loading,data} = useQuery(EPISODEDISPLAY,{\r\n      variables: {userId:auth.userId},\r\n    //   pollInterval: 500,\r\n    })\r\n\r\n   \r\n\r\n    return(\r\n      <ThemeProvider theme={theme}>\r\n      <Grid container spacing={3}>\r\n        {/* repeate this full grid while printing */}\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <Paper className={classes.paper}>\r\n            <div>\r\n            <img src={logo} alt=\"pic\"/>\r\n            <h3>Podcast Name</h3>\r\n            <p>here is the new podcast...</p>\r\n            </div>\r\n            </Paper>\r\n      </Grid>\r\n\r\n      \r\n      {/* end */}\r\n     \r\n    </Grid>\r\n    </ThemeProvider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}