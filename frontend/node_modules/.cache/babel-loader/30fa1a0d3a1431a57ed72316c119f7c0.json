{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\Deposits.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography'; // import Title from './Title';\n\nimport { useParams } from 'react-router';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport AllGuests from './AllGuests';\nimport AllUsers from './AllUsers';\nimport Title from './Title';\nimport { InfoSharp } from '@material-ui/icons';\nimport '@material-ui/icons';\nimport { Button, Icon, IconButton, Popover } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  depositContext: {\n    flex: 1\n  },\n  title: {\n    color: \"#607d8b\"\n  },\n  typography: {\n    padding: theme.spacing(2)\n  }\n}));\nconst SHOW_FILE = gql`\nquery findroom($id:String){\n  findRoom(id:$id){\n    roomID\n    roomname\n    creator\n  }\n}\n`;\nexport default function Deposits() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    room\n  } = useParams();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      id: room\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 24\n  }, this);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-describedby\": id,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        children: /*#__PURE__*/_jsxDEV(InfoSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.typography,\n        children: \"The content of the Popover.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.title,\n      children: data.findRoom.roomname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllUsers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deposits, \"GuZIgP9RmrXMc+ap/yiTc6I/xEQ=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = Deposits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposits\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/Deposits.js"],"names":["React","Link","createMuiTheme","makeStyles","ThemeProvider","Typography","useParams","gql","useQuery","AllGuests","AllUsers","Title","InfoSharp","Button","Icon","IconButton","Popover","preventDefault","event","useStyles","theme","depositContext","flex","title","color","typography","padding","spacing","SHOW_FILE","Deposits","classes","room","anchorEl","setAnchorEl","useState","loading","error","data","variables","id","handleClick","currentTarget","handleClose","open","Boolean","undefined","vertical","horizontal","findRoom","roomname"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Title from './Title';\r\nimport { useParams } from 'react-router';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/client';\r\nimport AllGuests from './AllGuests';\r\nimport AllUsers from './AllUsers'\r\nimport Title from './Title';\r\nimport { InfoSharp } from '@material-ui/icons';\r\nimport {} from '@material-ui/icons'\r\nimport { Button, Icon, IconButton, Popover } from '@material-ui/core';\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n  title:{\r\n    color:\"#607d8b\"\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst SHOW_FILE = gql`\r\nquery findroom($id:String){\r\n  findRoom(id:$id){\r\n    roomID\r\n    roomname\r\n    creator\r\n  }\r\n}\r\n`\r\n\r\nexport default function Deposits() {\r\n\r\n  const classes = useStyles();\r\n  const { room } = useParams()\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n    variables: {id:room},\r\n    \r\n  })\r\n \r\n  if (loading ) return <p>{data}</p>\r\n\r\n \r\n  \r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n\r\n        <IconButton aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        <Icon>\r\n          <InfoSharp/>\r\n        </Icon>\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n      </Popover>\r\n      \r\n      <h3 className={classes.title}>\r\n      {data.findRoom.roomname}\r\n      </h3>\r\n      <AllUsers/>\r\n    \r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}