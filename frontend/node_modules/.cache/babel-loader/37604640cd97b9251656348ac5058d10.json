{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\userlogin.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useContext } from 'react';\nimport { userMutation, gql, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport AuthContext from \"../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Guest {\n  // constructor(username,password,email){\n  //     this.username = username\n  //     this.password = password\n  //     this.email = email\n  // }\n  handleUsername(e) {\n    console.log(e.target);\n  }\n\n  handlePassword(e) {}\n\n  handleEmail() {}\n\n}\n\nexport default function Userlogin() {\n  _s();\n\n  const g = new Guest();\n  const auth = useContext(AuthContext);\n  const UPLOAD_USER = gql`\n    mutation($username:String,$email:String,$password:String){\n        addUser(username:$username,email:$email,password:$password){\n          _id\n          username\n          email\n          isGuest\n        }\n      }\n`;\n  const [createUser] = useMutation(UPLOAD_USER, {\n    onCompleted: data => {\n      console.log();\n    }\n  });\n  let [state, setState] = useState({\n    username: '',\n    password: '',\n    email: '',\n    submitted: false\n  });\n\n  const handleUsername = e => {// console.log(state)\n    // setState({username:e.target.value,password:state.password,email:state.email})\n  };\n\n  const handlePassword = e => {// console.log(state)\n    // setState({username:state.username,password:e.target.value,email:state.email})\n  };\n\n  const handleEmail = e => {// console.log(state)\n    // setState({username:state.username,password:state.password,email:e.target.value})\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createUser({\n      variables: {\n        username: state.username,\n        email: state.email,\n        password: state.password\n      }\n    }).then(res => {\n      // console.log(res.data.addUser)\n      if (res.data) {\n        // console.log(res.data.addUser._id)\n        auth.login(res.data.addUser._id, res.data.addUser.username);\n      }\n    });\n    setState({\n      submitted: true\n    });\n  };\n\n  if (!state.submitted) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"guestname\",\n        name: \"username\",\n        onChange: g.handleUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        onChange: handlePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        name: \"email\",\n        onChange: handleEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/initJoinRoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Userlogin, \"3cmxFvnCdnDQsn6Wg+gJkIJfC20=\", false, function () {\n  return [useMutation];\n});\n\n_c = Userlogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userlogin\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/userlogin.js"],"names":["React","useState","useContext","userMutation","gql","useMutation","Redirect","AuthContext","Guest","handleUsername","e","console","log","target","handlePassword","handleEmail","Userlogin","g","auth","UPLOAD_USER","createUser","onCompleted","data","state","setState","username","password","email","submitted","handleSubmit","preventDefault","variables","then","res","login","addUser","_id"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,WAA5B,QAA+C,gBAA/C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAGA,MAAMC,KAAN,CAAW;AACP;AACA;AACA;AACA;AACA;AAGAC,EAAAA,cAAc,CAACC,CAAD,EAAG;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACH;;AAEDC,EAAAA,cAAc,CAACJ,CAAD,EAAG,CAEhB;;AAEDK,EAAAA,WAAW,GAAE,CAAE;;AAhBR;;AAqBX,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAG/B,QAAMC,CAAC,GAAG,IAAIT,KAAJ,EAAV;AACA,QAAMU,IAAI,GAAGhB,UAAU,CAACK,WAAD,CAAvB;AACA,QAAMY,WAAW,GAAGf,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATI;AAWJ,QAAK,CAACgB,UAAD,IAAef,WAAW,CAACc,WAAD,EAAa;AACxCE,IAAAA,WAAW,EAAEC,IAAI,IAAI;AACjBX,MAAAA,OAAO,CAACC,GAAR;AACH;AAHuC,GAAb,CAA/B;AAOA,MAAI,CAACW,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC;AAC7BwB,IAAAA,QAAQ,EAAC,EADoB;AAE7BC,IAAAA,QAAQ,EAAC,EAFoB;AAG7BC,IAAAA,KAAK,EAAC,EAHuB;AAI7BC,IAAAA,SAAS,EAAC;AAJmB,GAAD,CAAhC;;AAOA,QAAMnB,cAAc,GAAIC,CAAD,IAAK,CACxB;AACA;AACH,GAHD;;AAIA,QAAMI,cAAc,GAAIJ,CAAD,IAAK,CACxB;AACA;AACH,GAHD;;AAIA,QAAMK,WAAW,GAAIL,CAAD,IAAK,CACrB;AACA;AACH,GAHD;;AAKA,QAAMmB,YAAY,GAAInB,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACoB,cAAF;AACAV,IAAAA,UAAU,CAAC;AAAEW,MAAAA,SAAS,EAAE;AAAEN,QAAAA,QAAQ,EAACF,KAAK,CAACE,QAAjB;AACpBE,QAAAA,KAAK,EAACJ,KAAK,CAACI,KADQ;AACFD,QAAAA,QAAQ,EAACH,KAAK,CAACG;AADb;AAAb,KAAD,CAAV,CAEKM,IAFL,CAEUC,GAAG,IAAE;AACP;AACA,UAAGA,GAAG,CAACX,IAAP,EAAY;AACR;AACAJ,QAAAA,IAAI,CAACgB,KAAL,CAAWD,GAAG,CAACX,IAAJ,CAASa,OAAT,CAAiBC,GAA5B,EAAgCH,GAAG,CAACX,IAAJ,CAASa,OAAT,CAAiBV,QAAjD;AACH;AACJ,KARL;AASID,IAAAA,QAAQ,CAAC;AAACI,MAAAA,SAAS,EAAC;AAAX,KAAD,CAAR;AAGP,GAdD;;AAgBI,MAAG,CAACL,KAAK,CAACK,SAAV,EAAoB;AACpB,wBACI;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,WAA/B;AAA2C,QAAA,IAAI,EAAC,UAAhD;AACA,QAAA,QAAQ,EAAEZ,CAAC,CAACR;AADZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,UAAnC;AAA8C,QAAA,IAAI,EAAC,UAAnD;AACA,QAAA,QAAQ,EAAEK;AADV;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,IAAI,EAAC,OAA5C;AACA,QAAA,QAAQ,EAAEC;AADV;AAAA;AAAA;AAAA;AAAA,cALJ,eAOI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWC,GAZD,MAaI;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;GA3EuBC,S;UAgBJX,W;;;KAhBIW,S","sourcesContent":["import {React,useState,useContext} from 'react'\r\nimport { userMutation, gql, useMutation } from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\n\r\nclass Guest{\r\n    // constructor(username,password,email){\r\n    //     this.username = username\r\n    //     this.password = password\r\n    //     this.email = email\r\n    // }\r\n\r\n\r\n    handleUsername(e){\r\n        console.log(e.target)\r\n    }\r\n\r\n    handlePassword(e){\r\n\r\n    }\r\n \r\n    handleEmail(){}\r\n    \r\n}\r\n\r\n\r\nexport default function Userlogin(){\r\n\r\n\r\n    const g = new Guest();\r\n    const auth = useContext(AuthContext)\r\n    const UPLOAD_USER = gql`\r\n    mutation($username:String,$email:String,$password:String){\r\n        addUser(username:$username,email:$email,password:$password){\r\n          _id\r\n          username\r\n          email\r\n          isGuest\r\n        }\r\n      }\r\n`\r\n\r\nconst[createUser] = useMutation(UPLOAD_USER,{\r\n    onCompleted: data => {\r\n        console.log()\r\n    }\r\n})\r\n\r\n\r\nlet [state, setState] = useState({\r\n    username:'',\r\n    password:'',\r\n    email:'',\r\n    submitted:false\r\n});\r\n\r\nconst handleUsername = (e)=>{\r\n    // console.log(state)\r\n    // setState({username:e.target.value,password:state.password,email:state.email})\r\n}\r\nconst handlePassword = (e)=>{\r\n    // console.log(state)\r\n    // setState({username:state.username,password:e.target.value,email:state.email})\r\n}\r\nconst handleEmail = (e)=>{\r\n    // console.log(state)\r\n    // setState({username:state.username,password:state.password,email:e.target.value})\r\n}\r\n\r\nconst handleSubmit = (e)=>{\r\n    e.preventDefault()\r\n    createUser({ variables: { username:state.username,\r\n        email:state.email,password:state.password } })\r\n        .then(res=>{\r\n            // console.log(res.data.addUser)\r\n            if(res.data){\r\n                // console.log(res.data.addUser._id)\r\n                auth.login(res.data.addUser._id,res.data.addUser.username)\r\n            }\r\n        })\r\n        setState({submitted:true})\r\n    \r\n    \r\n}\r\n\r\n    if(!state.submitted){\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"guestname\" name=\"username\" \r\n            onChange={g.handleUsername}/>\r\n            <input type=\"password\" placeholder=\"password\" name=\"password\" \r\n            onChange={handlePassword}/>\r\n            <input type=\"text\" placeholder=\"email\" name=\"email\" \r\n            onChange={handleEmail}/>\r\n            <input type=\"submit\"/>\r\n        </form>\r\n    )\r\n    }\r\n    else{\r\n        return <Redirect to='/initJoinRoom'/>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}