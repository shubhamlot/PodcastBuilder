{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { gql, useLazyQuery, useMutation, useQuery } from '@apollo/client';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { login } from '../context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright() {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    children: ['Copyright Â© ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      children: \"Podcast Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), ' ', new Date().getFullYear(), '.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#000000\"\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#212121\",\n    '&:hover': {\n      background: \"#000000\",\n      color: \"#00000\"\n    }\n  }\n}));\nconst LOGIN_USER = gql`\nquery login($email:String,$password:String){\n    login(email:$email,password:$password){\n      _id\n      username\n      email\n      isGuest\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n\n  let [state, setState] = useState({\n    eml: \"\",\n    pass: \"\"\n  });\n  const passwordRef = React.useRef();\n  const emailRef = React.useRef();\n  const [loginuser, {\n    loading,\n    data,\n    called,\n    err\n  }] = useLazyQuery(LOGIN_USER, {\n    onCompleted: () => {\n      console.log(data);\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const password = passwordRef.current.value;\n    const email = emailRef.current.value;\n\n    if (password.trim() === null || email.trim() === null) {\n      console.log(\"enter the data\");\n    } else {\n      setState({\n        eml: email,\n        pass: password\n      });\n\n      if (state.eml != \"\" || state.pass != \"\") {\n        loginuser({\n          variables: {\n            email: email,\n            password: password\n          }\n        }); // console.log(state.eml)\n\n        if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 32\n        }, this);\n      }\n    }\n  }; //this is all for themes\n\n\n  const theme = createMuiTheme({\n    palette: {\n      type: 'light'\n    }\n  });\n  const classes = useStyles();\n\n  if (err || data === undefined) {\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  inputRef: passwordRef,\n                  required: true,\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  inputRef: emailRef,\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"current-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.submit,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justify: \"\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"#\",\n                  variant: \"body2\",\n                  children: \"Dont have an account? Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 5,\n          children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(Login, \"X6DoHfXeMQ+3VQfTlQUY5KVepg8=\", false, function () {\n  return [useLazyQuery, useStyles];\n});\n\n_c2 = Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/Login.js"],"names":["Redirect","React","useState","Avatar","Button","CssBaseline","TextField","gql","useLazyQuery","useMutation","useQuery","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","ThemeProvider","Container","createMuiTheme","login","Copyright","Date","getFullYear","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","background","color","LOGIN_USER","Login","state","setState","eml","pass","passwordRef","useRef","emailRef","loginuser","loading","data","called","err","onCompleted","console","log","handleSubmit","e","preventDefault","password","current","value","email","trim","variables","palette","type","classes","undefined"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,GAAR,EAAYC,YAAZ,EAAyBC,WAAzB,EAAsCC,QAAtC,QAAqD,gBAArD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,0BAA1C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAAQC,KAAR,QAAoB,yBAApB;;;AAIA,SAASC,SAAT,GAAqB;AACnB,sBACE,QAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,KAAK,EAAC,QAAxD;AAAA,eACG,cADH,eAEE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIU,GAJV,EAKG,IAAIC,IAAJ,GAAWC,WAAX,EALH,EAMG,GANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQF,S;AAeT,MAAMG,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AAGvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAHgC;AASvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENM,IAAAA,eAAe,EAAE;AAFX,GAT+B;AAcvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfT,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAdiC;AAkBvCS,EAAAA,MAAM,EAAE;AACNJ,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CADF;AAENM,IAAAA,eAAe,EAAE,SAFX;AAGN,eAAW;AACPI,MAAAA,UAAU,EAAE,SADL;AAEPC,MAAAA,KAAK,EAAC;AAFC;AAHL;AAlB+B,CAAZ,CAAD,CAA5B;AA4BA,MAAMC,UAAU,GAAGjC,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAUA,eAAe,SAASkC,KAAT,GAAgB;AAAA;;AAE3B,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBzC,QAAQ,CAAC;AAC7B0C,IAAAA,GAAG,EAAC,EADyB;AAE7BC,IAAAA,IAAI,EAAC;AAFwB,GAAD,CAAhC;AAIA,QAAMC,WAAW,GAAG7C,KAAK,CAAC8C,MAAN,EAApB;AACA,QAAMC,QAAQ,GAAG/C,KAAK,CAAC8C,MAAN,EAAjB;AAGA,QAAM,CAACE,SAAD,EAAW;AAACC,IAAAA,OAAD;AAASC,IAAAA,IAAT;AAAcC,IAAAA,MAAd;AAAqBC,IAAAA;AAArB,GAAX,IAAwC7C,YAAY,CAACgC,UAAD,EAAY;AAElEc,IAAAA,WAAW,EAAC,MAAI;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAAkB;AAF+B,GAAZ,CAA1D;;AAUA,QAAMM,YAAY,GAAEC,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEC,UAAMC,QAAQ,GAAGd,WAAW,CAACe,OAAZ,CAAoBC,KAArC;AACA,UAAMC,KAAK,GAAGf,QAAQ,CAACa,OAAT,CAAiBC,KAA/B;;AAEA,QAAGF,QAAQ,CAACI,IAAT,OAAoB,IAApB,IACAD,KAAK,CAACC,IAAN,OAAiB,IADpB,EACyB;AACjBT,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACJ,KAHJ,MAII;AACAb,MAAAA,QAAQ,CAAC;AAACC,QAAAA,GAAG,EAACmB,KAAL;AAAWlB,QAAAA,IAAI,EAACe;AAAhB,OAAD,CAAR;;AACA,UAAGlB,KAAK,CAACE,GAAN,IAAa,EAAb,IAAmBF,KAAK,CAACG,IAAN,IAAc,EAApC,EAAuC;AACvCI,QAAAA,SAAS,CAAC;AAACgB,UAAAA,SAAS,EAAC;AAACF,YAAAA,KAAK,EAACA,KAAP;AAAaH,YAAAA,QAAQ,EAACA;AAAtB;AAAX,SAAD,CAAT,CADuC,CAEvC;;AACA,YAAGV,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX;AAEJ;AAEJ,GApBD,CApB2B,CA2C3B;;;AACA,QAAMzB,KAAK,GAAGN,cAAc,CAAC;AACzB+C,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC;AADgB,GAAD,CAA5B;AAKF,QAAMC,OAAO,GAAG5C,SAAS,EAAzB;;AAEA,MAAG6B,GAAG,IAAIF,IAAI,KAAKkB,SAAnB,EAA6B;AAC7B,wBACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAE5C,KAAtB;AAAA,6BACH,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAA4B,QAAA,QAAQ,EAAC,IAArC;AAAA,gCACG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAK,UAAA,SAAS,EAAE2C,OAAO,CAAC1C,KAAxB;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAE0C,OAAO,CAACpC,MAA3B;AAAA,mCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,IAAtB;AAA2B,YAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAM,YAAA,SAAS,EAAEoC,OAAO,CAACjC,IAAzB;AAA+B,YAAA,QAAQ,EAAEsB,YAAzC;AAAuD,YAAA,UAAU,MAAjE;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCAEE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACE,QAAC,SAAD;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,QAAQ,EAAEX,WAHZ;AAIE,kBAAA,QAAQ,MAJV;AAKE,kBAAA,SAAS,MALX;AAME,kBAAA,EAAE,EAAC,OANL;AAOE,kBAAA,KAAK,EAAC,eAPR;AAQE,kBAAA,IAAI,EAAC,OARP;AASE,kBAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF,eAgBE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACE,QAAC,SAAD;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,QAAQ,EAAEE,QAHZ;AAIE,kBAAA,QAAQ,MAJV;AAKE,kBAAA,SAAS,MALX;AAME,kBAAA,IAAI,EAAC,UANP;AAOE,kBAAA,KAAK,EAAC,UAPR;AAQE,kBAAA,IAAI,EAAC,UARP;AASE,kBAAA,EAAE,EAAC,UATL;AAUE,kBAAA,YAAY,EAAC;AAVf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAmCE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,OAAO,EAAC,WAHV;AAIE,cAAA,KAAK,EAAC,SAJR;AAKE,cAAA,SAAS,EAAEoB,OAAO,CAAC/B,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnCF,eA4CE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAC,EAAxB;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC,GAAX;AAAe,kBAAA,OAAO,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,eA8DG,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA9DH;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YADJ;AAsEC,GAvED,MAyEI;AACF,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAEF;;GAhIuBI,K;UAU0BjC,Y,EAuChCgB,S;;;MAjDMiB,K","sourcesContent":["import {Redirect} from 'react-router-dom'\r\nimport React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {gql,useLazyQuery,useMutation, useQuery} from '@apollo/client'\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport {login} from '../context/auth-context'\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" >\r\n         Podcast Builder\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#000000\",\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#212121\",\r\n    '&:hover': {\r\n        background: \"#000000\",\r\n        color:\"#00000\"\r\n     },\r\n  },\r\n}));\r\n\r\nconst LOGIN_USER = gql`\r\nquery login($email:String,$password:String){\r\n    login(email:$email,password:$password){\r\n      _id\r\n      username\r\n      email\r\n      isGuest\r\n    }\r\n  }\r\n`\r\nexport default function Login(){\r\n\r\n    let [state, setState] = useState({\r\n        eml:\"\",\r\n        pass:\"\"\r\n        })\r\n    const passwordRef = React.useRef()\r\n    const emailRef = React.useRef()\r\n \r\n    \r\n    const [loginuser,{loading,data,called,err}] = useLazyQuery(LOGIN_USER,{\r\n        \r\n        onCompleted:()=>{console.log(data)}\r\n    })\r\n \r\n    \r\n \r\n\r\n  \r\n    \r\n    const handleSubmit=(e)=>{\r\n       e.preventDefault()\r\n     \r\n        const password = passwordRef.current.value\r\n        const email = emailRef.current.value\r\n\r\n        if(password.trim() === null ||\r\n           email.trim() === null){\r\n                console.log(\"enter the data\")\r\n           }\r\n        else{\r\n            setState({eml:email,pass:password})\r\n            if(state.eml != \"\" || state.pass != \"\"){\r\n            loginuser({variables:{email:email,password:password}})\r\n            // console.log(state.eml)\r\n            if(loading) return <p>loading..</p>\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    //this is all for themes\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n          type: 'light'\r\n        },\r\n      });\r\n  const classes = useStyles();\r\n  \r\n  if(err || data === undefined){\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n   <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                \r\n                variant=\"outlined\"\r\n                inputRef={passwordRef}\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                \r\n                variant=\"outlined\"\r\n                inputRef={emailRef}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                \r\n              />\r\n            </Grid>\r\n            \r\n            \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container justify=\"\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Dont have an account? Sign up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n  }\r\n\r\n  else{\r\n    return <Redirect to=\"/home\"/>\r\n  }\r\n  \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}