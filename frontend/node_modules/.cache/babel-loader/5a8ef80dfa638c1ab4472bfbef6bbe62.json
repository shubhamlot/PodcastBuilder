{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\FindEpisode.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useContext } from 'react';\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core';\nimport logo from \"../logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: 20,\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  container: {\n    width: \"20vh\"\n  }\n}));\nconst GET_EPISODE = gql`\n   query reviewEpisode($EpisodeID:String){\n    reviewEpisode(EpisodeID:$EpisodeID){\n        EpisodeName\n        discription\n        img\n    }\n  }\n`;\nexport default function FindEpisode(param) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    loading,\n    data\n  } = useQuery(GET_EPISODE, {\n    variables: {\n      EpisodeID: param.param\n    } //   pollInterval: 500,\n\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 22\n  }, this);\n  console.log(data.reviewEpisode);\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.image,\n        src: `http://localhost:4000/images/${data.reviewEpisode.img}`,\n        alt: \"pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: data.reviewEpisode.EpisodeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.reviewEpisode.discription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(FindEpisode, \"DwypvNLheCI32uPWrhjfNakwnMY=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = FindEpisode;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindEpisode\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/FindEpisode.js"],"names":["gql","useMutation","useQuery","useContext","createMuiTheme","Grid","makeStyles","Paper","ThemeProvider","useStyles","theme","paper","padding","spacing","margin","display","overflow","flexDirection","image","width","height","container","GET_EPISODE","FindEpisode","param","classes","loading","data","variables","EpisodeID","console","log","reviewEpisode","img","EpisodeName","discription"],"mappings":";;;AACA,SAAQA,GAAR,EAAaC,WAAb,EAA0BC,QAA1B,QAAyC,gBAAzC;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,UAA/B,EAA2CC,KAA3C,EAAkDC,aAAlD,QAAuE,mBAAvE;;;AAGA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAU;AACnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,MAAM,EAAC,EAFJ;AAGHC,IAAAA,OAAO,EAAE,MAHN;AAIHC,IAAAA,QAAQ,EAAE,MAJP;AAKHC,IAAAA,aAAa,EAAE;AALZ,GAD4B;AASnCC,EAAAA,KAAK,EAAC;AACJC,IAAAA,KAAK,EAAC,MADF;AAEJC,IAAAA,MAAM,EAAC;AAFH,GAT6B;AAanCC,EAAAA,SAAS,EAAC;AACRF,IAAAA,KAAK,EAAC;AADE;AAbyB,CAAV,CAAD,CAA5B;AAmBA,MAAMG,WAAW,GAAGtB,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAe,SAASuB,WAAT,CAAqBC,KAArB,EAA2B;AAAA;;AAExC,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACC,QAAK;AAAEiB,IAAAA,OAAF;AAAUC,IAAAA;AAAV,MAAkBzB,QAAQ,CAACoB,WAAD,EAAa;AACzCM,IAAAA,SAAS,EAAE;AAACC,MAAAA,SAAS,EAACL,KAAK,CAACA;AAAjB,KAD8B,CAE3C;;AAF2C,GAAb,CAA/B;AAIA,MAAGE,OAAH,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACVI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,aAAjB;;AACF,MAAGL,IAAH,EAAQ;AACR,wBAGQ,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,OAAO,CAACd,KAA1B;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAEc,OAAO,CAACP,KAAxB;AAA+B,QAAA,GAAG,EAAG,gCAA+BS,IAAI,CAACK,aAAL,CAAmBC,GAAI,EAA3F;AAA8F,QAAA,GAAG,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAKN,IAAI,CAACK,aAAL,CAAmBE;AAAxB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAIP,IAAI,CAACK,aAAL,CAAmBG;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR;AAaG;AACJ;;GAxBuBZ,W;UAENd,S,EACQP,Q;;;KAHFqB,W","sourcesContent":["\r\nimport {gql, useMutation, useQuery} from '@apollo/client';\r\nimport {useContext} from 'react'\r\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin:20,\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n      },\r\n\r\n    image:{\r\n      width:\"100%\",\r\n      height:\"100%\"\r\n    },\r\n    container:{\r\n      width:\"20vh\"\r\n    }\r\n\r\n}))\r\n\r\nconst GET_EPISODE = gql`\r\n   query reviewEpisode($EpisodeID:String){\r\n    reviewEpisode(EpisodeID:$EpisodeID){\r\n        EpisodeName\r\n        discription\r\n        img\r\n    }\r\n  }\r\n`\r\n\r\nexport default function FindEpisode(param){\r\n\r\n  const classes = useStyles()\r\n   const{ loading,data} = useQuery(GET_EPISODE,{\r\n      variables: {EpisodeID:param.param},\r\n    //   pollInterval: 500,\r\n    })\r\n   if(loading)return <p>loading..</p>\r\n    console.log(data.reviewEpisode)\r\n  if(data){\r\n  return (\r\n\r\n          \r\n          <Paper className={classes.paper}>\r\n           \r\n            <img className={classes.image} src={`http://localhost:4000/images/${data.reviewEpisode.img}`} alt=\"pic\"/>\r\n            <h3>{data.reviewEpisode.EpisodeName}</h3>\r\n            <p>{data.reviewEpisode.discription}</p>\r\n            \r\n            </Paper>\r\n          \r\n     \r\n      )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}