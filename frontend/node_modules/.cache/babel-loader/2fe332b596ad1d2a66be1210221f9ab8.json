{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Username.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIND = gql`\n    query find($userid:[String]){\n      finduser(id:$userid){\n        _id\n        username\n        email\n        isGuest\n      }\n    }\n`;\nexport default function Username(ids) {\n  ids.ids.map(id => {\n    console.log(id);\n  }); // const{ loading,error,data} = useQuery(FIND,{\n  //     variables: {userid:ids.ids}\n  //   })\n  //   if (loading) return null\n  // console.log(ids.ids)\n  // return data.finduser.username\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n}\n_c = Username;\n\nvar _c;\n\n$RefreshReg$(_c, \"Username\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Username.js"],"names":["React","useState","gql","useQuery","FIND","Username","ids","map","id","console","log"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;;AAKA,MAAMC,IAAI,GAAGF,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAYA,eAAe,SAASG,QAAT,CAAkBC,GAAlB,EAAsB;AAEjCA,EAAAA,GAAG,CAACA,GAAJ,CAAQC,GAAR,CAAYC,EAAE,IAAE;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACH,GAFD,EAFiC,CAKjC;AACA;AACA;AACA;AACA;AACA;;AAGA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;KAduBH,Q","sourcesContent":["\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\n\r\n\r\n\r\nconst FIND = gql`\r\n    query find($userid:[String]){\r\n      finduser(id:$userid){\r\n        _id\r\n        username\r\n        email\r\n        isGuest\r\n      }\r\n    }\r\n`\r\n\r\n\r\nexport default function Username(ids){\r\n\r\n    ids.ids.map(id=>{\r\n        console.log(id)\r\n    })\r\n    // const{ loading,error,data} = useQuery(FIND,{\r\n    //     variables: {userid:ids.ids}\r\n    //   })\r\n    //   if (loading) return null\r\n    // console.log(ids.ids)\r\n    // return data.finduser.username\r\n    \r\n   \r\n    return <h1>hi</h1>\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}