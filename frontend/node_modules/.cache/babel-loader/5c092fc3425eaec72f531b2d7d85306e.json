{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { gql, useLazyQuery, useQuery } from '@apollo/client';\nimport Username from './Username';\nimport { useParams } from 'react-router';\nimport AllGuests from '../componets2/AllGuests';\nimport { ValidationContext } from 'graphql';\nimport { FormHelperText, Icon, IconButton, makeStyles } from '@material-ui/core';\nimport { PlayCircleFilledOutlined } from '@material-ui/icons';\nimport Loading from '../componets2/loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query file ($roomid:String){\n      files(roomid:$roomid){\n        _id\n        speaker\n        file\n        speech\n      }\n  }\n`; // a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'block'\n  },\n  tab: {\n    listStyleType: \"none\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#D6D5B3\",\n    margin: 20,\n    fontWeight: \"bold\",\n    fontSize: \"20px\"\n  },\n  tabhead: {\n    paddingLeft: \"40px\",\n    paddingTop: \"10px\",\n    color: \"#000000\",\n    flex: 1\n  },\n  speech: {\n    fontSize: \"18px\",\n    fontWeight: \"100\"\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    color: \"#000000\"\n  }\n}));\nexport default function FS() {\n  _s();\n\n  const classes = useStyles();\n  const [src, setSrc] = useState(null);\n  const {\n    room\n  } = useParams();\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(SHOW_FILE, {\n    variables: {\n      roomid: room\n    },\n    pollInterval: 500\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 24\n  }, this);\n  let audio = [];\n\n  if (data === undefined || err || data === null) {\n    audio = [];\n  } else {\n    data.files.map(voice => {\n      audio.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.tab,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.tabhead,\n            children: [/*#__PURE__*/_jsxDEV(AllGuests, {\n              params: voice.speaker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.speech,\n              children: voice.speech\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.icon,\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: /*#__PURE__*/_jsxDEV(PlayCircleFilledOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, voice._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this));\n    });\n  }\n\n  if (data.files[0] === undefined) {\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"lets start.... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: audio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(FS, \"YoCAcFmcss4FfE3uM5zhwXtTPj8=\", false, function () {\n  return [useStyles, useParams, useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","useEffect","useState","gql","useLazyQuery","useQuery","Username","useParams","AllGuests","ValidationContext","FormHelperText","Icon","IconButton","makeStyles","PlayCircleFilledOutlined","Loading","SHOW_FILE","useStyles","theme","box","display","tab","listStyleType","borderRadius","backgroundColor","margin","fontWeight","fontSize","tabhead","paddingLeft","paddingTop","color","flex","speech","container","icon","FS","classes","src","setSrc","room","loading","err","data","variables","roomid","pollInterval","audio","undefined","files","map","voice","push","speaker","_id","console","log"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useLazyQuery, useQuery } from '@apollo/client'\r\nimport Username from './Username'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from '../componets2/AllGuests'\r\nimport { ValidationContext } from 'graphql'\r\nimport { FormHelperText, Icon, IconButton, makeStyles } from '@material-ui/core'\r\nimport { PlayCircleFilledOutlined } from '@material-ui/icons';\r\n\r\nimport Loading from '../componets2/loading'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n// a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      box:{\r\n        display:'block'\r\n      },\r\n      tab:{\r\n       \r\n        listStyleType:\"none\",\r\n        borderRadius:\"10px\",\r\n        backgroundColor:\"#D6D5B3\",\r\n        margin:20,\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\"\r\n      },\r\n      tabhead:{\r\n      paddingLeft:\"40px\",\r\n      paddingTop:\"10px\",\r\n      color:\"#000000\",\r\n      flex:1\r\n      },\r\n      speech:{\r\n        fontSize:\"18px\",\r\n        fontWeight:\"100\",\r\n      },\r\n      container:{\r\n        display:\"flex\"\r\n      },\r\n      icon:{\r\n        color:\"#000000\"\r\n      }\r\n\r\n}))\r\nexport default function FS(){\r\n\r\n  \r\n    \r\n    const classes = useStyles();\r\n    const [src,setSrc] = useState(null)\r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n      pollInterval: 500,\r\n    })\r\n   \r\n    if(loading) return <Loading/>\r\n   \r\n   \r\n\r\n    let audio = []\r\n \r\n      if(data === undefined || err || data === null){\r\n        audio = []\r\n      }\r\n      \r\n      else{\r\n    data.files.map((voice)=>{\r\n        \r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab} >\r\n          <div className={classes.container}>\r\n          <div className={classes.tabhead}>\r\n          <AllGuests params={voice.speaker}/>\r\n          <p className={classes.speech}>{voice.speech}</p>\r\n          </div>\r\n          <div>\r\n            <IconButton className={classes.icon}>\r\n              <Icon>\r\n                <PlayCircleFilledOutlined/>\r\n              </Icon>\r\n            </IconButton>\r\n        {/* <audio key={voice._id}  controls>\r\n           <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/wav\"></source>\r\n        </audio> */}\r\n        </div>\r\n        </div>\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n\r\n\r\n\r\nif(data.files[0] === undefined){\r\n  console.log(data)\r\n  return(<h1>lets start.... </h1>)\r\n}\r\n\r\nelse{\r\n \r\n    return(\r\n     \r\n      <div className={classes.box}>\r\n        <ul>\r\n        {audio}\r\n        </ul>\r\n\r\n      \r\n      </div>\r\n    )\r\n}\r\n    \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}