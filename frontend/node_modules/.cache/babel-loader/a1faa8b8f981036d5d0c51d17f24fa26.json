{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\CreateChannel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InputLabel, NativeSelect, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { gql, useMutation } from '@apollo/client';\nimport defaultimage from '../default.jpg';\nimport AuthContext from '../context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_CHANNEL = gql`\n  mutation CreateChannel($file:Upload!,$channelname:String,$discription:String,$contenttype:String,$language:String,$country:String,$creator:String){\n    CreateChannel(file:$file,channelname:$channelname,discription:$discription,contenttype:$contenttype,language:$language,country:$country,creator:$creator)\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    margin: 60\n  },\n  img: {\n    width: \"70vh\",\n    hight: \"70vh\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    width: \"100%\",\n    backgroundColor: \"#01579b\",\n    color: \"#ffffff\",\n    '&:hover': {\n      background: \"#006064\"\n    }\n  },\n  buttondisable: {\n    width: \"100%\",\n    backgroundColor: \"#039be5\"\n  },\n  form: {\n    marginTop: 20,\n    width: \"100%\"\n  },\n  textfield: {\n    width: \"100%\"\n  }\n}));\nexport default function CreateChannel() {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const classes = useStyles();\n  const [createchannel] = useMutation(CREATE_CHANNEL, {\n    onCompleted: data => console.log(data),\n    onError: err => console.log(err)\n  });\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark'\n    }\n  });\n  const [contenttype, setContenttype] = React.useState('none');\n  const [country, setContry] = React.useState('none');\n  const [language, setLanguage] = React.useState('none');\n  const [file, setFile] = React.useState('none');\n  const [state, setState] = React.useState({\n    file: defaultimage,\n    _issubmitted: false\n  });\n  const [accepted, setAccepted] = React.useState(false);\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'contenttype':\n        setContenttype({\n          contenttype: event.target.value\n        });\n        break;\n\n      case 'country':\n        setContry({\n          country: event.target.value\n        });\n        console.log(country);\n        break;\n\n      case 'language':\n        setLanguage({\n          language: event.target.value\n        });\n        break;\n\n      case 'accepted':\n        if (accepted) setAccepted(false);else setAccepted(true);\n        break;\n\n      case 'file':\n        let file = URL.createObjectURL(event.target.files[0]);\n        setState({\n          file: file\n        });\n        setFile(event.target.files[0]);\n        break;\n    }\n  };\n\n  const channelNameRef = React.useRef();\n  const discriptionRef = React.useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const channelname = channelNameRef.current.value;\n    const discription = discriptionRef.current.value;\n    const filefinal = file;\n    const countryfinal = country.country;\n    const contenttypefinal = contenttype.contenttype;\n    const languagefinal = language.language;\n    console.log(file);\n\n    if (channelname.trim() !== \"\" || discription.trim() !== \"\") {\n      console.log(\"form submitted\");\n      setState({\n        _issubmitted: true\n      });\n      console.log(auth.userId);\n      createchannel({\n        variables: {\n          file: filefinal,\n          channelname,\n          discription,\n          country: countryfinal,\n          contenttype: contenttypefinal,\n          language: languagefinal,\n          creator: auth.userId\n        }\n      });\n    }\n  }; // if(!state._issubmitted){\n\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: false,\n        sm: 4,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: state.file,\n            className: classes.img,\n            alt: \"pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 7,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Create your channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit,\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  className: classes.textfield,\n                  inputRef: channelNameRef,\n                  id: \"outlined-basic\",\n                  label: \"Channel Name\",\n                  variant: \"outlined\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  inputRef: discriptionRef,\n                  className: classes.textfield,\n                  id: \"outlined-textarea\",\n                  label: \"Discription About Channel\",\n                  rows: 4,\n                  multiline: true,\n                  variant: \"outlined\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n                  id: \"demo-customized-select-native\",\n                  value: country.country,\n                  onChange: handleChange,\n                  name: \"country\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    \"aria-label\": \"None\",\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"India\",\n                    children: \"India\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n                  id: \"demo-customized-select-native\",\n                  value: language.language,\n                  onChange: handleChange,\n                  name: \"language\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    \"aria-label\": \"None\",\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"English\",\n                    children: \"English\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Content Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n                  id: \"demo-customized-select-native\",\n                  value: contenttype.contenttype,\n                  name: \"contenttype\",\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    \"aria-label\": \"None\",\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Education\",\n                    children: \"Education\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"label\",\n                  children: [\"Add Cover Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/png, image/jpeg\",\n                    hidden: true,\n                    name: \"file\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    onChange: handleChange,\n                    name: \"accepted\",\n                    value: accepted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 22\n                  }, this),\n                  label: \"Accept Terms and Conditons\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: accepted ? /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: classes.button,\n                  children: \"Create My Channel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 11\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: classes.buttondisable,\n                  disabled: true,\n                  children: \"Create My Channel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this); //  }\n  //  else{\n  //    return <Redirect to=\"/home\"/>\n  //  }\n}\n\n_s(CreateChannel, \"E7kykeQLaIakJXLXKab0WVyZqeo=\", false, function () {\n  return [useStyles, useMutation];\n});\n\n_c = CreateChannel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChannel\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/CreateChannel.js"],"names":["React","useContext","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Paper","Grid","Typography","makeStyles","InputLabel","NativeSelect","createMuiTheme","ThemeProvider","gql","useMutation","defaultimage","AuthContext","CREATE_CHANNEL","useStyles","theme","root","height","image","margin","img","width","hight","paper","spacing","display","flexDirection","alignItems","button","backgroundColor","color","background","buttondisable","form","marginTop","textfield","CreateChannel","auth","classes","createchannel","onCompleted","data","console","log","onError","err","palette","type","contenttype","setContenttype","useState","country","setContry","language","setLanguage","file","setFile","state","setState","_issubmitted","accepted","setAccepted","handleChange","event","target","name","value","URL","createObjectURL","files","channelNameRef","useRef","discriptionRef","handleSubmit","e","preventDefault","channelname","current","discription","filefinal","countryfinal","contenttypefinal","languagefinal","trim","userId","variables","creator"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAkCC,cAAlC,EAAiDC,aAAjD,QAAsE,mBAAtE;AACA,SAAUC,GAAV,EAAeC,WAAf,QAAkC,gBAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAGA,MAAMC,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA,CAJA;AAQA,MAAMK,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAC;AADF,GAJgC;AAQvCC,EAAAA,GAAG,EAAC;AACFC,IAAAA,KAAK,EAAC,MADJ;AAEFC,IAAAA,KAAK,EAAC;AAFJ,GARmC;AAavCC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,MAAM,EAAEJ,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADH;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAbgC;AAmBrCC,EAAAA,MAAM,EAAC;AACPP,IAAAA,KAAK,EAAC,MADC;AAEPQ,IAAAA,eAAe,EAAC,SAFT;AAGPC,IAAAA,KAAK,EAAC,SAHC;AAIP,eAAW;AACTC,MAAAA,UAAU,EAAE;AADH;AAJJ,GAnB8B;AA4BvCC,EAAAA,aAAa,EAAC;AACZX,IAAAA,KAAK,EAAC,MADM;AAEZQ,IAAAA,eAAe,EAAC;AAFJ,GA5ByB;AAiCvCI,EAAAA,IAAI,EAAC;AACHC,IAAAA,SAAS,EAAC,EADP;AAEHb,IAAAA,KAAK,EAAC;AAFH,GAjCkC;AAsCvCc,EAAAA,SAAS,EAAC;AACRd,IAAAA,KAAK,EAAC;AADE;AAtC6B,CAAZ,CAAD,CAA5B;AA6CA,eAAe,SAASe,aAAT,GAAyB;AAAA;;AACtC,QAAMC,IAAI,GAAG1C,UAAU,CAACiB,WAAD,CAAvB;AACA,QAAM0B,OAAO,GAAGxB,SAAS,EAAzB;AACA,QAAK,CAACyB,aAAD,IAAkB7B,WAAW,CAACG,cAAD,EAAgB;AAChD2B,IAAAA,WAAW,EAAEC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAD2B;AAEhDG,IAAAA,OAAO,EAACC,GAAG,IAAEH,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAFmC,GAAhB,CAAlC;AAKA,QAAM9B,KAAK,GAAGR,cAAc,CAAC;AAC3BuC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC;AADkB,GAAD,CAA5B;AAOA,QAAK,CAACC,WAAD,EAAaC,cAAb,IAA6BvD,KAAK,CAACwD,QAAN,CAAe,MAAf,CAAlC;AACA,QAAK,CAACC,OAAD,EAASC,SAAT,IAAoB1D,KAAK,CAACwD,QAAN,CAAe,MAAf,CAAzB;AACA,QAAK,CAACG,QAAD,EAAUC,WAAV,IAAuB5D,KAAK,CAACwD,QAAN,CAAe,MAAf,CAA5B;AACA,QAAK,CAACK,IAAD,EAAMC,OAAN,IAAe9D,KAAK,CAACwD,QAAN,CAAe,MAAf,CAApB;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBhE,KAAK,CAACwD,QAAN,CAAe;AACtCK,IAAAA,IAAI,EAAC5C,YADiC;AAEtCgD,IAAAA,YAAY,EAAC;AAFyB,GAAf,CAAzB;AAIA,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAyBnE,KAAK,CAACwD,QAAN,CAAe,KAAf,CAA9B;;AACA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAE9B,YAAOA,KAAK,CAACC,MAAN,CAAaC,IAApB;AACE,WAAK,aAAL;AACEhB,QAAAA,cAAc,CAAC;AAACD,UAAAA,WAAW,EAACe,KAAK,CAACC,MAAN,CAAaE;AAA1B,SAAD,CAAd;AACA;;AACF,WAAK,SAAL;AACEd,QAAAA,SAAS,CAAC;AAACD,UAAAA,OAAO,EAACY,KAAK,CAACC,MAAN,CAAaE;AAAtB,SAAD,CAAT;AACAxB,QAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACA;;AACF,WAAK,UAAL;AACEG,QAAAA,WAAW,CAAC;AAACD,UAAAA,QAAQ,EAACU,KAAK,CAACC,MAAN,CAAaE;AAAvB,SAAD,CAAX;AAEA;;AACF,WAAK,UAAL;AACE,YAAGN,QAAH,EAAaC,WAAW,CAAC,KAAD,CAAX,CAAb,KACKA,WAAW,CAAC,IAAD,CAAX;AAEL;;AACF,WAAK,MAAL;AACE,YAAIN,IAAI,GAACY,GAAG,CAACC,eAAJ,CAAoBL,KAAK,CAACC,MAAN,CAAaK,KAAb,CAAmB,CAAnB,CAApB,CAAT;AACAX,QAAAA,QAAQ,CAAC;AAACH,UAAAA,IAAI,EAACA;AAAN,SAAD,CAAR;AACAC,QAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaK,KAAb,CAAmB,CAAnB,CAAD,CAAP;AAEA;AAtBJ;AAyBD,GA3BD;;AA6BA,QAAMC,cAAc,GAAG5E,KAAK,CAAC6E,MAAN,EAAvB;AACA,QAAMC,cAAc,GAAG9E,KAAK,CAAC6E,MAAN,EAAvB;;AAEA,QAAME,YAAY,GAAGC,CAAD,IAAK;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,WAAW,GAAGN,cAAc,CAACO,OAAf,CAAuBX,KAA3C;AACA,UAAMY,WAAW,GAAGN,cAAc,CAACK,OAAf,CAAuBX,KAA3C;AACA,UAAMa,SAAS,GAAGxB,IAAlB;AACA,UAAMyB,YAAY,GAAG7B,OAAO,CAACA,OAA7B;AACA,UAAM8B,gBAAgB,GAAGjC,WAAW,CAACA,WAArC;AACA,UAAMkC,aAAa,GAAG7B,QAAQ,CAACA,QAA/B;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;;AACA,QAAGqB,WAAW,CAACO,IAAZ,OAAuB,EAAvB,IAA6BL,WAAW,CAACK,IAAZ,OAAuB,EAAvD,EAA0D;AACxDzC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAe,MAAAA,QAAQ,CAAC;AAACC,QAAAA,YAAY,EAAC;AAAd,OAAD,CAAR;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAAC+C,MAAjB;AACA7C,MAAAA,aAAa,CAAC;AAAC8C,QAAAA,SAAS,EAAC;AAAC9B,UAAAA,IAAI,EAACwB,SAAN;AAAgBH,UAAAA,WAAhB;AACvBE,UAAAA,WADuB;AACX3B,UAAAA,OAAO,EAAC6B,YADG;AACUhC,UAAAA,WAAW,EAACiC,gBADtB;AAEvB5B,UAAAA,QAAQ,EAAC6B,aAFc;AAEAI,UAAAA,OAAO,EAACjD,IAAI,CAAC+C;AAFb;AAAX,OAAD,CAAb;AAGD;AACF,GAjBD,CAxDsC,CA6EtC;;;AACA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAErE,KAAtB;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,MAA1B;AAAiC,MAAA,SAAS,EAAEuB,OAAO,CAACtB,IAApD;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,KAAf;AAAsB,QAAA,EAAE,EAAE,CAA1B;AAA6B,QAAA,EAAE,EAAE,CAAjC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAEsB,OAAO,CAACpB,KAAxB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEuC,KAAK,CAACF,IAAhB;AAAsB,YAAA,SAAS,EAAEjB,OAAO,CAAClB,GAAzC;AAA8C,YAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,SAAS,EAAEnB,KAA5C;AAAmD,QAAA,SAAS,EAAE,CAA9D;AAAiE,QAAA,MAAM,MAAvE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAEqC,OAAO,CAACf,KAAxB;AAAA,kCACA,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,IAAtB;AAA2B,YAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAKA;AAAM,YAAA,SAAS,EAAEe,OAAO,CAACL,IAAzB;AAA+B,YAAA,QAAQ,EAAEwC,YAAzC;AAAuD,YAAA,UAAU,MAAjE;AAAA,mCAEA,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACA,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAEnC,OAAO,CAACH,SAA9B;AAAyC,kBAAA,QAAQ,EAAEmC,cAAnD;AACA,kBAAA,EAAE,EAAC,gBADH;AACoB,kBAAA,KAAK,EAAC,cAD1B;AACyC,kBAAA,OAAO,EAAC,UADjD;AAC6D,kBAAA,QAAQ;AADrE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACA,QAAC,SAAD;AACA,kBAAA,QAAQ,EAAEE,cADV;AAEA,kBAAA,SAAS,EAAElC,OAAO,CAACH,SAFnB;AAGA,kBAAA,EAAE,EAAC,mBAHH;AAIA,kBAAA,KAAK,EAAC,2BAJN;AAKA,kBAAA,IAAI,EAAE,CALN;AAMA,kBAAA,SAAS,MANT;AAOA,kBAAA,OAAO,EAAC,UAPR;AAQA,kBAAA,QAAQ;AARR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBANF,eAmBE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,wCACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,QAAC,YAAD;AACA,kBAAA,EAAE,EAAC,+BADH;AAEA,kBAAA,KAAK,EAAEgB,OAAO,CAACA,OAFf;AAGA,kBAAA,QAAQ,EAAEW,YAHV;AAIA,kBAAA,IAAI,EAAC,SAJL;AAAA,0CAOA;AAAQ,kCAAW,MAAnB;AAA0B,oBAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,0BAPA,eAQA;AAAQ,oBAAA,KAAK,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF,eAoCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,wCACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,QAAC,YAAD;AACA,kBAAA,EAAE,EAAC,+BADH;AAEA,kBAAA,KAAK,EAAET,QAAQ,CAACA,QAFhB;AAGA,kBAAA,QAAQ,EAAES,YAHV;AAIA,kBAAA,IAAI,EAAC,UAJL;AAAA,0CAOA;AAAQ,kCAAW,MAAnB;AAA0B,oBAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,0BAPA,eAQA;AAAQ,oBAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApCF,eAoDY,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,wCACV,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADU,eAEV,QAAC,YAAD;AACA,kBAAA,EAAE,EAAC,+BADH;AAEA,kBAAA,KAAK,EAAEd,WAAW,CAACA,WAFnB;AAGA,kBAAA,IAAI,EAAC,aAHL;AAIA,kBAAA,QAAQ,EAAEc,YAJV;AAAA,0CAOA;AAAQ,kCAAW,MAAnB;AAA0B,oBAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,0BAPA,eAQA;AAAQ,oBAAA,KAAK,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFU;AAAA;AAAA;AAAA;AAAA;AAAA,sBApDZ,eAoEE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACA,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAA,SAAS,EAAC,OAAtC;AAAA,6DACE;AAAO,oBAAA,IAAI,EAAC,MAAZ;AAAmB,oBAAA,MAAM,EAAC,uBAA1B;AAAkD,oBAAA,MAAM,MAAxD;AAAyD,oBAAA,IAAI,EAAC,MAA9D;AAAqE,oBAAA,QAAQ,EAAEA;AAA/E;AAAA;AAAA;AAAA;AAAA,0BADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBApEF,eA2EE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACA,QAAC,gBAAD;AACE,kBAAA,OAAO,eAAE,QAAC,QAAD;AAAW,oBAAA,QAAQ,EAAEA,YAArB;AAAmC,oBAAA,IAAI,EAAC,UAAxC;AAAmD,oBAAA,KAAK,EAAEF;AAA1D;AAAA;AAAA;AAAA;AAAA,0BADX;AAEE,kBAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBA3EF,eAkFE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,0BACCA,QAAQ,gBACT,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAEtB,OAAO,CAACV,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADS,gBAER,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAEU,OAAO,CAACN,aAAzC;AAAwD,kBAAA,QAAQ,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,sBAlFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF,CA9EsC,CAoMtC;AACA;AACA;AACA;AACD;;GAxMuBI,a;UAENtB,S,EACOJ,W;;;KAHD0B,a","sourcesContent":["import React, { useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { InputLabel, NativeSelect,createMuiTheme,ThemeProvider } from '@material-ui/core';\r\nimport {  gql, useMutation } from '@apollo/client'\r\nimport defaultimage from '../default.jpg'\r\nimport AuthContext from '../context/auth-context'\r\n\r\n\r\nconst CREATE_CHANNEL = gql`\r\n  mutation CreateChannel($file:Upload!,$channelname:String,$discription:String,$contenttype:String,$language:String,$country:String,$creator:String){\r\n    CreateChannel(file:$file,channelname:$channelname,discription:$discription,contenttype:$contenttype,language:$language,country:$country,creator:$creator)\r\n  }\r\n`\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    margin:60,\r\n    \r\n  },\r\n  img:{\r\n    width:\"70vh\",\r\n    hight:\"70vh\"\r\n  },\r\n  \r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n    button:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#01579b\",\r\n    color:\"#ffffff\",\r\n    '&:hover': {\r\n      background: \"#006064\",  \r\n   }\r\n  },\r\n\r\n  buttondisable:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#039be5\"\r\n  },\r\n\r\n  form:{\r\n    marginTop:20,\r\n    width:\"100%\",\r\n\r\n  },\r\n  textfield:{\r\n    width:\"100%\",\r\n\r\n  },\r\n  \r\n}));\r\n\r\nexport default function CreateChannel() {\r\n  const auth = useContext(AuthContext)\r\n  const classes = useStyles();\r\n  const[createchannel] = useMutation(CREATE_CHANNEL,{\r\n    onCompleted: data => console.log(data),\r\n    onError:err=>console.log(err)\r\n  })\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n     \r\n    },\r\n  });\r\n\r\n  const[contenttype,setContenttype]=React.useState('none')\r\n  const[country,setContry]=React.useState('none')\r\n  const[language,setLanguage]=React.useState('none')\r\n  const[file,setFile]=React.useState('none')\r\n  const [state,setState] = React.useState({\r\n    file:defaultimage,\r\n    _issubmitted:false\r\n  })\r\n  const[accepted,setAccepted] = React.useState(false)\r\n  const handleChange = (event) => {\r\n\r\n    switch(event.target.name){\r\n      case 'contenttype':\r\n        setContenttype({contenttype:event.target.value})\r\n        break\r\n      case 'country':\r\n        setContry({country:event.target.value})\r\n        console.log(country)\r\n        break\r\n      case 'language':\r\n        setLanguage({language:event.target.value})\r\n     \r\n        break\r\n      case 'accepted':\r\n        if(accepted) setAccepted(false)\r\n        else setAccepted(true)\r\n       \r\n        break\r\n      case 'file':\r\n        let file=URL.createObjectURL(event.target.files[0])\r\n        setState({file:file})\r\n        setFile(event.target.files[0])\r\n        \r\n        break\r\n    }\r\n    \r\n  }\r\n\r\n  const channelNameRef = React.useRef()\r\n  const discriptionRef = React.useRef()\r\n\r\n  const handleSubmit =(e)=>{\r\n    e.preventDefault()\r\n    const channelname = channelNameRef.current.value\r\n    const discription = discriptionRef.current.value\r\n    const filefinal = file\r\n    const countryfinal = country.country\r\n    const contenttypefinal = contenttype.contenttype\r\n    const languagefinal = language.language\r\n    console.log(file)\r\n    if(channelname.trim() !== \"\" || discription.trim() !== \"\"){\r\n      console.log(\"form submitted\")\r\n      setState({_issubmitted:true})\r\n      console.log(auth.userId)\r\n      createchannel({variables:{file:filefinal,channelname,\r\n        discription,country:countryfinal,contenttype:contenttypefinal,\r\n        language:languagefinal,creator:auth.userId}})\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  // if(!state._issubmitted){\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={5}  >\r\n        <div className={classes.image}>\r\n          <img src={state.file} className={classes.img} alt=\"pic\"/>\r\n        </div>\r\n        </Grid>\r\n      <Grid item xs={12} sm={8} md={7} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create your channel\r\n        </Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate> \r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n          <TextField className={classes.textfield} inputRef={channelNameRef} \r\n          id=\"outlined-basic\" label=\"Channel Name\" variant=\"outlined\"  required />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <TextField\r\n          inputRef={discriptionRef}\r\n          className={classes.textfield} \r\n          id=\"outlined-textarea\"\r\n          label=\"Discription About Channel\"\r\n          rows={4}\r\n          multiline\r\n          variant=\"outlined\"\r\n          required\r\n        />\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n          <InputLabel>Country</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          value={country.country}\r\n          onChange={handleChange}\r\n          name=\"country\"\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"India\"}>India</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={4}>\r\n          <InputLabel>Language</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          value={language.language}\r\n          onChange={handleChange}\r\n          name=\"language\"\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"English\"}>English</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n          <InputLabel>Content Type</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          value={contenttype.contenttype}\r\n          name=\"contenttype\"\r\n          onChange={handleChange}\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"Education\"}>Education</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <Button variant=\"contained\" component=\"label\">Add Cover Image\r\n            <input type=\"file\" accept=\"image/png, image/jpeg\" hidden name=\"file\" onChange={handleChange}/>\r\n            </Button>\r\n          \r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox  onChange={handleChange} name=\"accepted\" value={accepted}/>}\r\n            label=\"Accept Terms and Conditons\"\r\n          />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n          {accepted?\r\n          <Button type=\"submit\" className={classes.button}>Create My Channel</Button>\r\n          :<Button type=\"submit\" className={classes.buttondisable} disabled>Create My Channel</Button>}\r\n          </Grid>\r\n          \r\n          \r\n        </Grid>\r\n\r\n       \r\n\r\n        </form>\r\n       \r\n\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    </ThemeProvider>\r\n  );\r\n  //  }\r\n  //  else{\r\n  //    return <Redirect to=\"/home\"/>\r\n  //  }\r\n}"]},"metadata":{},"sourceType":"module"}