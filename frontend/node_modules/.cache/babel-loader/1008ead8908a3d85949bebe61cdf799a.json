{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const filesQuery = gql`\n    {\n        files\n    }\n`;\nexport const File = () => {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useQuery(filesQuery);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.files.map(x => /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: 200\n      },\n      src: `http://localhost:4000/public/${x}`,\n      alt: x\n    }, x, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(File, \"6xDDhUpruzqVLNWcdvPn8X4X8ng=\", false, function () {\n  return [useQuery];\n});\n\n_c = File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/Files.js"],"names":["useQuery","gql","React","filesQuery","File","data","loading","files","map","x","width"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,UAAU,GAAGF,GAAI;AAC9B;AACA;AACA;AACA,CAJO;AAMP,OAAO,MAAMG,IAAI,GAAG,MAAI;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAOC,IAAAA;AAAP,MAAmBN,QAAQ,CAACG,UAAD,CAAjC;;AACA,MAAGG,OAAH,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,cACKD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,CAAC,iBACb;AACA,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OADP;AAGA,MAAA,GAAG,EAAK,gCAA+BD,CAAE,EAHzC;AAIA,MAAA,GAAG,EAAEA;AAJL,OAEOA,CAFP;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAjBM;;GAAML,I;UACgBJ,Q;;;KADhBI,I","sourcesContent":["import { useQuery } from '@apollo/react-hooks'\r\nimport gql from \"graphql-tag\"\r\nimport React from 'react'\r\n\r\nexport const filesQuery = gql`\r\n    {\r\n        files\r\n    }\r\n`\r\n\r\nexport const File = ()=>{\r\n    const { data,loading } = useQuery(filesQuery)\r\n    if(loading){\r\n        return <div>loading</div>\r\n    }\r\n    return(\r\n        <div>\r\n            {data.files.map(x=>(\r\n                <img\r\n                style={{width:200}}\r\n                key = {x}\r\n                src = {`http://localhost:4000/public/${x}`}\r\n                alt={x}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}