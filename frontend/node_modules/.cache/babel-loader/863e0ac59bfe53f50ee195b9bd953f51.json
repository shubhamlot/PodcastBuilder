{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\CreateRoom.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from \"@apollo/client\";\nimport { Avatar, Button, Container, CssBaseline, Grid, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport { Lock, Mic } from \"@material-ui/icons\";\nimport gql from \"graphql-tag\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport NavBar from \"./Navbar\";\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#000000\",\n    padding: '20px'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      background: theme.palette.secondary.light\n    }\n  }\n}));\nconst CREATE_ROOM = gql`\nmutation($roomname:String,$creator:String){\n      createRoom(roomname:$roomname,creator:$creator){\n       roomID\n      }\n   }\n`;\nexport default function CreateRoom() {\n  _s();\n\n  const [state, setState] = useState({\n    data: \"\"\n  });\n  const [createRoom] = useMutation(CREATE_ROOM, {\n    onCompleted: data => {\n      console.log(data.createRoom.roomID);\n      setState({\n        roomID: data.createRoom.roomID\n      });\n    }\n  });\n  const roomnameRef = React.useRef();\n\n  const handlesubmit = e => {\n    e.preventDefault();\n    const roomname = roomnameRef.current.value;\n    const creator = \"606b367f6a34b008e829d1f4\";\n\n    if (roomname.trim() === null) {\n      console.log(\"enetr the valid name\");\n    } else {\n      createRoom({\n        variables: {\n          roomname,\n          creator\n        }\n      });\n    }\n  };\n\n  const classes = useStyles();\n\n  if (state.roomID === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            children: /*#__PURE__*/_jsxDEV(Mic, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Let's Create Episode on Builder....\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handlesubmit,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  inputRef: roomnameRef,\n                  required: true,\n                  fullWidth: true,\n                  id: \"roomname\",\n                  label: \"Room Name\",\n                  name: \"roomname\",\n                  autoComplete: \"off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.submit,\n              children: \"create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/roomID:${state.roomID}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(CreateRoom, \"aoJ12of0BhphFo37NazSwPFbdjw=\", false, function () {\n  return [useMutation, useStyles];\n});\n\n_c = CreateRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/CreateRoom.js"],"names":["useMutation","Avatar","Button","Container","CssBaseline","Grid","makeStyles","TextField","Typography","Lock","Mic","gql","React","useState","Redirect","NavBar","Navbar","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","avatar","margin","backgroundColor","padding","submit","palette","secondary","main","background","light","CREATE_ROOM","CreateRoom","state","setState","data","createRoom","onCompleted","console","log","roomID","roomnameRef","useRef","handlesubmit","e","preventDefault","roomname","current","value","creator","trim","variables","classes"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport { Avatar, Button, Container, CssBaseline, Grid, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport { Lock, Mic } from \"@material-ui/icons\";\r\nimport gql from \"graphql-tag\";\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport NavBar from \"./Navbar\";\r\nimport Navbar from './Navbar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n \r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: \"#000000\",\r\n        padding:'20px'\r\n      },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n     backgroundColor:theme.palette.secondary.main,\r\n      '&:hover': {\r\n          background: theme.palette.secondary.light,\r\n        \r\n       },\r\n    },\r\n  }));\r\n\r\n\r\n  const CREATE_ROOM = gql`\r\nmutation($roomname:String,$creator:String){\r\n      createRoom(roomname:$roomname,creator:$creator){\r\n       roomID\r\n      }\r\n   }\r\n`\r\n  \r\n\r\nexport default function CreateRoom(){\r\n    const [state, setState] = useState({\r\n        data:\"\"\r\n        });\r\n\r\n    const [createRoom] = useMutation(CREATE_ROOM,{\r\n        onCompleted:data=>{\r\n            console.log(data.createRoom.roomID)\r\n            setState({roomID:data.createRoom.roomID})\r\n        }\r\n    })\r\n\r\n    const roomnameRef = React.useRef()\r\n\r\n    const handlesubmit=(e)=>{\r\n        e.preventDefault()\r\n        const roomname =roomnameRef.current.value\r\n        const creator = \"606b367f6a34b008e829d1f4\"\r\n        if(roomname.trim() === null){\r\n            console.log(\"enetr the valid name\")\r\n        }\r\n        else{\r\n            createRoom({variables:{roomname,creator}})\r\n            \r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n    if(state.roomID===\"\"){\r\n    return(\r\n        <div>\r\n        <NavBar/>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n           <CssBaseline />\r\n           <div className={classes.paper}>\r\n           <Avatar className={classes.avatar}>\r\n          <Mic />\r\n        </Avatar>\r\n             <Typography component=\"h1\" variant=\"h5\">\r\n               Let's Create Episode on Builder....\r\n             </Typography>\r\n             <form className={classes.form} onSubmit={handlesubmit}  noValidate>\r\n               <Grid container spacing={2}>\r\n     \r\n                 <Grid item xs={12}>\r\n                   <TextField\r\n                     variant=\"outlined\"\r\n                     inputRef={roomnameRef}\r\n                     required\r\n                     fullWidth\r\n                     id=\"roomname\"\r\n                     label=\"Room Name\"\r\n                     name=\"roomname\"\r\n                     autoComplete=\"off\"\r\n                   />\r\n                 </Grid>\r\n                \r\n                 \r\n                 \r\n               </Grid>\r\n               <Button\r\n                 type=\"submit\"\r\n                 fullWidth\r\n                 variant=\"contained\"\r\n                 color=\"primary\"\r\n                 className={classes.submit}\r\n               >\r\n                 create\r\n               </Button>\r\n              \r\n             </form>\r\n           </div>\r\n          \r\n         </Container>\r\n         </div>\r\n    )}\r\n    else{\r\n        return(<Redirect to={`/roomID:${state.roomID}`}/>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}