{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\components\\\\Files.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHOW_FILE = gql`\n  query{\n      files()\n  }\n`;\nexport default function FS() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SHOW_FILE);\n  if (loading) return null;\n  let audio = [];\n\n  const obj = () => {\n    data.files.map(voice => {\n      audio.push( /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: `http://localhost:4000/Audio/${voice}`,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: obj,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), audio]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FS, \"hLsNeCM6uPLZqykYOKQzV+Uk/qM=\", false, function () {\n  return [useQuery];\n});\n\n_c = FS;\n\nvar _c;\n\n$RefreshReg$(_c, \"FS\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/components/Files.js"],"names":["React","gql","useQuery","SHOW_FILE","FS","loading","error","data","audio","obj","files","map","voice","push"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,GAAV,EAAeC,QAAf,QAA+B,gBAA/B;;AAGA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA,CAJA;AAMA,eAAe,SAASG,EAAT,GAAa;AAAA;;AACxB,QAAK;AAAEC,IAAAA,OAAF;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB,MAAwBL,QAAQ,CAACC,SAAD,CAArC;AAEA,MAAIE,OAAJ,EAAa,OAAO,IAAP;AAEb,MAAIG,KAAK,GAAG,EAAZ;;AACA,QAAMC,GAAG,GAAG,MAAI;AAChBF,IAAAA,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAgBC,KAAD,IAAS;AAEpBJ,MAAAA,KAAK,CAACK,IAAN,eACI;AAAO,QAAA,QAAQ,MAAf;AAAA,+BACF;AAAQ,UAAA,GAAG,EAAG,+BAA8BD,KAAM,EAAlD;AAAqD,UAAA,IAAI,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,cADJ;AAKC,KAPL;AAQF,GATE;;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEH,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOH;;GA1BuBJ,E;UACSF,Q;;;KADTE,E","sourcesContent":["\r\nimport React from 'react'\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n  query{\r\n      files()\r\n  }\r\n`\r\n\r\nexport default function FS(){\r\n    const{ loading,error,data} = useQuery(SHOW_FILE)\r\n\r\n    if (loading) return null\r\n     \r\n    let audio = []\r\n    const obj = ()=>{\r\n    data.files.map((voice)=>{\r\n\r\n        audio.push(\r\n            <audio controls>\r\n          <source src={`http://localhost:4000/Audio/${voice}`} type=\"audio/mpeg\"></source>\r\n        </audio>\r\n        )\r\n        }\r\n)}\r\n\r\n   \r\n    \r\n    return(\r\n      <div >\r\n        <h1>click</h1>\r\n        <button onClick={obj}>click</button>\r\n        {audio}\r\n      </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}