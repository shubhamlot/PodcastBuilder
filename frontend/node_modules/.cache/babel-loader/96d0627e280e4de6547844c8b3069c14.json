{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\AudioProcess.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useMutation, ApolloConsumer } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPLOAD_FILE = gql`\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\n  }\n`;\nexport function AudioProcess(param) {\n  _s();\n\n  const [uploadFile] = useMutation(UPLOAD_FILE, {\n    onCompleted: data => console.log(data)\n  });\n  const {\n    room\n  } = \"aee04343-1c85-41cb-b375-2493a8efa2b0\"; //useParams(0)\n  // console.log(param)\n\n  const file = param;\n  let speaker = \"606b367f6a34b008e829d1f4\";\n  if (!file) return;\n  uploadFile({\n    variables: {\n      file,\n      roomid: room,\n      speaker: speaker\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ApolloConsumer, {\n    children: client => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AudioProcess, \"qigFVzTWkgn+w3NJPxJSvgWZGc0=\", false, function () {\n  return [useMutation];\n});\n\n_c = AudioProcess;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioProcess\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/AudioProcess.js"],"names":["React","gql","useMutation","ApolloConsumer","UPLOAD_FILE","AudioProcess","param","uploadFile","onCompleted","data","console","log","room","file","speaker","variables","roomid","client"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,cAA3B,QAAiD,gBAAjD;;AAIA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA,CAJA;AAMA,OAAO,SAASI,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AAE/B,QAAK,CAACC,UAAD,IAAeL,WAAW,CAACE,WAAD,EAAa;AAC1CI,IAAAA,WAAW,EAAEC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ;AADqB,GAAb,CAA/B;AAIE,QAAM;AAACG,IAAAA;AAAD,MAAO,sCAAb,CAN6B,CAMsB;AACnD;;AACA,QAAMC,IAAI,GAAGP,KAAb;AAEA,MAAIQ,OAAO,GAAG,0BAAd;AACA,MAAG,CAACD,IAAJ,EAAU;AACVN,EAAAA,UAAU,CAAC;AAAEQ,IAAAA,SAAS,EAAE;AAAEF,MAAAA,IAAF;AAAOG,MAAAA,MAAM,EAACJ,IAAd;AAAmBE,MAAAA,OAAO,EAACA;AAA3B;AAAb,GAAD,CAAV;AAEA,sBAEE,QAAC,cAAD;AAAA,cAECG,MAAM,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,UAFF;AASL;;GAvBeZ,Y;UAEQH,W;;;KAFRG,Y","sourcesContent":["import React from 'react'\r\nimport { gql, useMutation, ApolloConsumer } from '@apollo/client'\r\n\r\n\r\n\r\nconst UPLOAD_FILE = gql`\r\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\r\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\r\n  }\r\n`\r\n\r\nexport function AudioProcess(param){\r\n\r\n    const[uploadFile] = useMutation(UPLOAD_FILE,{\r\n      onCompleted: data => console.log(data),\r\n    })\r\n\r\n      const {room}=\"aee04343-1c85-41cb-b375-2493a8efa2b0\"//useParams(0)\r\n      // console.log(param)\r\n      const file = param\r\n      \r\n      let speaker = \"606b367f6a34b008e829d1f4\"\r\n      if(!file) return\r\n      uploadFile({ variables: { file,roomid:room,speaker:speaker } })\r\n  \r\n      return(\r\n        \r\n        <ApolloConsumer>\r\n        \r\n        {client=>(\r\n        <h1>file</h1>)}\r\n        </ApolloConsumer>\r\n      )\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}