{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectFolder\\\\Podcast Builder\\\\frontend\\\\src\\\\componets2\\\\Reactmic.js\",\n    _s = $RefreshSig$();\n\nimport { ReactMic } from 'react-mic';\nimport React, { useState } from 'react';\nimport { AudioProcess } from './AudioProcess';\nimport { gql, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPLOAD_FILE = gql`\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\n  }\n`;\nexport default function Reactmic() {\n  _s();\n\n  const [state, setState] = useState({\n    record: false\n  });\n  const [uploadFile] = useMutation(UPLOAD_FILE, {\n    onCompleted: data => console.log(data)\n  });\n\n  const blobToFile = theBlob => {\n    theBlob.lastModifiedDate = new Date();\n    theBlob.name = new Date().toISOString();\n    return theBlob;\n  };\n\n  const startRecording = () => {\n    setState({\n      record: true\n    });\n  };\n\n  const stopRecording = () => {\n    setState({\n      record: false\n    });\n  };\n\n  const audioProcess = file => {\n    let room = \"aee04343-1c85-41cb-b375-2493a8efa2b0\";\n    let speaker = \"606b367f6a34b008e829d1f4\";\n    if (!file) return;\n    uploadFile({\n      variables: {\n        file,\n        roomid: room,\n        speaker: speaker\n      }\n    });\n  };\n\n  const onStop = recordedBlob => {\n    let file = blobToFile(recordedBlob.blob);\n    audioProcess(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactMic, {\n      record: state.record,\n      className: \"sound-wave\",\n      onStop: onStop,\n      strokeColor: \"#ffffff\",\n      backgroundColor: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      type: \"button\",\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      type: \"button\",\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reactmic, \"OJxYPE51hDDAc2uzIJDUBmgvRGI=\", false, function () {\n  return [useMutation];\n});\n\n_c = Reactmic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reactmic\");","map":{"version":3,"sources":["D:/ProjectFolder/Podcast Builder/frontend/src/componets2/Reactmic.js"],"names":["ReactMic","React","useState","AudioProcess","gql","useMutation","UPLOAD_FILE","Reactmic","state","setState","record","uploadFile","onCompleted","data","console","log","blobToFile","theBlob","lastModifiedDate","Date","name","toISOString","startRecording","stopRecording","audioProcess","file","room","speaker","variables","roomid","onStop","recordedBlob","blob"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,GAAR,EAAaC,WAAb,QAA+B,gBAA/B;;AAGA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA,CAJA;AAOA,eAAe,SAASG,QAAT,GAAmB;AAAA;;AAE9B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC;AAC9BQ,IAAAA,MAAM,EAAC;AADuB,GAAD,CAAjC;AAKA,QAAK,CAACC,UAAD,IAAeN,WAAW,CAACC,WAAD,EAAa;AACxCM,IAAAA,WAAW,EAAEC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ;AADmB,GAAb,CAA/B;;AAIF,QAAMG,UAAU,GAAEC,OAAD,IAAW;AAE1BA,IAAAA,OAAO,CAACC,gBAAR,GAA2B,IAAIC,IAAJ,EAA3B;AACAF,IAAAA,OAAO,CAACG,IAAR,GAAe,IAAID,IAAJ,GAAWE,WAAX,EAAf;AACA,WAAOJ,OAAP;AACH,GALC;;AAOA,QAAMK,cAAc,GAAG,MAAM;AAC3Bb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMa,aAAa,GAAG,MAAM;AAC1Bd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAR;AACD,GAFD;;AAKA,QAAMc,YAAY,GAAEC,IAAD,IAAQ;AACzB,QAAIC,IAAI,GAAC,sCAAT;AACA,QAAIC,OAAO,GAAG,0BAAd;AAEA,QAAG,CAACF,IAAJ,EAAU;AACVd,IAAAA,UAAU,CAAC;AAAEiB,MAAAA,SAAS,EAAE;AAAEH,QAAAA,IAAF;AAAOI,QAAAA,MAAM,EAACH,IAAd;AAAmBC,QAAAA,OAAO,EAACA;AAA3B;AAAb,KAAD,CAAV;AAED,GAPD;;AASA,QAAMG,MAAM,GAAEC,YAAD,IAAiB;AAE5B,QAAIN,IAAI,GAAGT,UAAU,CAACe,YAAY,CAACC,IAAd,CAArB;AAGAR,IAAAA,YAAY,CAACC,IAAD,CAAZ;AAED,GAPD;;AAUE,sBAGI;AAAA,4BACA,QAAC,QAAD;AAEE,MAAA,MAAM,EAAEjB,KAAK,CAACE,MAFhB;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,MAAM,EAAEoB,MAJV;AAKE,MAAA,WAAW,EAAC,SALd;AAME,MAAA,eAAe,EAAC;AANlB;AAAA;AAAA;AAAA;AAAA,YADA,eAQA;AAAQ,MAAA,OAAO,EAAER,cAAjB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA,eASA;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAkBH;;GAhEuBhB,Q;UAOAF,W;;;KAPAE,Q","sourcesContent":["import { ReactMic } from 'react-mic';\r\nimport React, { useState } from 'react' \r\nimport {AudioProcess} from './AudioProcess'\r\nimport {gql, useMutation} from '@apollo/client';\r\n\r\n\r\nconst UPLOAD_FILE = gql`\r\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\r\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\r\n  }\r\n`\r\n\r\n\r\nexport default function Reactmic(){\r\n  \r\n    const [state,setState] = useState({\r\n        record:false,\r\n      \r\n    })\r\n\r\n    const[uploadFile] = useMutation(UPLOAD_FILE,{\r\n        onCompleted: data => console.log(data),\r\n      })\r\n \r\n  const blobToFile=(theBlob)=>{\r\n    \r\n    theBlob.lastModifiedDate = new Date();\r\n    theBlob.name = new Date().toISOString();\r\n    return theBlob;\r\n}\r\n\r\n  const startRecording = () => {\r\n    setState({ record: true });\r\n  }\r\n \r\n  const stopRecording = () => {\r\n    setState({ record: false });\r\n  }\r\n \r\n\r\n  const audioProcess=(file)=>{\r\n    let room=\"aee04343-1c85-41cb-b375-2493a8efa2b0\"\r\n    let speaker = \"606b367f6a34b008e829d1f4\"\r\n    \r\n    if(!file) return\r\n    uploadFile({ variables: { file,roomid:room,speaker:speaker } })\r\n\r\n  }\r\n \r\n  const onStop=(recordedBlob)=> {\r\n    \r\n    let file = blobToFile(recordedBlob.blob)\r\n   \r\n    \r\n    audioProcess(file)\r\n  \r\n  }\r\n \r\n  \r\n    return (\r\n      \r\n        \r\n        <div>\r\n        <ReactMic\r\n          \r\n          record={state.record}\r\n          className=\"sound-wave\"\r\n          onStop={onStop}\r\n          strokeColor=\"#ffffff\"\r\n          backgroundColor=\"blue\" />\r\n        <button onClick={startRecording} type=\"button\">Start</button>\r\n        <button onClick={stopRecording} type=\"button\">Stop</button>\r\n        \r\n        </div>\r\n      \r\n    )\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}