[{"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\index.js":"1","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\reportWebVitals.js":"2","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\App.js":"3","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Files.js":"4","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Username.js":"5","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateRoom.js":"6","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\userLogin.js":"7","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\userlogin.js":"8","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\InitJoinRoom.js":"9","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\context\\auth-context.js":"10","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\listItems.js":"11","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Guestlists.js":"12","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Login.js":"13","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Home.js":"14","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateChannel.js":"15","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\ListItems.js":"16","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Navbar.js":"17","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\MenuItems.js":"18","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\EpisodeDisplay.js":"19","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Signup.js":"20","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Login.js":"21","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\InitJoinRoom.js":"22","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\PodcastRoom.js":"23","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\PodcastPortal.js":"24","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Home.js":"25","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\CreateRoom.js":"26","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Orders.js":"27","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Deposits.js":"28","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\AllUsers.js":"29","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\AllGuests.js":"30","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Title.js":"31","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\AudioProcess.js":"32","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Reactmic.js":"33","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Checkbeforjoining.js":"34","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Editor.js":"35","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\EditorFiles.js":"36","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\RemoveFIlesEditor.js":"37","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\CreateChannel.js":"38","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\EditFileDiscription.js":"39","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Review.js":"40","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\loading.js":"41","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Gif.js":"42","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Copyright.js":"43"},{"size":500,"mtime":499162500000,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":2731,"mtime":1623853407224,"results":"47","hashOfConfig":"45"},{"size":2876,"mtime":1623849668516,"results":"48","hashOfConfig":"45"},{"size":891,"mtime":1620138934351,"results":"49","hashOfConfig":"45"},{"size":5669,"mtime":1619939732399,"results":"50","hashOfConfig":"45"},{"size":1088,"mtime":1619163996030,"results":"51","hashOfConfig":"45"},{"size":5778,"mtime":1620136253798,"results":"52","hashOfConfig":"45"},{"size":4829,"mtime":1619784720052,"results":"53","hashOfConfig":"45"},{"size":296,"mtime":1623050914339,"results":"54","hashOfConfig":"45"},{"size":1929,"mtime":1620714333668,"results":"55","hashOfConfig":"45"},{"size":813,"mtime":1619760092627,"results":"56","hashOfConfig":"45"},{"size":4884,"mtime":1622010267903,"results":"57","hashOfConfig":"45"},{"size":6369,"mtime":1620138860324,"results":"58","hashOfConfig":"45"},{"size":5685,"mtime":1619941032233,"results":"59","hashOfConfig":"45"},{"size":1929,"mtime":1620137604738,"results":"60","hashOfConfig":"45"},{"size":3641,"mtime":1623852710372,"results":"61","hashOfConfig":"45"},{"size":1076,"mtime":1621400696756,"results":"62","hashOfConfig":"45"},{"size":1558,"mtime":1623855555357,"results":"63","hashOfConfig":"45"},{"size":6626,"mtime":1623049798456,"results":"64","hashOfConfig":"45"},{"size":5043,"mtime":1623050734775,"results":"65","hashOfConfig":"45"},{"size":5162,"mtime":1623855466613,"results":"66","hashOfConfig":"45"},{"size":4430,"mtime":1623852757301,"results":"67","hashOfConfig":"45"},{"size":617,"mtime":1623852315040,"results":"68","hashOfConfig":"45"},{"size":817,"mtime":1623855592596,"results":"69","hashOfConfig":"45"},{"size":3551,"mtime":1622044720589,"results":"70","hashOfConfig":"45"},{"size":2369,"mtime":1623849822466,"results":"71","hashOfConfig":"45"},{"size":2858,"mtime":1623849370075,"results":"72","hashOfConfig":"45"},{"size":2253,"mtime":1623852490283,"results":"73","hashOfConfig":"45"},{"size":628,"mtime":1622729337632,"results":"74","hashOfConfig":"45"},{"size":356,"mtime":1621491671529,"results":"75","hashOfConfig":"45"},{"size":900,"mtime":1621966021752,"results":"76","hashOfConfig":"45"},{"size":5186,"mtime":1623854982307,"results":"77","hashOfConfig":"45"},{"size":1051,"mtime":1622091596512,"results":"78","hashOfConfig":"45"},{"size":4950,"mtime":1623903534540,"results":"79","hashOfConfig":"45"},{"size":5661,"mtime":1623903593444,"results":"80","hashOfConfig":"45"},{"size":3481,"mtime":1622286488756,"results":"81","hashOfConfig":"45"},{"size":7666,"mtime":1623056361195,"results":"82","hashOfConfig":"45"},{"size":996,"mtime":1623763179843,"results":"83","hashOfConfig":"45"},{"size":1348,"mtime":1623764725823,"results":"84","hashOfConfig":"45"},{"size":1415,"mtime":1623821435693,"results":"85","hashOfConfig":"45"},{"size":525,"mtime":1623851759020,"results":"86","hashOfConfig":"45"},{"size":399,"mtime":1623852244821,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"ymght2",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"90"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"90"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"90"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\index.js",[],["206","207"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\reportWebVitals.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\App.js",["208","209","210","211","212","213","214","215"],"import logo from './logo.svg';\r\nimport './App.css';\r\n// import AudioProcess from './components/AudioProcess'\r\nimport { ApolloProvider,ApolloClient, InMemoryCache } from '@apollo/client'\r\nimport {createUploadLink} from 'apollo-upload-client'\r\nimport FS from './components/Files'\r\nimport CreateRoom from './componets2/CreateRoom'\r\nimport Guestlists from './components/Guestlists'\r\nimport AuthContext from \"./context/auth-context\";\r\nimport PodcastPortal from './componets2/PodcastPortal';\r\nimport Login from './componets2/Login';\r\nimport Home from './componets2/Home';\r\n\r\nimport CreateChannel from './componets2/CreateChannel' \r\nimport Editor from './componets2/Editor' \r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Sigup from './componets2/Signup'\r\nimport InitJoin from './componets2/InitJoinRoom'\r\nimport { useState } from 'react';\r\nimport {AuthProvider} from './context/auth-context'\r\n// import CombineFile from './componets2/CombineFile';\r\nimport { TrainOutlined } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst client = new ApolloClient({\r\n  link: createUploadLink({\r\n    uri:'http://localhost:4000/graphql',\r\n    addTypename: false\r\n  }),\r\n  cache: new InMemoryCache()\r\n\r\n})\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  let [state,setState] = useState({\r\n    username:'',\r\n    userId:'',\r\n    isGuest:true\r\n  })\r\n\r\n  const login =(userId,username,isGuest)=>{\r\n    setState({userId:userId,username:username,isGuest:isGuest})\r\n    \r\n  }\r\n  const logout =()=>{\r\n   setState({userId:\"\",username:\"\",isGuest:true})\r\n\r\n  }\r\n  return (\r\n    \r\n\r\n    <Router>\r\n  \r\n\r\n      \r\n      <Switch>\r\n      <ApolloProvider client={client}>\r\n      <AuthProvider value={{username:state.username,userId:state.userId,isGuest:state.isGuest,login:login}}>\r\n        <Route path=\"/roomID=:room\" exact>\r\n          <PodcastPortal/>\r\n         \r\n        </Route>\r\n        <Route path=\"/createroom\" exact>\r\n          <CreateRoom/>\r\n        </Route>\r\n        <Route path=\"/initJoinRoom\">\r\n          <InitJoin/>\r\n        </Route>\r\n        <Route path=\"/\" exact>\r\n          <Sigup/>\r\n        </Route>\r\n        <Route path=\"/login\" exact>\r\n          <Login/>\r\n        </Route>\r\n        <Route path=\"/login/createChannel\" exact>\r\n          <CreateChannel/>\r\n        </Route>\r\n        \r\n        <Route path=\"/Home\" exact>\r\n          <Home/>\r\n        </Route>\r\n        <Route path=\"/roomID=:room/editpodcast\">\r\n          <Editor/>\r\n        </Route>\r\n        \r\n        <Route path=\"/createchannel\" exact>\r\n          <CreateChannel/>\r\n        </Route>\r\n        \r\n        </AuthProvider>\r\n        </ApolloProvider>\r\n      </Switch>\r\n      \r\n  </Router>\r\n\r\n  )}\r\nexport default App;\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Files.js",["216","217","218","219","220","221","222","223","224"],"\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useLazyQuery, useQuery } from '@apollo/client'\r\nimport Username from './Username'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from '../componets2/AllGuests'\r\nimport { ValidationContext } from 'graphql'\r\nimport { FormHelperText, Icon, IconButton, makeStyles } from '@material-ui/core'\r\nimport { PlayCircleFilledOutlined } from '@material-ui/icons';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport Loading from '../componets2/loading'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n// a887d8ae-3c6b-413f-a7fc-0ae0c8311dbe\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      box:{\r\n        display:'block'\r\n      },\r\n      tab:{\r\n       \r\n        listStyleType:\"none\",\r\n        borderRadius:\"10px\",\r\n        backgroundColor:\"#D6D5B3\",\r\n        margin:20,\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\"\r\n      },\r\n      tabhead:{\r\n      paddingLeft:\"40px\",\r\n      paddingTop:\"10px\",\r\n      color:\"#000000\",\r\n      flex:1\r\n      },\r\n      speech:{\r\n        fontSize:\"18px\",\r\n        fontWeight:\"100\",\r\n      },\r\n      container:{\r\n        display:\"flex\"\r\n      },\r\n      icon:{\r\n        color:\"#000000\"\r\n      }\r\n\r\n}))\r\nexport default function FS(){\r\n\r\n  \r\n    \r\n    const classes = useStyles();\r\n    const [src,setSrc] = useState(null)\r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n      pollInterval: 500,\r\n    })\r\n   \r\n    if(loading) return <Loading/>\r\n   \r\n   \r\n\r\n    let audio = []\r\n \r\n      if(data === undefined || err || data === null){\r\n        audio = []\r\n      }\r\n      \r\n      else{\r\n    data.files.map((voice)=>{\r\n        \r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab} >\r\n          <div className={classes.container}>\r\n          <div className={classes.tabhead}>\r\n          <AllGuests params={voice.speaker}/>\r\n          <p className={classes.speech}>{voice.speech}</p>\r\n          </div>\r\n          <div>\r\n            <IconButton className={classes.icon}>\r\n              <Icon>\r\n                <PlayCircleFilledOutlined/>\r\n              </Icon>\r\n            </IconButton>\r\n        {/* <audio key={voice._id}  controls>\r\n           <source  src={`http://localhost:4000/Audio/${voice.file}`} type=\"audio/wav\"></source>\r\n        </audio> */}\r\n        </div>\r\n        </div>\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n\r\n\r\n\r\nif(data.files[0] === undefined){\r\n  console.log(data)\r\n  return(<h1>lets start.... </h1>)\r\n}\r\n\r\nelse{\r\n \r\n    return(\r\n     \r\n      <div className={classes.box}>\r\n        <ul>\r\n        {audio}\r\n        </ul>\r\n\r\n      \r\n      </div>\r\n    )\r\n}\r\n    \r\n}\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Username.js",["225","226","227"],"\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\n\r\n\r\n\r\nconst FIND = gql`\r\n    query find($userid:[String]){\r\n      finduser(ids:$userid){\r\n        _id\r\n        username\r\n        email\r\n        isGuest\r\n      }\r\n    }\r\n`\r\n\r\n\r\nexport default function Username(ids){\r\n    let speakers = []\r\n    ids.ids.map(id=>{\r\n        speakers.push(id.speaker)\r\n    })\r\n    const{ loading,err,data} = useQuery(FIND,{\r\n        variables: {userid:speakers}\r\n      })\r\n      if (loading) return null\r\n    \r\n    // return data.finduser.username\r\n    let users=[]\r\n    if(!err || data === undefined){\r\n    data.finduser.map(user=>{\r\n        users.push(\r\n            <li>\r\n                <h3>{user.username}</h3>\r\n            </li>\r\n        )\r\n    })\r\n}\r\n   \r\n    return <div>\r\n        <ul>\r\n            {users}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateRoom.js",["228","229","230","231","232","233","234","235"],"import React,{useState} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { userMutation, gql, useMutation } from '@apollo/client'\r\n\r\n\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport {  useLazyQuery, useQuery } from '@apollo/client'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        PodcastBuilder\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#212121\",\r\n    '&:hover': {\r\n        background: \"#000000\",\r\n        color:\"#00000\"\r\n     },\r\n  },\r\n}));\r\n\r\n\r\n    const FIND_ROOM = gql`\r\n    query findRoom($id:String){\r\n        findRoom(id:$id){\r\n          roomID\r\n          roomname\r\n          creator\r\n        }\r\n      }\r\n`\r\n\r\nexport default function CreateRoom() {\r\n  const classes = useStyles();\r\n\r\n      const UPLOAD_FILE = gql`\r\n    mutation($roomname:String,$creator:String){\r\n        createRoom(roomname:$roomname,creator:$creator){\r\n          roomID\r\n          roomname\r\n          creator\r\n        }\r\n      }\r\n`\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: 'light'\r\n    },\r\n  });\r\n\r\n  const [state,setState] = useState({\r\n      roomid:\"\",\r\n      _isRoomFound:false\r\n  })\r\n  const roomIDRef = React.useRef()\r\n\r\nconst[createRoom] = useMutation(UPLOAD_FILE,{\r\n    onCompleted: data => {\r\n        if(data){\r\n        console.log(data)\r\n        setState({roomid:data.createRoom.roomID})\r\n        console.log(state)\r\n        // setState({_isRoomFound:true})\r\n        }\r\n    }\r\n})\r\n    \r\n\r\n   \r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault()\r\n       \r\n        if(roomIDRef.current.value.trim() !== \"\"){\r\n        createRoom({ variables: { roomname:roomIDRef.current.value,\r\n            creator:\"606b367f6a34b008e829d1f4\" }} )\r\n        }\r\n    }\r\n    \r\n    if(state._isRoomFound===false){\r\n      return (\r\n   \r\n    <ThemeProvider theme={theme}>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create Room\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n        \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={roomIDRef}\r\n            required\r\n            fullWidth\r\n            name=\"roomname\"\r\n            label=\"Room Name\"\r\n            type=\"text\"\r\n            id=\"roomid\"\r\n            \r\n          />\r\n          \r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Create\r\n          </Button>\r\n          \r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </ThemeProvider>\r\n  )\r\n    }\r\n    else{\r\n      return <Redirect to={`roomID=${state.roomid}`}/> \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default function CreateRoom(){\r\n     \r\n//     const UPLOAD_FILE = gql`\r\n//     mutation($roomname:String,$creator:String){\r\n//         createRoom(roomname:$roomname,creator:$creator){\r\n//           roomID\r\n//           roomname\r\n//           creator\r\n//         }\r\n//       }\r\n// `\r\n\r\n// const [state, setState] = useState(0);\r\n\r\n// const[createRoom] = useMutation(UPLOAD_FILE,{\r\n//     onCompleted: data => {\r\n//         setState({roomid:data.createRoom.roomID})\r\n//         console.log(state)\r\n//     }\r\n// })\r\n\r\n\r\n\r\n//     const handleChange=(e)=>{\r\n//         console.log(e.target.value)\r\n//        setState({roomname:e.target.value})\r\n//      }\r\n//     const handleSubmit=(e)=>{\r\n//     e.preventDefault()\r\n   \r\n   \r\n//   createRoom({ variables: { roomname:state.roomname,creator:\"606b367f6a34b008e829d1f4\" } })\r\n// }\r\n\r\n\r\n//     if(!state.roomid){\r\n//     return(\r\n//         <form onSubmit={handleSubmit}>\r\n//             <input type='text' placeholder=\"roomname\" name=\"roomname\" onChange={handleChange}\r\n//              value={state.roomname}/>\r\n//             <input type=\"submit\"/> \r\n//         </form>\r\n//     )\r\n//     }\r\n//     else{\r\n      \r\n//         return (\r\n//             <Redirect to={`/roomID=${state.roomid}`} />\r\n//             )\r\n//     }\r\n    \r\n\r\n// }",["236","237"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\userLogin.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\userlogin.js",[],["238","239"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\InitJoinRoom.js",["240","241","242","243"],"import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useState} from 'react'\r\nimport {  gql, useLazyQuery, useQuery } from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        PodcastBuilder\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#212121\",\r\n    '&:hover': {\r\n        background: \"#000000\",\r\n        color:\"#00000\"\r\n     },\r\n  },\r\n}));\r\n\r\n\r\n    const FIND_ROOM = gql`\r\n    query findRoom($id:String){\r\n        findRoom(id:$id){\r\n          roomID\r\n          roomname\r\n          creator\r\n        }\r\n      }\r\n`\r\n\r\nexport default function InitJoinRoom() {\r\n  const classes = useStyles();\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: 'light'\r\n    },\r\n  });\r\n\r\n  const [state,setstate] = useState({\r\n      _isRoomFound:false,\r\n      room:\"\",\r\n      _isSubmitted:false\r\n  })\r\n  const roomIDRef = React.useRef()\r\n\r\n  const [findroom ,{loading,data}] = useLazyQuery(FIND_ROOM,{\r\n        variables: {id:state.room}\r\n      })\r\n      if(loading ) return <p>loading</p>\r\n    \r\n\r\n   \r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault()\r\n        setstate({room:roomIDRef.current.value})\r\n        findroom()\r\n        if(data){\r\n          setstate({_isRoomFound:true})\r\n          \r\n        }\r\n    }\r\n    \r\n    if(state._isRoomFound===false){\r\n      return (\r\n   \r\n    <ThemeProvider theme={theme}>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Room ID\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n        \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={roomIDRef}\r\n            required\r\n            fullWidth\r\n            name=\"roomid\"\r\n            label=\"RoomId\"\r\n            type=\"text\"\r\n            id=\"roomid\"\r\n            \r\n          />\r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Join\r\n          </Button>\r\n          \r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </ThemeProvider>\r\n  )\r\n    }\r\n    else{\r\n      return <Redirect to={`roomID=${state.room}`}/> \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default function InitJoinRoom(){\r\n\r\n\r\n\r\n//     const FIND_ROOM = gql`\r\n//     query($id:String){\r\n//         findRoom(id:$id){\r\n//           roomID\r\n//           roomname\r\n//           creator\r\n//         }\r\n//       }\r\n// `\r\n\r\n\r\n\r\n//     let [state,setstate] = useState('')\r\n\r\n//    const handleChange = (e)=>{\r\n//         setstate({roomid:e.target.value})\r\n//     }\r\n\r\n//         const room = useQuery(FIND_ROOM,{\r\n//             variables: {id:state.roomid}\r\n//           })\r\n//           if(room.loading) return null\r\n          \r\n    \r\n// if(room.data === undefined){\r\n//     return(\r\n      \r\n\r\n//         <form onSubmit={room}>\r\n//             <input type=\"text\"  onChange={handleChange}\r\n//             name=\"roomid\" value={state.roomid} placeholder=\"eneter the Room ID\"/>\r\n//             <input type=\"submit\" />\r\n//         </form>\r\n//     )\r\n// }\r\n// else{\r\n//    return <Redirect to={`roomID=${state.roomid}`}/>\r\n// }\r\n// }","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\context\\auth-context.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\listItems.js",["244","245","246","247","248"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { Person, Deck,Pages,Add } from '@material-ui/icons'\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <Pages />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"MyChannel\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <Deck />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"My Rooms\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <Person />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Profile\" />\r\n      \r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <Add/>\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"CreateRoom\" />\r\n      \r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last quarter\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end sale\" />\r\n    </ListItem>\r\n  </div>\r\n);","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Guestlists.js",["249"],"import { useMutation } from '@apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport React, { useContext } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport AuthContext from '../context/auth-context'\r\nimport Username from './Username'\r\n\r\n\r\n\r\nexport default function Guestlists(){\r\n\r\n    const auth = useContext(AuthContext)\r\n    const { room } = useParams()\r\n\r\n    const UPLOAD_GUEST = gql`\r\n    mutation($guestid:String,$roomid:String){\r\n        addToRoom(guestid:$guestid,roomid:$roomid)\r\n      }\r\n`\r\n\r\n\r\nconst[uploadGuest] = useMutation(UPLOAD_GUEST,{\r\n    onCompleted: data => {\r\n        console.log(data)\r\n    }\r\n    \r\n})\r\n\r\n   uploadGuest({variables:{guestid:auth.userId,roomid:room}})\r\n\r\n     \r\n\r\n    return<div>\r\n        <h1>guests</h1>\r\n        {/* <Username ids={guests}/> */}\r\n    </div>\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Login.js",["250","251"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Home.js",["252","253","254","255","256","257","258","259","260","261","262","263"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport {Person, PlayCircleFilledTwoTone} from '@material-ui/icons'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems.js';\r\nimport logo from '../logo.svg'\r\nimport { purple } from '@material-ui/core/colors';\r\n// import Chart from './Chart';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\nimport Files from './Files'\r\nimport AudioProcess from './AudioProcess'\r\nimport AllGuests from './AllGuests.js';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        PodcastBuilder\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    // backgroundColor:theme.palette.primary,\r\n    // color:theme.palette.text.primary,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: 'light',\r\n   \r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            PodcastBuilder\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n              {/* <AllGuests /> */}\r\n              <Person />\r\n        \r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        {/* <List>{secondaryListItems}</List> */}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n\r\n\r\n\r\n\r\n         \r\n        <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n          <Paper className={classes.paper}>\r\n              <div>\r\n              <img src={logo}/>\r\n              <h3>Podcast Name</h3>\r\n              <p>here is the new podcast...</p>\r\n              </div>\r\n              </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Container>\r\n      </main>\r\n      \r\n    </div>\r\n    </ThemeProvider>\r\n  );\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateChannel.js",["264","265"],"import {Redirect} from 'react-router-dom'\r\nimport React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {gql,useMutation} from '@apollo/client'\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" >\r\n         Podcast Builder\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#000000\",\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#212121\",\r\n    '&:hover': {\r\n        background: \"#000000\",\r\n        color:\"#00000\"\r\n     },\r\n  },\r\n}));\r\n\r\nconst UPLOAD_USER = gql`\r\nmutation($username:String,$email:String,$password:String){\r\n      Signup(username:$username,email:$email,password:$password){\r\n       _id\r\n       username\r\n       email\r\n       isGuest\r\n      }\r\n   }\r\n`\r\nexport default function Userlogin(){\r\n\r\n    \r\n    const [createUser] = useMutation(UPLOAD_USER,{\r\n        onCompleted:data=>console.log(data)\r\n    })\r\n \r\n    \r\n    const [state, setState] = useState({\r\n    _issubmitted:false\r\n    });\r\n\r\n    const firstNameRef = React.useRef()\r\n    const lastNameRef = React.useRef()\r\n    const passwordRef = React.useRef()\r\n    const emailRef = React.useRef()\r\n \r\n    const handleSubmit=(e)=>{\r\n       e.preventDefault()\r\n        const firstName = firstNameRef.current.value\r\n        const lastName = lastNameRef.current.value\r\n        const password = passwordRef.current.value\r\n        const email = emailRef.current.value\r\n        \r\n        if(firstName.trim() === null ||\r\n           lastName.trim()=== null ||\r\n           password.trim() === null ||\r\n           email.trim() === null){\r\n                console.log(\"enter the data\")\r\n           }\r\n        else{\r\n            createUser({variables:{username:firstName,email,password}})\r\n            setState({_issubmitted:true})\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //this is all for themes\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n          type: 'light'\r\n        },\r\n      });\r\n  const classes = useStyles();\r\n  \r\n  if(!state._issubmitted){\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n   <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        \r\n        <Typography component=\"h1\" variant=\"h5\">\r\n           Create Channel\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            \r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                \r\n                variant=\"outlined\"\r\n                inputRef={lastNameRef}\r\n                required\r\n                fullWidth\r\n                id=\"ChannelName\"\r\n                label=\"Channel Name\"\r\n                name=\"ChannelName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={passwordRef}\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Content Type\"\r\n                name=\"contenttype\"\r\n                autoComplete=\"off\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={emailRef}\r\n                required\r\n                fullWidth\r\n                name=\"Country\"\r\n                label=\"Country\"\r\n                id=\"Country\"\r\n               \r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={emailRef}\r\n                required\r\n                fullWidth\r\n                name=\"Discription\"\r\n                label=\"Discription\"\r\n                id=\"Discription\"\r\n               \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Button\r\n            type=\"Upload\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n             Upolad Image\r\n          </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n             Create\r\n          </Button>\r\n          </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n  }\r\n  else{\r\n    return <Redirect to='/initJoinRoom'/>\r\n  }\r\n}\r\n\r\n\r\n",["266","267"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\ListItems.js",["268","269","270","271","272","273","274","275"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Navbar.js",["276","277","278","279","280","281","282","283","284","285"],"import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Avatar, ListItem, ListItemIcon, ListItemText, Menu, MenuItem } from '@material-ui/core';\r\nimport { AccountCircle, Pages } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext, { AuthProvider } from '../context/auth-context'\r\nimport gql from 'graphql-tag';\r\nimport { useLazyQuery, useQuery } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    color:\"#ffffff\",\r\n    textDecoration:\"none\"\r\n  },\r\n  special:{\r\n    backgroundColor:\"#ffffff\",\r\n    color:\"blue\",\r\n    textDecoration:\"none\",\r\n    padding:5,\r\n    borderRadius:5\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appbar:{\r\n    backgroundColor:\"#424242\"\r\n  },\r\n  menu:{\r\n    color:\"#263238\",\r\n    textDecoration:\"none\"\r\n  }\r\n}));\r\n\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  \r\n\r\n \r\n   \r\n\r\n  console.log(auth)\r\n  const open = Boolean(anchorEl);\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n \r\n  return (\r\n    // <React.Fragment className={classes.root}>\r\n      <AppBar className={classes.appbar} position=\"static\">\r\n        <Toolbar>\r\n         \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            PodcastBuilder\r\n           \r\n          </Typography>\r\n\r\n          <Button >\r\n            <Link className={classes.button} to=\"/home\">Home</Link>\r\n          </Button> <Button >\r\n            <Link className={classes.button}>Channel</Link>\r\n          </Button> <Button >\r\n            <Link className={classes.button} to=\"/createroom\">Create</Link>\r\n          </Button> <Button >\r\n            <Link className={classes.button} to=\"/initJoinRoom\">Join</Link>\r\n          </Button> \r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                \r\n               <AccountCircle/>\r\n                \r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem >Profile</MenuItem>\r\n                <MenuItem>\r\n               <Link className={classes.menu} to=\"/createchannel\">CreateChannel</Link>\r\n               </MenuItem>\r\n                <MenuItem  >\r\n                  <Link className={classes.menu}>Logout</Link>\r\n                </MenuItem>\r\n                \r\n              </Menu>\r\n            </div>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    // </React.Fragment>\r\n  );\r\n}\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\MenuItems.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\EpisodeDisplay.js",["286","287","288"],"\r\n\r\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin:20,\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n      },\r\n}))\r\n\r\nexport default function EpisodeDisplay(){\r\n    const classes = useStyles()\r\n    const theme = createMuiTheme({\r\n      palette:{\r\n        type:\"dark\"\r\n      }\r\n    })\r\n    return(\r\n      <ThemeProvider theme={theme}>\r\n      <Grid container spacing={3}>\r\n        {/* repeate this full grid while printing */}\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <Paper className={classes.paper}>\r\n            <div>\r\n            <img src={logo}/>\r\n            <h3>Podcast Name</h3>\r\n            <p>here is the new podcast...</p>\r\n            </div>\r\n            </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <Paper className={classes.paper}>\r\n            <div>\r\n            <img src={logo}/>\r\n            <h3>Podcast Name</h3>\r\n            <p>here is the new podcast...</p>\r\n            </div>\r\n            </Paper>\r\n      </Grid> <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <Paper className={classes.paper}>\r\n            <div>\r\n            <img src={logo}/>\r\n            <h3>Podcast Name</h3>\r\n            <p>here is the new podcast...</p>\r\n            </div>\r\n            </Paper>\r\n      </Grid>\r\n      {/* end */}\r\n     \r\n    </Grid>\r\n    </ThemeProvider>\r\n    )\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Signup.js",["289"],"import {Redirect, Switch} from 'react-router-dom'\r\nimport React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {gql,useMutation} from '@apollo/client'\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" >\r\n         Podcast Builder\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#000000\",\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#000000\",\r\n    '&:hover': {\r\n        background: \"#424242\",\r\n     },\r\n  },\r\n  submitCreator:{\r\n    backgroundColor:\"#00bcd4\",\r\n    color:\"#000000\",\r\n    '&:hover': {\r\n      \r\n      backgroundColor:\"#4dd0e1\"\r\n   },\r\n  }\r\n}));\r\n\r\nconst UPLOAD_USER = gql`\r\nmutation($username:String,$email:String,$password:String,$isGuest:Boolean){\r\n      Signup(username:$username,email:$email,password:$password,isGuest:$isGuest){\r\n       _id\r\n       username\r\n       email\r\n       isGuest\r\n      }\r\n   }\r\n`\r\nexport default function Userlogin(){\r\n\r\n    \r\n  const[accepted,setAccepted] = React.useState(false)\r\n  const handleChange = ()=>{\r\n    if(accepted) setAccepted(false)\r\n    else setAccepted(true)\r\n  }\r\n    \r\n    const [state, setState] = useState({\r\n    _issubmitted:false\r\n    });\r\n\r\n    const [createUser] = useMutation(UPLOAD_USER,{\r\n      onCompleted:data=>{\r\n      setState({_issubmitted:true})}\r\n      \r\n  })\r\n\r\n    const firstNameRef = React.useRef()\r\n    const lastNameRef = React.useRef()\r\n    const passwordRef = React.useRef()\r\n    const emailRef = React.useRef()\r\n \r\n    const handleSubmit=(e)=>{\r\n       e.preventDefault()\r\n        const firstName = firstNameRef.current.value\r\n        const lastName = lastNameRef.current.value\r\n        const password = passwordRef.current.value\r\n        const email = emailRef.current.value\r\n        const isGuest = !accepted\r\n        if(firstName.trim() === null ||\r\n           lastName.trim()=== null ||\r\n           password.trim() === null ||\r\n           email.trim() === null){\r\n                console.log(\"enter the data\")\r\n           }\r\n        else{\r\n            setState({_issubmitted:true})\r\n         \r\n            createUser({variables:{username:firstName,email:email,password:password,isGuest:isGuest}})\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    //this is all for themes\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n          type: 'light'\r\n        },\r\n      });\r\n  const classes = useStyles();\r\n  \r\n  if(!state._issubmitted){\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n   <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                inputRef={firstNameRef}\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                \r\n                variant=\"outlined\"\r\n                inputRef={lastNameRef}\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={emailRef}\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={passwordRef}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            \r\n            \r\n          </Grid>\r\n        \r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            name=\"submit\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <FormControlLabel\r\n            control={<Checkbox onChange={handleChange}  name=\"accepted\" value={accepted}/>}\r\n            label=\"Join as Creator\"\r\n          />\r\n          <Grid container justify=\"\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n  }\r\n  else{\r\n    if(state._issubmitted && !accepted) return <Redirect to='/initJoinRoom'/>\r\n    else if(state._issubmitted && accepted) return <Redirect to=\"/createchannel\"/>\r\n  }\r\n}\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Login.js",["290","291","292","293","294"],"import {Redirect} from 'react-router-dom'\r\nimport React,{useContext, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {gql,useLazyQuery,useMutation, useQuery} from '@apollo/client'\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport AuthContext, {AuthProvider} from '../context/auth-context'\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" >\r\n         Podcast Builder\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#000000\",\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#212121\",\r\n    '&:hover': {\r\n        background: \"#000000\",\r\n        color:\"#00000\"\r\n     },\r\n  },\r\n}));\r\n\r\nconst LOGIN_USER = gql`\r\nquery login($email:String,$password:String){\r\n    login(email:$email,password:$password){\r\n      _id\r\n      username\r\n      email\r\n      isGuest\r\n    }\r\n  }\r\n`\r\nexport default function Login(){\r\n\r\n    const auth = useContext(AuthContext)\r\n    const passwordRef = React.useRef()\r\n    const emailRef = React.useRef()\r\n \r\n    \r\n    const [loginuser,{loading,data,called,err}] = useLazyQuery(LOGIN_USER,{\r\n        \r\n        onError:(err)=>{console.log(err)},\r\n        onCompleted:(data)=>{\r\n          \r\n          auth.login(data.login._id,data.login.username,data.login.isGuest)\r\n        }\r\n    })\r\n \r\n    \r\n \r\n\r\n \r\n    \r\n    const handleSubmit=(e)=>{\r\n       e.preventDefault()\r\n     \r\n        const passwordG = passwordRef.current.value\r\n        const emailG = emailRef.current.value\r\n\r\n        if(passwordG.trim() === null ||\r\n           emailG.trim() === null){\r\n                console.log(\"enter the data\")\r\n           }\r\n        else{\r\n           \r\n         \r\n            loginuser({variables:{email:emailG,password:passwordG}})\r\n            if(loading) return <p>loading..</p>\r\n            \r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    //this is all for themes\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n          type: 'light'\r\n        },\r\n      });\r\n  const classes = useStyles();\r\n  \r\n  if(err || data === undefined){\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n   <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n               \r\n                variant=\"outlined\"\r\n                inputRef={emailRef}\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={passwordRef}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                \r\n              />\r\n            </Grid>\r\n            \r\n            \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container justify=\"\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Dont have an account? Sign up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n  }\r\n\r\n  else{\r\n    return (<Redirect to='/home' />)\r\n  }\r\n}\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\InitJoinRoom.js",["295","296","297","298","299","300","301","302","303","304","305"],"import React from 'react'\r\nimport clsx from 'clsx';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useState} from 'react'\r\nimport {  gql, useLazyQuery, useQuery } from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\nimport NavBar from './Navbar';\r\nimport { Mic } from '@material-ui/icons';\r\nimport Checkbeforjoining from './Checkbeforjoining'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        PodcastBuilder\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor:\"#000000\",\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: theme.palette.secondary.main,\r\n    '&:hover': {\r\n        background: theme.palette.secondary.light,\r\n     },\r\n  },\r\n  container:{\r\n    display:\"flex\",\r\n    marginTop:100\r\n  },\r\n  sidepanel:{\r\n   backgroundColor:\"#fafafa\"\r\n  },\r\n  list:{\r\n   \r\n    marginTop:10,\r\n    padding:10,\r\n    listStyleType:\"none\",\r\n    borderRadius:5\r\n  },\r\n  orange:{\r\n    backgroundColor:\"#ffccbc\"\r\n  },\r\n  yellow:{\r\n    backgroundColor:\"#fff9c4\"\r\n  },\r\n  blue:{\r\n    backgroundColor:\"#b3e5fc\"\r\n  }\r\n}));\r\n\r\n\r\n    const FIND_ROOM = gql`\r\n    query findRoom($id:String){\r\n        findRoom(id:$id){\r\n          roomID\r\n          roomname\r\n          creator\r\n        }\r\n      }\r\n`\r\n\r\nexport default function InitJoinRoom() {\r\n  const classes = useStyles();\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: 'light'\r\n    },\r\n  });\r\n  let classNameHolder = [classes.orange,classes.blue,classes.yellow]\r\n  const [state,setstate] = useState({\r\n      _isRoomFound:false,\r\n      room:\"\",\r\n      _isSubmitted:false\r\n  })\r\n  const roomIDRef = React.useRef()\r\n\r\n  const [findroom ,{loading,data}] = useLazyQuery(FIND_ROOM,{\r\n        variables: {id:state.room}\r\n      })\r\n      if(loading ) return <p>loading</p>\r\n    \r\n\r\n   \r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault()\r\n        setstate({room:roomIDRef.current.value})\r\n        findroom()\r\n        if(data){\r\n          setstate({_isRoomFound:true})\r\n          \r\n        }\r\n    }\r\n    \r\n    if(state._isRoomFound===false){\r\n\r\n      \r\n      return (\r\n   \r\n    <div>\r\n    <NavBar/>\r\n    <div className={classes.container}>\r\n      <Container maxWidth=\"xs\">\r\n     \r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <Mic />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Room ID\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n        \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={roomIDRef}\r\n            required\r\n            fullWidth\r\n            name=\"roomid\"\r\n            label=\"RoomId\"\r\n            type=\"text\"\r\n            id=\"roomid\"\r\n            \r\n          />\r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Join\r\n          </Button>\r\n          \r\n        </form>\r\n      </div>\r\n      </Container>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n\r\n<div className={classes.sidepanel}>\r\n        <Container maxWidth=\"xs\">\r\n          <h4>Created Rooms</h4>\r\n          <ul>\r\n          <li className={clsx(classes.list, classNameHolder[Math.floor(Math.random()*3)])}>aee04343-1c85-41cb-b375-2493a8efa2b0</li>\r\n          <li className={clsx(classes.list, classNameHolder[Math.floor(Math.random()*3)])}>aee04343-1c85-41cb-b375-2493a8efa2b0</li>\r\n          <li className={clsx(classes.list, classNameHolder[Math.floor(Math.random()*3)])}>aee04343-1c85-41cb-b375-2493a8efa2b0</li>\r\n          <li className={clsx(classes.list, classNameHolder[Math.floor(Math.random()*3)])}>aee04343-1c85-41cb-b375-2493a8efa2b0</li>\r\n          </ul>\r\n        </Container>\r\n    </div>\r\n    </div>\r\n    \r\n</div>\r\n  )\r\n    }\r\n    else{\r\n      return <Checkbeforjoining roomid={state.room}/> \r\n    }\r\n}\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\PodcastRoom.js",["306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport {Person} from '@material-ui/icons'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from '../components/listItems.js';\r\nimport Reactmic from './Reactmic';\r\nimport Deposite from './Deposits'\r\nimport Orders from './Orders';\r\nimport Files from '../components/Files'\r\nimport Copyright from './Copyright'\r\n// import AudioProcess from '../components/AudioProcess'\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n      width: '0.4em'\r\n    },\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    marginTop:40,\r\n    backgroundColor:theme.palette.background\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `200px`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 300,\r\n  },\r\n  fixedHeightPortal: {\r\n    height: 400,\r\n    \r\n  },\r\n\r\n  recordControl:{\r\n    marginTop:10,\r\n    height:90\r\n  }\r\n  \r\n\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n     \r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  \r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const fixedHeightPaperPortal = clsx(classes.paper, classes.fixedHeightPortal);\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div className={classes.root}>\r\n     \r\n      <main className={classes.content}>\r\n       \r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n           \r\n            <Grid item xs={12} md={8} lg={8}>\r\n              <Paper className={fixedHeightPaperPortal}>\r\n                \r\n                <Files/>\r\n              </Paper>\r\n            </Grid>\r\n           \r\n            <Grid item xs={12} md={4} lg={4}>\r\n              <Grid>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposite/>\r\n                \r\n              </Paper>\r\n            </Grid>\r\n            <Grid>\r\n            <Paper className={classes.recordControl}>\r\n              \r\n              <Reactmic/>\r\n           \r\n              </Paper>\r\n            </Grid>\r\n            </Grid>\r\n           \r\n          </Grid>\r\n          {/* <Box pt={4}>\r\n            <Copyright />\r\n          </Box> */}\r\n        </Container>\r\n      </main>\r\n     \r\n    </div>\r\n    <Copyright/>\r\n    </ThemeProvider>\r\n  );\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\PodcastPortal.js",["324","325","326"],"import PodcastRoom from \"./PodcastRoom\"\r\nimport Navbar from './Navbar'\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core'\r\nimport { grey } from \"@material-ui/core/colors\"\r\nimport Copyright from \"./Copyright\"\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        backgroundColor:\"#201A23\"\r\n    }\r\n}))\r\n\r\nexport default function PodcastPortal(){\r\n    const classes = useStyles()\r\n    return(\r\n        <ThemeProvider>\r\n            <div className={classes.root}>\r\n            <Navbar/>\r\n            <PodcastRoom/>\r\n           \r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Home.js",["327","328","329","330"],"import { Container, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport logo from '../logo.svg'\r\nimport EpisodeDisplay from \"./EpisodeDisplay\";\r\nimport NavBar from \"./Navbar\";\r\nimport AuthContext from '../context/auth-context'\r\nimport { useContext } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root:{\r\n    backgroundColor:\"#303030\",\r\n    height:\"100%\",\r\n    minHeight:\"100vh\"\r\n  }\r\n}))\r\n\r\n    \r\n\r\nexport default function Home(param){\r\n  const classes = useStyles()\r\n  const auth = useContext(AuthContext)\r\n  console.log(auth)\r\n    return(\r\n        <div className={classes.root}>\r\n        <NavBar username={auth.username}/>\r\n       {/* <Box pt={4}>\r\n            <Copyright />\r\n          </Box> */}\r\n\r\n        <EpisodeDisplay/>\r\n        \r\n       \r\n        </div>\r\n\r\n         \r\n     \r\n\r\n    )\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\CreateRoom.js",["331"],"import { useMutation } from \"@apollo/client\";\r\nimport { Avatar, Button, Container, CssBaseline, Grid, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport { Lock, Mic } from \"@material-ui/icons\";\r\nimport gql from \"graphql-tag\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport NavBar from \"./Navbar\";\r\nimport AuthContext from '../context/auth-context'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n \r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: \"#000000\",\r\n        padding:'20px'\r\n      },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n     backgroundColor:theme.palette.secondary.main,\r\n      '&:hover': {\r\n          background: theme.palette.secondary.light,\r\n        \r\n       },\r\n    },\r\n  }));\r\n\r\n\r\n  const CREATE_ROOM = gql`\r\nmutation($roomname:String,$creator:String){\r\n      createRoom(roomname:$roomname,creator:$creator){\r\n       roomID\r\n      }\r\n   }\r\n`\r\n  \r\n\r\nexport default function CreateRoom(){\r\n\r\n    const auth = useContext(AuthContext) \r\n    const [state, setState] = useState({\r\n        roomID:null\r\n        });\r\n\r\n    const [createRoom] = useMutation(CREATE_ROOM,{\r\n        onCompleted:data=>{\r\n            console.log(data.createRoom.roomID)\r\n            setState({roomID:data.createRoom.roomID})\r\n        }\r\n    })\r\n\r\n    const roomnameRef = React.useRef()\r\n\r\n    const handlesubmit=(e)=>{\r\n        e.preventDefault()\r\n        const roomname =roomnameRef.current.value\r\n        const creator = auth.userId\r\n        if(roomname.trim() === null){\r\n            console.log(\"enetr the valid name\")\r\n        }\r\n        else{\r\n            createRoom({variables:{roomname,creator}})\r\n            \r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n    if(state.roomID === null){\r\n    return(\r\n        <div>\r\n        <NavBar/>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n           <CssBaseline />\r\n           <div className={classes.paper}>\r\n           <Avatar className={classes.avatar}>\r\n          <Mic />\r\n        </Avatar>\r\n             <Typography component=\"h1\" variant=\"h5\">\r\n               Let's Create Episode on Builder....\r\n             </Typography>\r\n             <form className={classes.form} onSubmit={handlesubmit}  noValidate>\r\n               <Grid container spacing={2}>\r\n     \r\n                 <Grid item xs={12}>\r\n                   <TextField\r\n                     variant=\"outlined\"\r\n                     inputRef={roomnameRef}\r\n                     required\r\n                     fullWidth\r\n                     id=\"roomname\"\r\n                     label=\"Room Name\"\r\n                     name=\"roomname\"\r\n                     autoComplete=\"off\"\r\n                   />\r\n                 </Grid>\r\n                \r\n                 \r\n                 \r\n               </Grid>\r\n               <Button\r\n                 type=\"submit\"\r\n                 fullWidth\r\n                 variant=\"contained\"\r\n                 color=\"primary\"\r\n                 className={classes.submit}\r\n               >\r\n                 create\r\n               </Button>\r\n              \r\n             </form>\r\n           </div>\r\n          \r\n         </Container>\r\n         </div>\r\n    )}\r\n    else{\r\n        return(<Redirect to={`/roomID=${state.roomID}`}/>)\r\n    }\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Orders.js",["332","333","334","335","336","337","338","339","340","341","342","343","344"],"\r\n\r\n//no used can be deleted\r\n\r\nimport React, { useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport { LocalConvenienceStoreOutlined, Mic } from '@material-ui/icons'\r\nimport MicRecorder from 'mic-recorder-to-mp3'\r\nimport {AudioProcess} from './AudioProcess'\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button:{\r\n    width:\"100%\",\r\n   \r\n  },\r\n  record:{\r\n    backgroundColor:theme.palette.secondary.main\r\n  },\r\n  done:{\r\n    backgroundColor:theme.palette.success.main\r\n  },\r\n  box:{\r\n    textAlign:\"right\",\r\n    width:\"100%\",\r\n   \r\n  }\r\n}));\r\nvar Mp3Recorder\r\nexport default function Orders() {\r\n  const classes = useStyles();\r\n  const [state,setState] = useState({\r\n    _isRecording:false,\r\n    blob:\"\"\r\n  })\r\n\r\n  \r\n  const startR=()=>{\r\n      if(!state._isRecording){\r\n        setState({blob:\"\"})\r\n        Mp3Recorder = new MicRecorder({ bitRate: 128 });\r\n        Mp3Recorder.start()\r\n        .then(()=>{\r\n          setState({_isRecording:true})\r\n        }).catch((e) => console.error(e))\r\n      }\r\n\r\n  }\r\n  const stopR=()=>{\r\n\r\n    Mp3Recorder\r\n    .stop()\r\n    .getMp3()\r\n    .then(([buffer, blob]) => {\r\n     \r\n      setState({ blob, isRecording: false });\r\n    }).catch((e) => console.log(e));\r\n\r\n    \r\n  }\r\n\r\n  const donefun=()=>{\r\n    console.log('clicked')\r\n    // return <Redirect to='/editpodcast'/>\r\n  }\r\n\r\n  // if(state.blob){\r\n  // AudioProcess(state.blob)\r\n  // }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.box} >\r\n        <div className={classes.record}> <Button className={classes.button}\r\n        onClick={state._isRecording ? stopR:startR}>\r\n          {state._isRecording ? 'Stop':'Record'}</Button></div>\r\n     \r\n      <div className={classes.done} ><Button className={classes.button}\r\n      onClick={donefun}>Done</Button></div>\r\n       \r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Deposits.js",["345","346","347","348","349","350","351"],"import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Title from './Title';\r\nimport { useParams } from 'react-router';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/client';\r\nimport AllGuests from './AllGuests';\r\nimport AllUsers from './AllUsers'\r\nimport Title from './Title';\r\nimport { InfoSharp } from '@material-ui/icons';\r\nimport {} from '@material-ui/icons'\r\nimport { Button, Icon, IconButton, Popover } from '@material-ui/core';\r\nimport Loading from './loading'\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n  title:{\r\n    color:\"#F1E9DB\",\r\n    flex:1\r\n  },\r\n  typography: {\r\n    paddingLeft:10,\r\n    paddingRight:10,\r\n    fontSize:14,\r\n    opacity:0.5\r\n  },\r\n  container:{\r\n    display:\"flex\"\r\n  },\r\n  icon:{\r\n    color:\"#cfd8dc\"\r\n  },\r\n  header:{\r\n    color:\"#607d8b\"\r\n  }\r\n}));\r\n\r\nconst SHOW_FILE = gql`\r\nquery findroom($id:String){\r\n  findRoom(id:$id){\r\n    roomID\r\n    roomname\r\n    creator\r\n  }\r\n}\r\n`\r\n\r\nexport default function Deposits() {\r\n\r\n  const classes = useStyles();\r\n  const { room } = useParams()\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n    variables: {id:room},\r\n    \r\n  })\r\n \r\n  if (loading ) return <Loading/>\r\n\r\n \r\n  \r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.container}>\r\n\r\n      <div className={classes.title}>\r\n      <h3 className={classes.title}>\r\n      {data.findRoom.roomname}\r\n      </h3>\r\n      </div>\r\n\r\n     <div>\r\n        <IconButton className={classes.icon}\r\n         aria-describedby={id}  color=\"primary\" onClick={handleClick}>\r\n        <Icon>\r\n          <InfoSharp/>\r\n        </Icon>\r\n      </IconButton>\r\n      \r\n      <Popover\r\n       \r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        <Typography  className={classes.typography}>\r\n          <p className={classes.header}>created by <AllGuests params={data.findRoom.creator}/></p>\r\n          <p>on 15 jan 2021</p>\r\n          <p>{room}</p>\r\n        </Typography>\r\n      </Popover>\r\n      </div>\r\n    \r\n      \r\n    </div>\r\n    <AllUsers/>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\AllUsers.js",["352","353","354","355","356","357","358"],"\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport {  gql, useMutation, useQuery } from '@apollo/client'\r\n\r\nimport { Redirect, useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\n\r\nimport { createMuiTheme, FormHelperText, Icon, makeStyles, ThemeProvider } from '@material-ui/core'\r\nimport { Add, FaceSharp } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles({\r\n  container:{\r\n    display:\"flex\",\r\n    overflowY:\"hidden\"\r\n  },\r\n\r\n  avatar:{\r\n    flex:3,\r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:40,\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#5DB7DE\",\r\n    color:\"#000000\"\r\n  },\r\n  orangeAvatar:{\r\n    flex:3,\r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:40,\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#FF7F11\",\r\n    color:\"#000000\"\r\n  },\r\n  purpleAvatar:{\r\n    flex:3,\r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:40,\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#F08080\",\r\n    color:\"#000000\"\r\n  }\r\n});\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n query listGuests($roomId:String){\r\n  \r\n    listGuests(roomId:$roomId)\r\n  \r\n }\r\n`\r\nexport default function FS(){\r\n\r\n    const theme = createMuiTheme({\r\n      palette:{\r\n        type:\"dark\"\r\n      }\r\n    })\r\n\r\n    const classes = useStyles();\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,error,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomId:room},\r\n      pollInterval:500,\r\n    })\r\n \r\n    if (loading) return null\r\n\r\n     \r\n    let guestList = []\r\n   \r\n    let classNameHolder = [classes.avatar,classes.orangeAvatar,classes.purpleAvatar]\r\n    if(data){\r\n      data.listGuests.map(guest=>{\r\n        guestList.push(\r\n        <div key={guest} className={classNameHolder[Math.floor(Math.random()*3)]} >\r\n        <Icon>\r\n          <FaceSharp/>\r\n        </Icon>\r\n        <br></br>\r\n        <AllGuests params={guest}/><br></br>\r\n        </div>)\r\n      })\r\n    }\r\n    \r\n\r\n    return(\r\n     <ThemeProvider theme={theme}>\r\n       <h3>Joined Guests</h3>\r\n        <div className={classes.container}>\r\n        {guestList}\r\n         </div>\r\n     </ThemeProvider>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\AllGuests.js",["359","360","361","362","363","364","365"],"import { useMutation, useQuery } from '@apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport React, { useContext } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport AuthContext from '../context/auth-context'\r\nimport Username from '../components/Username'\r\n\r\n\r\n\r\n\r\nconst SHOW_USER = gql`\r\nquery user($id:String){\r\n    finduser(id:$id){\r\n      username\r\n    }\r\n  }\r\n`\r\n\r\nexport default function AllGuests(props){\r\n\r\n    const{ loading,error,data} = useQuery(SHOW_USER,{\r\n        variables: {id:props.params}\r\n      })\r\n     if(loading) return null\r\n     \r\n     else {\r\n       return data.finduser.username\r\n     }\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Title.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\AudioProcess.js",["366","367"],"import React from 'react'\r\nimport { userMutation, gql, useMutation, ApolloConsumer } from '@apollo/client'\r\nimport { useParams } from 'react-router'\r\n\r\n\r\nconst UPLOAD_FILE = gql`\r\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\r\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\r\n  }\r\n`\r\n\r\nexport function AudioProcess(param){\r\n\r\n    const[uploadFile] = useMutation(UPLOAD_FILE,{\r\n      onCompleted: data => console.log(data),\r\n    })\r\n\r\n      const {room}=\"aee04343-1c85-41cb-b375-2493a8efa2b0\"//useParams(0)\r\n      // console.log(param)\r\n      const file = param\r\n      \r\n      let speaker = \"606b367f6a34b008e829d1f4\"\r\n      if(!file) return\r\n      uploadFile({ variables: { file,roomid:room,speaker:speaker } })\r\n  \r\n      return(\r\n        \r\n        <ApolloConsumer>\r\n        \r\n        {client=>(\r\n        <h1>file</h1>)}\r\n        </ApolloConsumer>\r\n      )\r\n  \r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Reactmic.js",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382"],"import { ReactMic } from 'react-mic';\r\nimport React, { useContext, useEffect, useState } from 'react' \r\nimport {AudioProcess} from './AudioProcess'\r\nimport {gql, useMutation} from '@apollo/client';\r\nimport {Button, Container, Grid, Icon, IconButton, ThemeProvider} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport AuthContext from '../context/auth-context'\r\nimport { Link } from 'react-router-dom';\r\nimport {saveAs} from 'file-saver'\r\nimport { Done, KeyboardArrowLeft, KeyboardArrowRight, Mic, PlayArrow, Stop } from '@material-ui/icons';\r\nimport Recorder from 'recorder-js';\r\nimport Gif from './Gif'\r\n// var toWav = require('audiobuffer-to-wav')\r\n// const UPLOAD_FILE = gql`\r\n//   mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\r\n//       UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\r\n//   }\r\n// `\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  buttonroot:{\r\n    display:'flex',\r\n    width:'100%',\r\n  },\r\n  startbutton:{\r\n    flex:1,\r\n    color:'blue'\r\n  },\r\n  stopbutton:{\r\n    flex:1,\r\n    color:\"red\"\r\n  },\r\n  donebutton:{\r\n   \r\n    textDecoration:'none'\r\n  },\r\n  \r\n  container:{\r\n    padding:10\r\n  },\r\n  control:{\r\n    margin:10,\r\n    display:\"flex\"\r\n  },\r\n  icon:{\r\n    // flex:1,\r\n  \r\n    backgroundColor:\"#FFFFFF\",\r\n    textAlign:\"center\",\r\n    color:\"#000000\",\r\n    '&:hover':{\r\n      color:\"red\"\r\n    }\r\n  },\r\n\r\n  iconClick:{\r\n    color:\"red\",\r\n    backgroundColor:\"#424242\"\r\n  },\r\n  iconmic:{\r\n    // flex:1,\r\n    textAlign:\"center\",\r\n    color:\"#ff4848\",\r\n    \r\n  },\r\n  gif:{\r\n    flex:1,\r\n    justifyItems:\"contain\",\r\n    margin:14\r\n  },\r\n  iconnext:{\r\n    color:\"lightgreen\"\r\n  }\r\n\r\n}))\r\n\r\n\r\n\r\n\r\nconst UPLOAD_FILE = gql`\r\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\r\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\r\n  }\r\n`\r\n\r\nexport default function Test(){\r\n    const classes = useStyles();\r\n    const auth = useContext(AuthContext)\r\n    const audioContext =  new (window.AudioContext || window.webkitAudioContext)();\r\n    const recorder = new Recorder(audioContext, {\r\n        // An array of 255 Numbers\r\n        // You can use this to visualize the audio stream\r\n        // If you use react, check out react-wave-stream\r\n        // onAnalysed: data => console.log(data),\r\n      });\r\n        const { room } = useParams()\r\n\r\n      \r\n      const [recording,setRecording] = useState(false)\r\n      const [file,setFile] = useState(null)\r\n\r\n          const[uploadFile] = useMutation(UPLOAD_FILE,{\r\n        onCompleted: data => console.log(data),\r\n      })\r\n\r\n  navigator.mediaDevices.getUserMedia({audio: true})\r\n  .then(stream => recorder.init(stream))\r\n  .catch(err => console.log('Uh oh... unable to get stream...', err));\r\n\r\n\r\n  const startRecording=()=>{\r\n      \r\n    recorder.start()\r\n      .then(() => setRecording(true));\r\n      console.log(\"start\")\r\n  }\r\n\r\n  const stopRecording=()=>{\r\n    console.log(\"stop\")\r\n    recorder.stop()\r\n      .then(({blob, buffer}) => {\r\n        setRecording(false)\r\n        setFile(blob);\r\n        \r\n      });\r\n      if(file != null){\r\n        let speaker = auth.userId\r\n        uploadFile({variables:{file:file,roomid:room,speaker:speaker}})\r\n      }\r\n      \r\n  }\r\n \r\n  \r\n\r\n  if(!recording){\r\n\r\n  return(\r\n             \r\n\r\n        <div className={classes.container}>\r\n          <div className={classes.control}>\r\n          <div className={classes.gif}>\r\n            {/* <Gif/> */}\r\n          </div>\r\n           \r\n           \r\n            <IconButton\r\n            className={ classes.icon} \r\n            onClick={ startRecording }>\r\n            \r\n                <Mic/>\r\n             \r\n            </IconButton>\r\n            {/* <Button \r\n            className={ classes.iconmic\r\n            } \r\n            onClick={ stopRecording }>\r\n             \r\n                \r\n             \r\n            </Button> */}\r\n            <IconButton className={classes.iconnext}>\r\n            {/* <Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> */}\r\n           \r\n              <KeyboardArrowRight/>\r\n            \r\n            {/* </Link> */}\r\n          </IconButton>\r\n            \r\n\r\n          </div>\r\n        </div>\r\n  )\r\n          }\r\n\r\n          else{\r\n      return(                   \r\n\r\n        <div className={classes.container}>\r\n        <div className={classes.control}>\r\n        <div className={classes.gif}>\r\n          <Gif/>\r\n        </div>\r\n         \r\n         \r\n          <IconButton\r\n          className={ classes.iconClick} \r\n          onClick={ stopRecording }>\r\n          \r\n              <Mic/>\r\n           \r\n          </IconButton>\r\n          {/* <Button \r\n          className={ classes.iconmic\r\n          } \r\n          onClick={ stopRecording }>\r\n           \r\n              \r\n           \r\n          </Button> */}\r\n          <IconButton className={classes.iconnext} disabled>\r\n            {/* <Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> */}\r\n           \r\n              <KeyboardArrowRight/>\r\n            \r\n            {/* </Link> */}\r\n          </IconButton>\r\n          \r\n\r\n        </div>\r\n      </div>\r\n)\r\n          }\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Checkbeforjoining.js",["383","384","385"],"\r\nimport { useContext, useState } from 'react'\r\nimport {Guests} from './AllUsers'\r\nimport AuthContext from '../context/auth-context'\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\nimport InitJoin from './InitJoinRoom'\r\n\r\nconst ADD_GUEST = gql`\r\nmutation ($guestid:String,$roomid:String){\r\n  addToRoom(guestid:$guestid,roomid:$roomid)\r\n}\r\n`\r\n\r\nexport default function Checkbeforjoining(param){\r\n   \r\n    const auth = useContext(AuthContext)\r\n    \r\n    let info ={\r\n        room:param.roomid,\r\n        userid:auth.userId\r\n    }\r\n\r\n    const [addUser,{loading,data}] = useMutation(ADD_GUEST,{\r\n        onCompleted:(data)=>{\r\n            // console.log(data)\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error)\r\n        },\r\n    })\r\n\r\n    addUser({variables:{guestid:info.userid,roomid:info.room}})\r\n   \r\n    \r\n    if(loading || data===null){\r\n        console.log(data)\r\n     return <p>loading.........</p>\r\n    }\r\n    \r\n        return(<Redirect to={`roomID=${info.room}`}/>)\r\n\r\n    \r\n    \r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Editor.js",["386","387","388","389","390","391","392"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\EditorFiles.js",["393","394","395","396","397","398","399","400","401","402","403","404","405"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\RemoveFIlesEditor.js",["406","407","408","409","410","411","412","413","414"],"\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport { Button, Icon, IconButton, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useParams } from 'react-router';\r\nimport AllGuests from './AllGuests';\r\nimport {Delete, SettingsSharp} from '@material-ui/icons'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    box:{\r\n      display:'block'\r\n    },\r\n    tab:{\r\n      listStyleType:\"none\",\r\n      borderRadius:\"1px\",\r\n      backgroundColor:\"#ede7f6\",\r\n      marginTop:1,\r\n      marginLeft:5,\r\n      fontWeight:\"bold\",\r\n      fontSize:\"15px\",\r\n      cursor:\"pointer\",\r\n      width:\"90%\" \r\n    },\r\n    tabhead:{\r\n    paddingLeft:\"10px\",\r\n    paddingTop:\"10px\",\r\n    display:\"flex\"\r\n    },\r\n    speech:{\r\n      fontSize:\"15px\",\r\n      fontWeight:\"100\",\r\n      marginLeft:1\r\n    },\r\n    ul:{\r\n        width:\"100%\"\r\n    },\r\n    subdiv:{\r\n        flex:1\r\n    },\r\n    icon:{\r\n        cursor:\"pointer\",\r\n        '&:hover':{\r\n            color:\"red\"\r\n        }\r\n    },\r\n\r\n\r\n}))\r\n\r\n\r\nfunction App() {\r\n \r\n  \r\n  const classes = useStyles();\r\n  const [list,setList] = useState([])\r\n  const [check,setCheck] = useState(0)\r\n  const { room } = useParams()\r\n\r\n  const {loading,data,error} = useQuery(SHOW_FILE,{\r\n    variables:{roomid:room}\r\n  })\r\n\r\n  let audiolist =[]\r\n  // console.log(data)\r\n  if(loading) return <p>loading</p>\r\n  data.files.map((item,index)=>{\r\n    audiolist.push(item)\r\n    \r\n  })\r\n\r\n  const handleRemove=(id)=>{\r\n    const newList = list.filter((list) => list._id !== id);\r\n \r\n    setList(newList);\r\n  }\r\n\r\n  const handleLoad=()=>{\r\n    let temp =[]\r\n    data.files.map((item,index)=>{\r\n      temp.push(item)\r\n      setList(temp)\r\n    })\r\n    \r\n    if(list === []){\r\n      console.log(list)\r\n    }\r\n    else{\r\n      setCheck(true)\r\n    }\r\n    \r\n  }\r\n\r\n  if(!check){\r\n   return( <div>\r\n      <Button onClick={handleLoad}>Load</Button>\r\n    </div>)\r\n  }\r\n  else{\r\n  return (\r\n    <div className=\"App\">\r\n              <ul className={classes.ul} >\r\n                \r\n                {list.map(({_id, speaker,speech,file}, index) => {\r\n                  return (\r\n                        <li className={classes.tab} >\r\n                          <div className={classes.tabhead}>\r\n                              <div className={classes.subdiv}>\r\n                          <AllGuests params={speaker}/>\r\n                          <div className={classes.speech}>\r\n                            {/* <AllGuests params={voice.speaker}/> */}\r\n                             \r\n                            <p >{speech}</p>\r\n                            \r\n                            </div>\r\n                          </div>\r\n                          <div className={classes.icon}>\r\n                              <IconButton onClick={()=>handleRemove(_id)}>\r\n                                  <Delete/>\r\n                              </IconButton>\r\n                          </div>\r\n                          \r\n                          </div>\r\n                         \r\n                        </li>\r\n                      )\r\n                  \r\n                })}\r\n              \r\n              </ul>\r\n            \r\n\r\n      \r\n    </div>\r\n  );\r\n              }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\CreateChannel.js",["415","416","417","418","419","420","421","422","423","424","425","426"],"import React, { useContext } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { InputLabel, NativeSelect } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\nimport { userMutation, gql, useMutation, ApolloConsumer } from '@apollo/client'\r\nimport defaultimage from '../default.jpg'\r\nimport AuthContext, {AuthProvider} from '../context/auth-context'\r\n\r\n\r\nconst CREATE_CHANNEL = gql`\r\n  mutation CreateChannel($file:Upload!,$channelname:String,$discription:String,$contenttype:String,$language:String,$country:String,$creator:String){\r\n    CreateChannel(file:$file,channelname:$channelname,discription:$discription,contenttype:$contenttype,language:$language,country:$country,creator:$creator)\r\n  }\r\n`\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    margin:60,\r\n    \r\n  },\r\n  img:{\r\n    width:\"70vh\",\r\n    hight:\"70vh\"\r\n  },\r\n  \r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n    button:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#01579b\",\r\n    color:\"#ffffff\",\r\n    '&:hover': {\r\n      background: \"#006064\",  \r\n   }\r\n  },\r\n\r\n  buttondisable:{\r\n    width:\"100%\",\r\n    backgroundColor:\"#039be5\"\r\n  },\r\n\r\n  form:{\r\n    marginTop:20,\r\n    width:\"100%\",\r\n  },\r\n  textfield:{\r\n    width:\"100%\"\r\n  },\r\n  \r\n}));\r\n\r\nexport default function CreateChannel() {\r\n  const auth = useContext(AuthContext)\r\n  const classes = useStyles();\r\n  const[createchannel] = useMutation(CREATE_CHANNEL,{\r\n    onCompleted: data => console.log(data),\r\n    onError:err=>console.log(err)\r\n  })\r\n\r\n\r\n  const[contenttype,setContenttype]=React.useState('none')\r\n  const[country,setContry]=React.useState('none')\r\n  const[language,setLanguage]=React.useState('none')\r\n  const[file,setFile]=React.useState('none')\r\n  const [state,setState] = React.useState({\r\n    file:defaultimage,\r\n    _issubmitted:false\r\n  })\r\n  const[accepted,setAccepted] = React.useState(false)\r\n  const handleChange = (event) => {\r\n\r\n    switch(event.target.name){\r\n      case 'contenttype':\r\n        setContenttype({contenttype:event.target.value})\r\n        break\r\n      case 'country':\r\n        setContry({country:event.target.value})\r\n        console.log(country)\r\n        break\r\n      case 'language':\r\n        setLanguage({language:event.target.value})\r\n     \r\n        break\r\n      case 'accepted':\r\n        if(accepted) setAccepted(false)\r\n        else setAccepted(true)\r\n       \r\n        break\r\n      case 'file':\r\n        let file=URL.createObjectURL(event.target.files[0])\r\n        setState({file:file})\r\n        setFile(event.target.files[0])\r\n        \r\n        break\r\n    }\r\n    \r\n  }\r\n\r\n  const channelNameRef = React.useRef()\r\n  const discriptionRef = React.useRef()\r\n\r\n  const handleSubmit =(e)=>{\r\n    e.preventDefault()\r\n    const channelname = channelNameRef.current.value\r\n    const discription = discriptionRef.current.value\r\n    const filefinal = file\r\n    const countryfinal = country.country\r\n    const contenttypefinal = contenttype.contenttype\r\n    const languagefinal = language.language\r\n    console.log(file)\r\n    if(channelname.trim() != \"\" || discription.trim() != \"\"){\r\n      console.log(\"form submitted\")\r\n      setState({_issubmitted:true})\r\n      createchannel({variables:{file:filefinal,channelname,\r\n        discription,country:countryfinal,contenttype:contenttypefinal,\r\n        language:languagefinal,creator:auth.userId}})\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  // if(!state._issubmitted){\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={5}  >\r\n        <div className={classes.image}>\r\n          <img src={state.file} className={classes.img}/>\r\n        </div>\r\n        </Grid>\r\n      <Grid item xs={12} sm={8} md={7} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create your channel\r\n        </Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate> \r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n          <TextField className={classes.textfield} inputRef={channelNameRef} \r\n          id=\"outlined-basic\" label=\"Channel Name\" variant=\"outlined\"  required />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <TextField\r\n          inputRef={discriptionRef}\r\n          className={classes.textfield} \r\n          id=\"outlined-textarea\"\r\n          label=\"Discription About Channel\"\r\n          rows={4}\r\n          multiline\r\n          variant=\"outlined\"\r\n          required\r\n        />\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n          <InputLabel>Country</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          value={country.country}\r\n          onChange={handleChange}\r\n          name=\"country\"\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"India\"}>India</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={4}>\r\n          <InputLabel>Language</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          value={language.language}\r\n          onChange={handleChange}\r\n          name=\"language\"\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"English\"}>English</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n          <InputLabel>Content Type</InputLabel>\r\n          <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          value={contenttype.contenttype}\r\n          name=\"contenttype\"\r\n          onChange={handleChange}\r\n         \r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"Education\"}>Education</option>\r\n          \r\n        </NativeSelect>\r\n        \r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <Button variant=\"contained\" component=\"label\">Add Cover Image\r\n            <input type=\"file\" accept=\"image/png, image/jpeg\" hidden \r\n            name=\"file\" onChange={handleChange}/>\r\n            </Button>\r\n          \r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox  onChange={handleChange} name=\"accepted\" value={accepted}/>}\r\n            label=\"Accept Terms and Conditons\"\r\n          />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n          {accepted?\r\n          <Button type=\"submit\" className={classes.button}>Create My Channel</Button>\r\n          :<Button type=\"submit\" className={classes.buttondisable} disabled>Create My Channel</Button>}\r\n          </Grid>\r\n          \r\n          \r\n        </Grid>\r\n\r\n       \r\n\r\n        </form>\r\n       \r\n\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n  //  }\r\n  //  else{\r\n  //    return <Redirect to=\"/home\"/>\r\n  //  }\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\EditFileDiscription.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Review.js",["427"],"import { Box,makeStyles,Grid } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\nconst useStyles = makeStyles((theme) => ({\r\n    box:{\r\n        padding:10,\r\n        borderRadius:5\r\n    },\r\n    root:{\r\n        display:'flex'\r\n    },\r\n    item:{\r\n        flex:1,\r\n        margin:2,\r\n        padding:5,\r\n\r\n        \r\n    },\r\n\r\n    img:{\r\n        \r\n        width:150,\r\n        height:150\r\n    }\r\n  }));\r\n\r\nexport default function Review(){\r\n    const classes = useStyles()\r\n    return (\r\n        <Box border={1} className={classes.box}>\r\n            <Grid container className={classes.root}>\r\n                <Grid item className={classes.item}>\r\n                    <div>\r\n                    <img className={classes.img} src={logo} alt=\"image\"/>\r\n                    </div>\r\n                    <div>\r\n                        <p>participants</p>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item className={classes.item}>\r\n                    <div>\r\n                        <h1>Header</h1>\r\n                    </div>\r\n                    <div>\r\n                        <p>discription</p>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <audio controls>\r\n\r\n                    </audio>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\loading.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Gif.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\componets2\\Copyright.js",[],{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","severity":1,"message":"433","line":1,"column":8,"nodeType":"434","messageId":"435","endLine":1,"endColumn":12},{"ruleId":"432","severity":1,"message":"436","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":10},{"ruleId":"432","severity":1,"message":"437","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":18},{"ruleId":"432","severity":1,"message":"438","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":19},{"ruleId":"432","severity":1,"message":"439","line":21,"column":3,"nodeType":"434","messageId":"435","endLine":21,"endColumn":7},{"ruleId":"432","severity":1,"message":"440","line":29,"column":10,"nodeType":"434","messageId":"435","endLine":29,"endColumn":23},{"ruleId":"432","severity":1,"message":"441","line":30,"column":10,"nodeType":"434","messageId":"435","endLine":30,"endColumn":20},{"ruleId":"432","severity":1,"message":"442","line":56,"column":9,"nodeType":"434","messageId":"435","endLine":56,"endColumn":15},{"ruleId":"432","severity":1,"message":"443","line":2,"column":17,"nodeType":"434","messageId":"435","endLine":2,"endColumn":26},{"ruleId":"432","severity":1,"message":"444","line":5,"column":16,"nodeType":"434","messageId":"435","endLine":5,"endColumn":28},{"ruleId":"432","severity":1,"message":"445","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":16},{"ruleId":"432","severity":1,"message":"446","line":9,"column":10,"nodeType":"434","messageId":"435","endLine":9,"endColumn":27},{"ruleId":"432","severity":1,"message":"447","line":10,"column":10,"nodeType":"434","messageId":"435","endLine":10,"endColumn":24},{"ruleId":"432","severity":1,"message":"448","line":12,"column":8,"nodeType":"434","messageId":"435","endLine":12,"endColumn":24},{"ruleId":"432","severity":1,"message":"449","line":64,"column":12,"nodeType":"434","messageId":"435","endLine":64,"endColumn":15},{"ruleId":"432","severity":1,"message":"450","line":64,"column":16,"nodeType":"434","messageId":"435","endLine":64,"endColumn":22},{"ruleId":"451","severity":1,"message":"452","line":84,"column":27,"nodeType":"453","messageId":"454","endLine":84,"endColumn":29},{"ruleId":"432","severity":1,"message":"455","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":18},{"ruleId":"451","severity":1,"message":"452","line":24,"column":19,"nodeType":"453","messageId":"454","endLine":24,"endColumn":21},{"ruleId":"451","severity":1,"message":"452","line":35,"column":27,"nodeType":"453","messageId":"454","endLine":35,"endColumn":29},{"ruleId":"432","severity":1,"message":"456","line":3,"column":15,"nodeType":"434","messageId":"435","endLine":3,"endColumn":21},{"ruleId":"432","severity":1,"message":"457","line":4,"column":10,"nodeType":"434","messageId":"435","endLine":4,"endColumn":22},{"ruleId":"432","severity":1,"message":"458","line":12,"column":8,"nodeType":"434","messageId":"435","endLine":12,"endColumn":24},{"ruleId":"432","severity":1,"message":"459","line":13,"column":8,"nodeType":"434","messageId":"435","endLine":13,"endColumn":16},{"ruleId":"432","severity":1,"message":"460","line":15,"column":8,"nodeType":"434","messageId":"435","endLine":15,"endColumn":12},{"ruleId":"432","severity":1,"message":"444","line":22,"column":11,"nodeType":"434","messageId":"435","endLine":22,"endColumn":23},{"ruleId":"432","severity":1,"message":"461","line":22,"column":25,"nodeType":"434","messageId":"435","endLine":22,"endColumn":33},{"ruleId":"432","severity":1,"message":"462","line":64,"column":11,"nodeType":"434","messageId":"435","endLine":64,"endColumn":20},{"ruleId":"428","replacedBy":"463"},{"ruleId":"430","replacedBy":"464"},{"ruleId":"428","replacedBy":"465"},{"ruleId":"430","replacedBy":"466"},{"ruleId":"432","severity":1,"message":"458","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":24},{"ruleId":"432","severity":1,"message":"459","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":16},{"ruleId":"432","severity":1,"message":"460","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":12},{"ruleId":"432","severity":1,"message":"461","line":16,"column":30,"nodeType":"434","messageId":"435","endLine":16,"endColumn":38},{"ruleId":"432","severity":1,"message":"467","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":21},{"ruleId":"432","severity":1,"message":"468","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":24},{"ruleId":"432","severity":1,"message":"469","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":18},{"ruleId":"432","severity":1,"message":"470","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":20},{"ruleId":"432","severity":1,"message":"471","line":10,"column":8,"nodeType":"434","messageId":"435","endLine":10,"endColumn":18},{"ruleId":"432","severity":1,"message":"445","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":16},{"ruleId":"432","severity":1,"message":"472","line":7,"column":26,"nodeType":"434","messageId":"435","endLine":7,"endColumn":37},{"ruleId":"432","severity":1,"message":"461","line":7,"column":39,"nodeType":"434","messageId":"435","endLine":7,"endColumn":47},{"ruleId":"432","severity":1,"message":"473","line":4,"column":17,"nodeType":"434","messageId":"435","endLine":4,"endColumn":40},{"ruleId":"432","severity":1,"message":"474","line":14,"column":8,"nodeType":"434","messageId":"435","endLine":14,"endColumn":13},{"ruleId":"432","severity":1,"message":"475","line":21,"column":8,"nodeType":"434","messageId":"435","endLine":21,"endColumn":25},{"ruleId":"432","severity":1,"message":"476","line":22,"column":25,"nodeType":"434","messageId":"435","endLine":22,"endColumn":43},{"ruleId":"432","severity":1,"message":"477","line":24,"column":10,"nodeType":"434","messageId":"435","endLine":24,"endColumn":16},{"ruleId":"432","severity":1,"message":"478","line":26,"column":8,"nodeType":"434","messageId":"435","endLine":26,"endColumn":16},{"ruleId":"432","severity":1,"message":"479","line":27,"column":8,"nodeType":"434","messageId":"435","endLine":27,"endColumn":14},{"ruleId":"432","severity":1,"message":"480","line":28,"column":8,"nodeType":"434","messageId":"435","endLine":28,"endColumn":13},{"ruleId":"432","severity":1,"message":"481","line":29,"column":8,"nodeType":"434","messageId":"435","endLine":29,"endColumn":20},{"ruleId":"432","severity":1,"message":"482","line":30,"column":8,"nodeType":"434","messageId":"435","endLine":30,"endColumn":17},{"ruleId":"432","severity":1,"message":"483","line":143,"column":9,"nodeType":"434","messageId":"435","endLine":143,"endColumn":25},{"ruleId":"484","severity":1,"message":"485","line":201,"column":15,"nodeType":"486","endLine":201,"endColumn":32},{"ruleId":"432","severity":1,"message":"487","line":3,"column":8,"nodeType":"434","messageId":"435","endLine":3,"endColumn":14},{"ruleId":"432","severity":1,"message":"488","line":11,"column":8,"nodeType":"434","messageId":"435","endLine":11,"endColumn":24},{"ruleId":"428","replacedBy":"489"},{"ruleId":"430","replacedBy":"490"},{"ruleId":"432","severity":1,"message":"491","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":21},{"ruleId":"432","severity":1,"message":"467","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":21},{"ruleId":"432","severity":1,"message":"468","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":24},{"ruleId":"432","severity":1,"message":"469","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":18},{"ruleId":"432","severity":1,"message":"470","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":20},{"ruleId":"432","severity":1,"message":"471","line":10,"column":8,"nodeType":"434","messageId":"435","endLine":10,"endColumn":18},{"ruleId":"432","severity":1,"message":"492","line":11,"column":8,"nodeType":"434","messageId":"435","endLine":11,"endColumn":22},{"ruleId":"493","severity":2,"message":"494","line":18,"column":16,"nodeType":"434","messageId":"495","endLine":18,"endColumn":25},{"ruleId":"432","severity":1,"message":"496","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":16},{"ruleId":"432","severity":1,"message":"487","line":9,"column":10,"nodeType":"434","messageId":"435","endLine":9,"endColumn":16},{"ruleId":"432","severity":1,"message":"497","line":9,"column":18,"nodeType":"434","messageId":"435","endLine":9,"endColumn":26},{"ruleId":"432","severity":1,"message":"498","line":9,"column":28,"nodeType":"434","messageId":"435","endLine":9,"endColumn":40},{"ruleId":"432","severity":1,"message":"499","line":9,"column":42,"nodeType":"434","messageId":"435","endLine":9,"endColumn":54},{"ruleId":"432","severity":1,"message":"500","line":10,"column":25,"nodeType":"434","messageId":"435","endLine":10,"endColumn":30},{"ruleId":"432","severity":1,"message":"501","line":12,"column":23,"nodeType":"434","messageId":"435","endLine":12,"endColumn":35},{"ruleId":"432","severity":1,"message":"502","line":13,"column":8,"nodeType":"434","messageId":"435","endLine":13,"endColumn":11},{"ruleId":"432","severity":1,"message":"444","line":14,"column":10,"nodeType":"434","messageId":"435","endLine":14,"endColumn":22},{"ruleId":"432","severity":1,"message":"461","line":14,"column":24,"nodeType":"434","messageId":"435","endLine":14,"endColumn":32},{"ruleId":"484","severity":1,"message":"485","line":30,"column":13,"nodeType":"486","endLine":30,"endColumn":30},{"ruleId":"484","severity":1,"message":"485","line":40,"column":13,"nodeType":"486","endLine":40,"endColumn":30},{"ruleId":"484","severity":1,"message":"485","line":48,"column":13,"nodeType":"486","endLine":48,"endColumn":30},{"ruleId":"432","severity":1,"message":"503","line":1,"column":19,"nodeType":"434","messageId":"435","endLine":1,"endColumn":25},{"ruleId":"432","severity":1,"message":"455","line":2,"column":27,"nodeType":"434","messageId":"435","endLine":2,"endColumn":35},{"ruleId":"432","severity":1,"message":"472","line":7,"column":26,"nodeType":"434","messageId":"435","endLine":7,"endColumn":37},{"ruleId":"432","severity":1,"message":"461","line":7,"column":39,"nodeType":"434","messageId":"435","endLine":7,"endColumn":47},{"ruleId":"432","severity":1,"message":"501","line":16,"column":22,"nodeType":"434","messageId":"435","endLine":16,"endColumn":34},{"ruleId":"432","severity":1,"message":"504","line":80,"column":36,"nodeType":"434","messageId":"435","endLine":80,"endColumn":42},{"ruleId":"432","severity":1,"message":"505","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":19},{"ruleId":"432","severity":1,"message":"458","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":24},{"ruleId":"432","severity":1,"message":"459","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":16},{"ruleId":"432","severity":1,"message":"460","line":10,"column":8,"nodeType":"434","messageId":"435","endLine":10,"endColumn":12},{"ruleId":"432","severity":1,"message":"506","line":11,"column":8,"nodeType":"434","messageId":"435","endLine":11,"endColumn":11},{"ruleId":"432","severity":1,"message":"488","line":12,"column":8,"nodeType":"434","messageId":"435","endLine":12,"endColumn":24},{"ruleId":"432","severity":1,"message":"507","line":14,"column":38,"nodeType":"434","messageId":"435","endLine":14,"endColumn":51},{"ruleId":"432","severity":1,"message":"461","line":17,"column":30,"nodeType":"434","messageId":"435","endLine":17,"endColumn":38},{"ruleId":"432","severity":1,"message":"508","line":18,"column":10,"nodeType":"434","messageId":"435","endLine":18,"endColumn":18},{"ruleId":"432","severity":1,"message":"509","line":23,"column":10,"nodeType":"434","messageId":"435","endLine":23,"endColumn":19},{"ruleId":"432","severity":1,"message":"510","line":97,"column":9,"nodeType":"434","messageId":"435","endLine":97,"endColumn":14},{"ruleId":"432","severity":1,"message":"511","line":4,"column":9,"nodeType":"434","messageId":"435","endLine":4,"endColumn":15},{"ruleId":"432","severity":1,"message":"505","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":19},{"ruleId":"432","severity":1,"message":"512","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":14},{"ruleId":"432","severity":1,"message":"506","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":11},{"ruleId":"432","severity":1,"message":"513","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":14},{"ruleId":"432","severity":1,"message":"514","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":15},{"ruleId":"432","severity":1,"message":"515","line":10,"column":8,"nodeType":"434","messageId":"435","endLine":10,"endColumn":12},{"ruleId":"432","severity":1,"message":"516","line":11,"column":8,"nodeType":"434","messageId":"435","endLine":11,"endColumn":18},{"ruleId":"432","severity":1,"message":"517","line":12,"column":8,"nodeType":"434","messageId":"435","endLine":12,"endColumn":15},{"ruleId":"432","severity":1,"message":"518","line":13,"column":8,"nodeType":"434","messageId":"435","endLine":13,"endColumn":18},{"ruleId":"432","severity":1,"message":"474","line":14,"column":8,"nodeType":"434","messageId":"435","endLine":14,"endColumn":13},{"ruleId":"432","severity":1,"message":"439","line":18,"column":8,"nodeType":"434","messageId":"435","endLine":18,"endColumn":12},{"ruleId":"432","severity":1,"message":"496","line":19,"column":8,"nodeType":"434","messageId":"435","endLine":19,"endColumn":16},{"ruleId":"432","severity":1,"message":"519","line":20,"column":8,"nodeType":"434","messageId":"435","endLine":20,"endColumn":23},{"ruleId":"432","severity":1,"message":"475","line":21,"column":8,"nodeType":"434","messageId":"435","endLine":21,"endColumn":25},{"ruleId":"432","severity":1,"message":"520","line":22,"column":10,"nodeType":"434","messageId":"435","endLine":22,"endColumn":23},{"ruleId":"432","severity":1,"message":"476","line":22,"column":25,"nodeType":"434","messageId":"435","endLine":22,"endColumn":43},{"ruleId":"432","severity":1,"message":"479","line":25,"column":8,"nodeType":"434","messageId":"435","endLine":25,"endColumn":14},{"ruleId":"432","severity":1,"message":"521","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":24},{"ruleId":"432","severity":1,"message":"522","line":4,"column":10,"nodeType":"434","messageId":"435","endLine":4,"endColumn":14},{"ruleId":"432","severity":1,"message":"509","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":17},{"ruleId":"432","severity":1,"message":"523","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":19},{"ruleId":"432","severity":1,"message":"460","line":1,"column":21,"nodeType":"434","messageId":"435","endLine":1,"endColumn":25},{"ruleId":"432","severity":1,"message":"524","line":1,"column":39,"nodeType":"434","messageId":"435","endLine":1,"endColumn":44},{"ruleId":"432","severity":1,"message":"433","line":2,"column":8,"nodeType":"434","messageId":"435","endLine":2,"endColumn":12},{"ruleId":"432","severity":1,"message":"525","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":14},{"ruleId":"432","severity":1,"message":"439","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":12},{"ruleId":"432","severity":1,"message":"526","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":13},{"ruleId":"432","severity":1,"message":"527","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":17},{"ruleId":"432","severity":1,"message":"528","line":10,"column":8,"nodeType":"434","messageId":"435","endLine":10,"endColumn":17},{"ruleId":"432","severity":1,"message":"529","line":11,"column":8,"nodeType":"434","messageId":"435","endLine":11,"endColumn":17},{"ruleId":"432","severity":1,"message":"530","line":12,"column":8,"nodeType":"434","messageId":"435","endLine":12,"endColumn":16},{"ruleId":"432","severity":1,"message":"531","line":13,"column":8,"nodeType":"434","messageId":"435","endLine":13,"endColumn":13},{"ruleId":"432","severity":1,"message":"518","line":14,"column":18,"nodeType":"434","messageId":"435","endLine":14,"endColumn":28},{"ruleId":"432","severity":1,"message":"532","line":15,"column":10,"nodeType":"434","messageId":"435","endLine":15,"endColumn":39},{"ruleId":"432","severity":1,"message":"533","line":15,"column":41,"nodeType":"434","messageId":"435","endLine":15,"endColumn":44},{"ruleId":"432","severity":1,"message":"481","line":17,"column":9,"nodeType":"434","messageId":"435","endLine":17,"endColumn":21},{"ruleId":"432","severity":1,"message":"508","line":18,"column":10,"nodeType":"434","messageId":"435","endLine":18,"endColumn":18},{"ruleId":"432","severity":1,"message":"534","line":20,"column":10,"nodeType":"434","messageId":"435","endLine":20,"endColumn":24},{"ruleId":"432","severity":1,"message":"439","line":2,"column":8,"nodeType":"434","messageId":"435","endLine":2,"endColumn":12},{"ruleId":"432","severity":1,"message":"521","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":24},{"ruleId":"432","severity":1,"message":"507","line":3,"column":38,"nodeType":"434","messageId":"435","endLine":3,"endColumn":51},{"ruleId":"432","severity":1,"message":"531","line":11,"column":8,"nodeType":"434","messageId":"435","endLine":11,"endColumn":13},{"ruleId":"432","severity":1,"message":"535","line":14,"column":10,"nodeType":"434","messageId":"435","endLine":14,"endColumn":16},{"ruleId":"432","severity":1,"message":"534","line":16,"column":10,"nodeType":"434","messageId":"435","endLine":16,"endColumn":24},{"ruleId":"432","severity":1,"message":"536","line":60,"column":18,"nodeType":"434","messageId":"435","endLine":60,"endColumn":23},{"ruleId":"432","severity":1,"message":"455","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":18},{"ruleId":"432","severity":1,"message":"472","line":5,"column":16,"nodeType":"434","messageId":"435","endLine":5,"endColumn":27},{"ruleId":"432","severity":1,"message":"508","line":7,"column":10,"nodeType":"434","messageId":"435","endLine":7,"endColumn":18},{"ruleId":"432","severity":1,"message":"447","line":10,"column":26,"nodeType":"434","messageId":"435","endLine":10,"endColumn":40},{"ruleId":"432","severity":1,"message":"537","line":11,"column":10,"nodeType":"434","messageId":"435","endLine":11,"endColumn":13},{"ruleId":"432","severity":1,"message":"536","line":76,"column":20,"nodeType":"434","messageId":"435","endLine":76,"endColumn":25},{"ruleId":"451","severity":1,"message":"452","line":88,"column":32,"nodeType":"453","messageId":"454","endLine":88,"endColumn":34},{"ruleId":"432","severity":1,"message":"472","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":21},{"ruleId":"432","severity":1,"message":"538","line":3,"column":8,"nodeType":"434","messageId":"435","endLine":3,"endColumn":13},{"ruleId":"432","severity":1,"message":"539","line":3,"column":17,"nodeType":"434","messageId":"435","endLine":3,"endColumn":27},{"ruleId":"432","severity":1,"message":"540","line":4,"column":10,"nodeType":"434","messageId":"435","endLine":4,"endColumn":19},{"ruleId":"432","severity":1,"message":"438","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":19},{"ruleId":"432","severity":1,"message":"445","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":16},{"ruleId":"432","severity":1,"message":"536","line":21,"column":20,"nodeType":"434","messageId":"435","endLine":21,"endColumn":25},{"ruleId":"432","severity":1,"message":"457","line":2,"column":10,"nodeType":"434","messageId":"435","endLine":2,"endColumn":22},{"ruleId":"432","severity":1,"message":"540","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":19},{"ruleId":"432","severity":1,"message":"541","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":18},{"ruleId":"432","severity":1,"message":"443","line":2,"column":29,"nodeType":"434","messageId":"435","endLine":2,"endColumn":38},{"ruleId":"432","severity":1,"message":"481","line":3,"column":9,"nodeType":"434","messageId":"435","endLine":3,"endColumn":21},{"ruleId":"432","severity":1,"message":"535","line":5,"column":9,"nodeType":"434","messageId":"435","endLine":5,"endColumn":15},{"ruleId":"432","severity":1,"message":"523","line":5,"column":17,"nodeType":"434","messageId":"435","endLine":5,"endColumn":26},{"ruleId":"432","severity":1,"message":"460","line":5,"column":28,"nodeType":"434","messageId":"435","endLine":5,"endColumn":32},{"ruleId":"432","severity":1,"message":"542","line":5,"column":34,"nodeType":"434","messageId":"435","endLine":5,"endColumn":38},{"ruleId":"432","severity":1,"message":"507","line":5,"column":52,"nodeType":"434","messageId":"435","endLine":5,"endColumn":65},{"ruleId":"432","severity":1,"message":"508","line":7,"column":10,"nodeType":"434","messageId":"435","endLine":7,"endColumn":18},{"ruleId":"432","severity":1,"message":"439","line":9,"column":10,"nodeType":"434","messageId":"435","endLine":9,"endColumn":14},{"ruleId":"432","severity":1,"message":"543","line":10,"column":9,"nodeType":"434","messageId":"435","endLine":10,"endColumn":15},{"ruleId":"432","severity":1,"message":"544","line":11,"column":10,"nodeType":"434","messageId":"435","endLine":11,"endColumn":14},{"ruleId":"432","severity":1,"message":"545","line":11,"column":16,"nodeType":"434","messageId":"435","endLine":11,"endColumn":33},{"ruleId":"432","severity":1,"message":"546","line":11,"column":60,"nodeType":"434","messageId":"435","endLine":11,"endColumn":69},{"ruleId":"432","severity":1,"message":"547","line":11,"column":71,"nodeType":"434","messageId":"435","endLine":11,"endColumn":75},{"ruleId":"432","severity":1,"message":"455","line":2,"column":22,"nodeType":"434","messageId":"435","endLine":2,"endColumn":30},{"ruleId":"432","severity":1,"message":"548","line":3,"column":9,"nodeType":"434","messageId":"435","endLine":3,"endColumn":15},{"ruleId":"432","severity":1,"message":"549","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":16},{"ruleId":"432","severity":1,"message":"513","line":4,"column":8,"nodeType":"434","messageId":"435","endLine":4,"endColumn":14},{"ruleId":"432","severity":1,"message":"514","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":15},{"ruleId":"432","severity":1,"message":"439","line":11,"column":8,"nodeType":"434","messageId":"435","endLine":11,"endColumn":12},{"ruleId":"432","severity":1,"message":"550","line":14,"column":8,"nodeType":"434","messageId":"435","endLine":14,"endColumn":25},{"ruleId":"432","severity":1,"message":"551","line":17,"column":10,"nodeType":"434","messageId":"435","endLine":17,"endColumn":14},{"ruleId":"432","severity":1,"message":"552","line":17,"column":16,"nodeType":"434","messageId":"435","endLine":17,"endColumn":20},{"ruleId":"432","severity":1,"message":"477","line":17,"column":22,"nodeType":"434","messageId":"435","endLine":17,"endColumn":28},{"ruleId":"432","severity":1,"message":"513","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":16},{"ruleId":"432","severity":1,"message":"553","line":3,"column":18,"nodeType":"434","messageId":"435","endLine":3,"endColumn":34},{"ruleId":"432","severity":1,"message":"554","line":3,"column":36,"nodeType":"434","messageId":"435","endLine":3,"endColumn":58},{"ruleId":"432","severity":1,"message":"542","line":3,"column":68,"nodeType":"434","messageId":"435","endLine":3,"endColumn":72},{"ruleId":"432","severity":1,"message":"555","line":3,"column":98,"nodeType":"434","messageId":"435","endLine":3,"endColumn":102},{"ruleId":"432","severity":1,"message":"514","line":3,"column":111,"nodeType":"434","messageId":"435","endLine":3,"endColumn":118},{"ruleId":"432","severity":1,"message":"516","line":3,"column":120,"nodeType":"434","messageId":"435","endLine":3,"endColumn":130},{"ruleId":"432","severity":1,"message":"508","line":6,"column":10,"nodeType":"434","messageId":"435","endLine":6,"endColumn":18},{"ruleId":"432","severity":1,"message":"556","line":8,"column":17,"nodeType":"434","messageId":"435","endLine":8,"endColumn":24},{"ruleId":"432","severity":1,"message":"510","line":89,"column":9,"nodeType":"434","messageId":"435","endLine":89,"endColumn":14},{"ruleId":"432","severity":1,"message":"557","line":110,"column":20,"nodeType":"434","messageId":"435","endLine":110,"endColumn":23},{"ruleId":"451","severity":1,"message":"452","line":123,"column":27,"nodeType":"453","messageId":"454","endLine":123,"endColumn":29},{"ruleId":"451","severity":1,"message":"452","line":136,"column":34,"nodeType":"453","messageId":"454","endLine":136,"endColumn":36},{"ruleId":"432","severity":1,"message":"542","line":3,"column":18,"nodeType":"434","messageId":"435","endLine":3,"endColumn":22},{"ruleId":"432","severity":1,"message":"443","line":4,"column":17,"nodeType":"434","messageId":"435","endLine":4,"endColumn":26},{"ruleId":"432","severity":1,"message":"558","line":5,"column":10,"nodeType":"434","messageId":"435","endLine":5,"endColumn":25},{"ruleId":"432","severity":1,"message":"559","line":5,"column":27,"nodeType":"434","messageId":"435","endLine":5,"endColumn":36},{"ruleId":"432","severity":1,"message":"560","line":5,"column":38,"nodeType":"434","messageId":"435","endLine":5,"endColumn":47},{"ruleId":"432","severity":1,"message":"561","line":8,"column":17,"nodeType":"434","messageId":"435","endLine":8,"endColumn":30},{"ruleId":"432","severity":1,"message":"536","line":72,"column":23,"nodeType":"434","messageId":"435","endLine":72,"endColumn":28},{"ruleId":"451","severity":1,"message":"452","line":79,"column":30,"nodeType":"453","messageId":"454","endLine":79,"endColumn":32},{"ruleId":"451","severity":1,"message":"452","line":92,"column":32,"nodeType":"453","messageId":"454","endLine":92,"endColumn":34},{"ruleId":"432","severity":1,"message":"487","line":2,"column":8,"nodeType":"434","messageId":"435","endLine":2,"endColumn":14},{"ruleId":"432","severity":1,"message":"439","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":12},{"ruleId":"432","severity":1,"message":"506","line":10,"column":8,"nodeType":"434","messageId":"435","endLine":10,"endColumn":11},{"ruleId":"432","severity":1,"message":"488","line":12,"column":8,"nodeType":"434","messageId":"435","endLine":12,"endColumn":24},{"ruleId":"432","severity":1,"message":"508","line":16,"column":10,"nodeType":"434","messageId":"435","endLine":16,"endColumn":18},{"ruleId":"432","severity":1,"message":"457","line":17,"column":10,"nodeType":"434","messageId":"435","endLine":17,"endColumn":22},{"ruleId":"432","severity":1,"message":"562","line":17,"column":42,"nodeType":"434","messageId":"435","endLine":17,"endColumn":56},{"ruleId":"432","severity":1,"message":"501","line":19,"column":22,"nodeType":"434","messageId":"435","endLine":19,"endColumn":34},{"ruleId":"563","severity":1,"message":"564","line":93,"column":5,"nodeType":"565","messageId":"566","endLine":116,"endColumn":6},{"ruleId":"567","severity":1,"message":"568","line":132,"column":27,"nodeType":"569","messageId":"570","endLine":132,"endColumn":29},{"ruleId":"567","severity":1,"message":"568","line":132,"column":55,"nodeType":"569","messageId":"570","endLine":132,"endColumn":57},{"ruleId":"484","severity":1,"message":"485","line":149,"column":11,"nodeType":"486","endLine":149,"endColumn":58},{"ruleId":"571","severity":1,"message":"572","line":33,"column":21,"nodeType":"486","endLine":33,"endColumn":74},"no-native-reassign",["573"],"no-negated-in-lhs",["574"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FS' is defined but never used.","'Guestlists' is defined but never used.","'AuthContext' is defined but never used.","'Link' is defined but never used.","'TrainOutlined' is defined but never used.","'makeStyles' is defined but never used.","'logout' is assigned a value but never used.","'useEffect' is defined but never used.","'useLazyQuery' is defined but never used.","'Username' is defined but never used.","'ValidationContext' is defined but never used.","'FormHelperText' is defined but never used.","'ReactAudioPlayer' is defined but never used.","'src' is assigned a value but never used.","'setSrc' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'uuidv4' is defined but never used.","'userMutation' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","'useQuery' is defined but never used.","'FIND_ROOM' is assigned a value but never used.",["573"],["574"],["573"],["574"],"'DashboardIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'LayersIcon' is defined but never used.","'useMutation' is defined but never used.","'PlayCircleFilledTwoTone' is defined but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'secondaryListItems' is defined but never used.","'purple' is defined but never used.","'Deposits' is defined but never used.","'Orders' is defined but never used.","'Files' is defined but never used.","'AudioProcess' is defined but never used.","'AllGuests' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.",["573"],["574"],"'ListSubheader' is defined but never used.","'AssignmentIcon' is defined but never used.","no-undef","'ListItems' is not defined.","undef","'MenuIcon' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Pages' is defined but never used.","'AuthProvider' is defined but never used.","'gql' is defined but never used.","'Switch' is defined but never used.","'called' is assigned a value but never used.","'CssBaseline' is defined but never used.","'Box' is defined but never used.","'ThemeProvider' is defined but never used.","'Redirect' is defined but never used.","'Copyright' is defined but never used.","'theme' is assigned a value but never used.","'Person' is defined but never used.","'Drawer' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'mainListItems' is defined but never used.","'createMuiTheme' is defined but never used.","'grey' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'Lock' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Title' is defined but never used.","'LocalConvenienceStoreOutlined' is defined but never used.","'Mic' is defined but never used.","'preventDefault' is defined but never used.","'Button' is defined but never used.","'error' is assigned a value but never used.","'Add' is defined but never used.","'React' is defined but never used.","'useContext' is defined but never used.","'useParams' is defined but never used.","'ReactMic' is defined but never used.","'Icon' is defined but never used.","'saveAs' is defined but never used.","'Done' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'PlayArrow' is defined but never used.","'Stop' is defined but never used.","'Guests' is defined but never used.","'InitJoin' is defined but never used.","'RemoveFilesEditor' is defined but never used.","'blue' is defined but never used.","'pink' is defined but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'Menu' is defined but never used.","'Restore' is defined but never used.","'err' is assigned a value but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","'SettingsSharp' is defined but never used.","'ApolloConsumer' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]