[{"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\index.js":"1","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\reportWebVitals.js":"2","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\App.js":"3","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateRoom.js":"4","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateChannel.js":"5","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Home.js":"6","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PodcastPortal.js":"7","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Login.js":"8","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Editor.js":"9","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\InitJoinRoom.js":"10","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\context\\auth-context.js":"11","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Signup.js":"12","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Review.js":"13","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EditFileDiscription.js":"14","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EditorFiles.js":"15","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PodcastRoom.js":"16","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Navbar.js":"17","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EpisodeDisplay.js":"18","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Checkbeforjoining.js":"19","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\loading.js":"20","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AllGuests.js":"21","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Reactmic.js":"22","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Copyright.js":"23","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Files.js":"24","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Deposits.js":"25","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Gif.js":"26","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AllUsers.js":"27","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AudioProcess.js":"28"},{"size":517,"mtime":1624541343862,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1624541343864,"results":"31","hashOfConfig":"30"},{"size":2310,"mtime":1624541343817,"results":"32","hashOfConfig":"30"},{"size":3545,"mtime":1624541343830,"results":"33","hashOfConfig":"30"},{"size":7410,"mtime":1624902125207,"results":"34","hashOfConfig":"30"},{"size":762,"mtime":1624541343839,"results":"35","hashOfConfig":"30"},{"size":516,"mtime":1624541343846,"results":"36","hashOfConfig":"30"},{"size":4216,"mtime":1624541343843,"results":"37","hashOfConfig":"30"},{"size":4340,"mtime":1624896363006,"results":"38","hashOfConfig":"30"},{"size":4068,"mtime":1624541343841,"results":"39","hashOfConfig":"30"},{"size":296,"mtime":1624541343855,"results":"40","hashOfConfig":"30"},{"size":5875,"mtime":1624541343852,"results":"41","hashOfConfig":"30"},{"size":1346,"mtime":1624541343851,"results":"42","hashOfConfig":"30"},{"size":2485,"mtime":1624901285184,"results":"43","hashOfConfig":"30"},{"size":5823,"mtime":1624896218009,"results":"44","hashOfConfig":"30"},{"size":3352,"mtime":1624541343847,"results":"45","hashOfConfig":"30"},{"size":3180,"mtime":1624541343845,"results":"46","hashOfConfig":"30"},{"size":1588,"mtime":1624541343836,"results":"47","hashOfConfig":"30"},{"size":967,"mtime":1624541343826,"results":"48","hashOfConfig":"30"},{"size":1415,"mtime":1624541343854,"results":"49","hashOfConfig":"30"},{"size":393,"mtime":1624541343823,"results":"50","hashOfConfig":"30"},{"size":4309,"mtime":1624856432688,"results":"51","hashOfConfig":"30"},{"size":399,"mtime":1624541343827,"results":"52","hashOfConfig":"30"},{"size":2573,"mtime":1624814702317,"results":"53","hashOfConfig":"30"},{"size":2515,"mtime":1624541343831,"results":"54","hashOfConfig":"30"},{"size":525,"mtime":1624541343838,"results":"55","hashOfConfig":"30"},{"size":2162,"mtime":1624541343824,"results":"56","hashOfConfig":"30"},{"size":846,"mtime":1624541343825,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ymght2",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\index.js",[],["118","119"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\reportWebVitals.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\App.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateRoom.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateChannel.js",["120"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Home.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PodcastPortal.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Login.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Editor.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\InitJoinRoom.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\context\\auth-context.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Signup.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Review.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EditFileDiscription.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EditorFiles.js",["121","122"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PodcastRoom.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Navbar.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EpisodeDisplay.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Checkbeforjoining.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\loading.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AllGuests.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Reactmic.js",["123","124"],"\r\nimport React, { useContext,useState } from 'react' \r\n\r\nimport {gql, useMutation} from '@apollo/client';\r\nimport { IconButton,Button, makeStyles} from '@material-ui/core'\r\nimport { useParams,Link } from 'react-router-dom';\r\nimport AuthContext from '../context/auth-context'\r\nimport {  KeyboardArrowRight, Mic } from '@material-ui/icons';\r\nimport Recorder from 'recorder-js';\r\nimport Gif from './Gif'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  buttonroot:{\r\n    display:'flex',\r\n    width:'100%',\r\n  },\r\n  startbutton:{\r\n    flex:1,\r\n    color:'blue'\r\n  },\r\n  stopbutton:{\r\n    flex:1,\r\n    color:\"red\"\r\n  },\r\n  donebutton:{\r\n   \r\n    textDecoration:'none'\r\n  },\r\n  \r\n  container:{\r\n    padding:10\r\n  },\r\n  control:{\r\n    margin:10,\r\n    display:\"flex\"\r\n  },\r\n  icon:{\r\n    // flex:1,\r\n  \r\n    backgroundColor:\"#FFFFFF\",\r\n    textAlign:\"center\",\r\n    color:\"#000000\",\r\n    '&:hover':{\r\n      color:\"red\"\r\n    }\r\n  },\r\n\r\n  iconClick:{\r\n    color:\"red\",\r\n    backgroundColor:\"#424242\"\r\n  },\r\n  iconmic:{\r\n    // flex:1,\r\n    textAlign:\"center\",\r\n    color:\"#ff4848\",\r\n    \r\n  },\r\n  gif:{\r\n    flex:1,\r\n    justifyItems:\"contain\",\r\n    margin:14\r\n  },\r\n  iconnext:{\r\n    color:\"lightgreen\"\r\n  }\r\n\r\n}))\r\n\r\n\r\n\r\n\r\nconst UPLOAD_FILE = gql`\r\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\r\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\r\n  }\r\n`\r\n\r\nexport default function Test(){\r\n    const classes = useStyles();\r\n    const auth = useContext(AuthContext)\r\n    const audioContext =  new (window.AudioContext || window.webkitAudioContext)();\r\n    const recorder = new Recorder(audioContext);\r\n        const { room } = useParams()\r\n\r\n      \r\n      const [recording,setRecording] = useState(false)\r\n      const [file,setFile] = useState(null)\r\n\r\n          const[uploadFile] = useMutation(UPLOAD_FILE,{\r\n        onCompleted: data => console.log(data),\r\n      })\r\n\r\n  navigator.mediaDevices.getUserMedia({audio: true})\r\n  .then(stream => recorder.init(stream))\r\n  .catch(err => console.log('Uh oh... unable to get stream...', err));\r\n\r\n\r\n  const startRecording=()=>{\r\n      \r\n\r\n    recorder.start()\r\n      .then(() => setRecording(true));\r\n      console.log(recording)\r\n  }\r\n\r\n  const stopRecording=()=>{\r\n    \r\n    recorder.stop()\r\n      .then(({blob, buffer}) => {\r\n        setRecording(false)\r\n        setFile(blob);\r\n        console.log(recording)\r\n        console.log(blob)\r\n      });\r\n      if(file != null){\r\n        let speaker = auth.userId\r\n        uploadFile({variables:{file:file,roomid:room,speaker:speaker}})\r\n      }\r\n      \r\n  }\r\n \r\n  \r\n\r\n  // if(!recording){\r\n\r\n  return(\r\n             \r\n\r\n        <div className={classes.container}>\r\n          <div className={classes.control}>\r\n          <div className={classes.gif}>\r\n            \r\n          </div>\r\n           \r\n           \r\n            <Button color=\"\" onClick={startRecording}>Record</Button>\r\n            <Button color=\"secondary\" onClick={stopRecording}>Stop</Button>\r\n\r\n\r\n            <IconButton className={classes.iconnext}>\r\n            <Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> \r\n           \r\n              <KeyboardArrowRight/>\r\n            \r\n            </Link>\r\n          </IconButton>\r\n            \r\n\r\n          </div>\r\n        </div>\r\n  )\r\n//           }\r\n\r\n//           else{\r\n//       return(                   \r\n\r\n//         <div className={classes.container}>\r\n//         <div className={classes.control}>\r\n//         <div className={classes.gif}>\r\n//           <Gif/>\r\n//         </div>\r\n         \r\n         \r\n//           <IconButton\r\n//           className={ classes.iconClick} \r\n//           onClick={ stopRecording }>\r\n          \r\n//               <Mic/>\r\n           \r\n//           </IconButton>\r\n//           {/* <Button \r\n//           className={ classes.iconmic\r\n//           } \r\n//           onClick={ stopRecording }>\r\n           \r\n              \r\n           \r\n//           </Button> */}\r\n//           <IconButton className={classes.iconnext} disabled>\r\n//             {/* <Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> */}\r\n           \r\n//               <KeyboardArrowRight/>\r\n            \r\n//             {/* </Link> */}\r\n//           </IconButton>\r\n          \r\n\r\n//         </div>\r\n//       </div>\r\n// )\r\n//           }\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Copyright.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Files.js",["125","126","127","128"],"\r\nimport React from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\n\r\nimport { Icon, IconButton, makeStyles } from '@material-ui/core'\r\nimport { PlayCircleFilledOutlined } from '@material-ui/icons';\r\n\r\nimport Loading from './loading'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      box:{\r\n        display:'block'\r\n      },\r\n      tab:{\r\n       \r\n        listStyleType:\"none\",\r\n        borderRadius:\"10px\",\r\n        backgroundColor:\"#D6D5B3\",\r\n        margin:20,\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\"\r\n      },\r\n      tabhead:{\r\n      paddingLeft:\"40px\",\r\n      paddingTop:\"10px\",\r\n      color:\"#000000\",\r\n      flex:1\r\n      },\r\n      speech:{\r\n        fontSize:\"18px\",\r\n        fontWeight:\"100\",\r\n      },\r\n      container:{\r\n        display:\"flex\"\r\n      },\r\n      icon:{\r\n        color:\"#000000\"\r\n      }\r\n\r\n}))\r\nexport default function FS(){\r\n\r\n  \r\n    \r\n    const classes = useStyles();\r\n    \r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n      pollInterval: 500,\r\n    })\r\n   \r\n    if(loading) return <Loading/>\r\n   \r\n   \r\n\r\n    let audio = []\r\n \r\n      if(data === undefined || err || data === null){\r\n        audio = []\r\n      }\r\n      \r\n      else{\r\n    data.files.map((voice)=>{\r\n        \r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab} >\r\n          <div className={classes.container}>\r\n          <div className={classes.tabhead}>\r\n          <AllGuests params={voice.speaker}/>\r\n          <p className={classes.speech}>{voice.speech}</p>\r\n          </div>\r\n          <div>\r\n            {/* <IconButton className={classes.icon}>\r\n              <Icon>\r\n                <PlayCircleFilledOutlined/>\r\n              </Icon>\r\n            </IconButton> */}\r\n        <audio key={voice._id}  controls>\r\n           <source  src={`http://localhost:4000/audio/${voice.file}`} type=\"audio/wav\"></source>\r\n        </audio>\r\n        </div>\r\n        </div>\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n\r\n\r\n\r\nif(data.files[0] === undefined){\r\n  console.log(data)\r\n  return(<h1>lets start.... </h1>)\r\n}\r\n\r\nelse{\r\n \r\n    return(\r\n     \r\n      <div className={classes.box}>\r\n        <ul>\r\n        {audio}\r\n        </ul>\r\n\r\n      \r\n      </div>\r\n    )\r\n}\r\n    \r\n}\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Deposits.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Gif.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AllUsers.js",["129"],"import React from 'react'\r\nimport {  gql, useQuery } from '@apollo/client'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\nimport { createMuiTheme, Icon, makeStyles, ThemeProvider } from '@material-ui/core'\r\nimport {  FaceSharp } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles({\r\n  container:{\r\n    display:\"flex\",\r\n    overflowY:\"hidden\"\r\n  },\r\n\r\n  avatar:{\r\n    flex:3,\r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:40,\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#5DB7DE\",\r\n    color:\"#000000\"\r\n  },\r\n  orangeAvatar:{\r\n    flex:3,\r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:40,\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#FF7F11\",\r\n    color:\"#000000\"\r\n  },\r\n  purpleAvatar:{\r\n    flex:3,\r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:40,\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#F08080\",\r\n    color:\"#000000\"\r\n  }\r\n});\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n query listGuests($roomId:String){\r\n  \r\n    listGuests(roomId:$roomId)\r\n  \r\n }\r\n`\r\nexport default function FS(){\r\n\r\n    const theme = createMuiTheme({\r\n      palette:{\r\n        type:\"dark\"\r\n      }\r\n    })\r\n\r\n    const classes = useStyles();\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomId:room},\r\n      pollInterval:500,\r\n    })\r\n \r\n    if (loading) return null\r\n\r\n     \r\n    let guestList = []\r\n   \r\n    let classNameHolder = [classes.avatar,classes.orangeAvatar,classes.purpleAvatar]\r\n    if(data){\r\n      data.listGuests.map(guest=>{\r\n        guestList.push(\r\n        <div key={guest} className={classNameHolder[Math.floor(Math.random()*3)]} >\r\n        <Icon>\r\n          <FaceSharp/>\r\n        </Icon>\r\n        <br></br>\r\n        <AllGuests params={guest}/><br></br>\r\n        </div>)\r\n      })\r\n    }\r\n    \r\n\r\n    return(\r\n     <ThemeProvider theme={theme}>\r\n       <h3>Joined Guests</h3>\r\n        <div className={classes.container}>\r\n        {guestList}\r\n         </div>\r\n     </ThemeProvider>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AudioProcess.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":88,"column":5,"nodeType":"136","messageId":"137","endLine":111,"endColumn":6},{"ruleId":"138","severity":1,"message":"139","line":125,"column":27,"nodeType":"140","messageId":"141","endLine":125,"endColumn":29},{"ruleId":"138","severity":1,"message":"139","line":138,"column":34,"nodeType":"140","messageId":"141","endLine":138,"endColumn":36},{"ruleId":"142","severity":1,"message":"143","line":8,"column":31,"nodeType":"144","messageId":"145","endLine":8,"endColumn":34},{"ruleId":"142","severity":1,"message":"146","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":11},{"ruleId":"142","severity":1,"message":"147","line":9,"column":10,"nodeType":"144","messageId":"145","endLine":9,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":9,"column":16,"nodeType":"144","messageId":"145","endLine":9,"endColumn":26},{"ruleId":"142","severity":1,"message":"149","line":10,"column":10,"nodeType":"144","messageId":"145","endLine":10,"endColumn":34},{"ruleId":"138","severity":1,"message":"139","line":83,"column":27,"nodeType":"140","messageId":"141","endLine":83,"endColumn":29},{"ruleId":"138","severity":1,"message":"139","line":83,"column":32,"nodeType":"140","messageId":"141","endLine":83,"endColumn":34},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Mic' is defined but never used.","Identifier","unusedVar","'Gif' is defined but never used.","'Icon' is defined but never used.","'IconButton' is defined but never used.","'PlayCircleFilledOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]