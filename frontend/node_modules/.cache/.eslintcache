[{"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\index.js":"1","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\reportWebVitals.js":"2","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\App.js":"3","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateRoom.js":"4","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateChannel.js":"5","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Home.js":"6","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PodcastPortal.js":"7","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Login.js":"8","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Editor.js":"9","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\InitJoinRoom.js":"10","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\context\\auth-context.js":"11","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Signup.js":"12","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Review.js":"13","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EditFileDiscription.js":"14","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EditorFiles.js":"15","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PodcastRoom.js":"16","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Navbar.js":"17","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EpisodeDisplay.js":"18","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Checkbeforjoining.js":"19","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\loading.js":"20","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AllGuests.js":"21","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Reactmic.js":"22","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Copyright.js":"23","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Files.js":"24","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Deposits.js":"25","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Gif.js":"26","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AllUsers.js":"27","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AudioProcess.js":"28","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\FindEpisode.js":"29","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PageNotFound404.js":"30","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\ShowEpisode.js":"31","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\ChannelInfo.js":"32"},{"size":517,"mtime":1624541343862,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1624541343864,"results":"35","hashOfConfig":"34"},{"size":2733,"mtime":1625480336048,"results":"36","hashOfConfig":"34"},{"size":3545,"mtime":1624541343830,"results":"37","hashOfConfig":"34"},{"size":7730,"mtime":1625480919869,"results":"38","hashOfConfig":"34"},{"size":765,"mtime":1625422281769,"results":"39","hashOfConfig":"34"},{"size":516,"mtime":1624541343846,"results":"40","hashOfConfig":"34"},{"size":4296,"mtime":1625422281772,"results":"41","hashOfConfig":"34"},{"size":4303,"mtime":1625422281763,"results":"42","hashOfConfig":"34"},{"size":4072,"mtime":1625422281771,"results":"43","hashOfConfig":"34"},{"size":343,"mtime":1625422281780,"results":"44","hashOfConfig":"34"},{"size":5610,"mtime":1625422281779,"results":"45","hashOfConfig":"34"},{"size":1971,"mtime":1625422281777,"results":"46","hashOfConfig":"34"},{"size":2524,"mtime":1625422281762,"results":"47","hashOfConfig":"34"},{"size":5823,"mtime":1625422281765,"results":"48","hashOfConfig":"34"},{"size":3819,"mtime":1625422281775,"results":"49","hashOfConfig":"34"},{"size":3536,"mtime":1625481195916,"results":"50","hashOfConfig":"34"},{"size":2847,"mtime":1625468325720,"results":"51","hashOfConfig":"34"},{"size":1146,"mtime":1625422281757,"results":"52","hashOfConfig":"34"},{"size":1415,"mtime":1624541343854,"results":"53","hashOfConfig":"34"},{"size":393,"mtime":1625397235372,"results":"54","hashOfConfig":"34"},{"size":4481,"mtime":1625466513385,"results":"55","hashOfConfig":"34"},{"size":399,"mtime":1624541343827,"results":"56","hashOfConfig":"34"},{"size":2684,"mtime":1625422281767,"results":"57","hashOfConfig":"34"},{"size":2521,"mtime":1625422281760,"results":"58","hashOfConfig":"34"},{"size":525,"mtime":1624541343838,"results":"59","hashOfConfig":"34"},{"size":2201,"mtime":1625422281756,"results":"60","hashOfConfig":"34"},{"size":846,"mtime":1624541343825,"results":"61","hashOfConfig":"34"},{"size":1970,"mtime":1625476633209,"results":"62","hashOfConfig":"34"},{"size":184,"mtime":1625422281774,"results":"63","hashOfConfig":"34"},{"size":2749,"mtime":1625468078875,"results":"64","hashOfConfig":"34"},{"size":2110,"mtime":1625480977542,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ymght2",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\index.js",[],["140","141"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\reportWebVitals.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\App.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateRoom.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\CreateChannel.js",["142","143"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Home.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PodcastPortal.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Login.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Editor.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\InitJoinRoom.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\context\\auth-context.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Signup.js",["144","145","146"],"import {Redirect} from 'react-router-dom'\r\nimport React,{useState} from 'react';\r\nimport {Avatar,Button,CssBaseline,TextField,Link,Grid,\r\n  Typography,makeStyles,ThemeProvider,Container} from '@material-ui/core';\r\nimport {gql,useMutation} from '@apollo/client'\r\nimport {LockOutlined} from '@material-ui/icons';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#000000\",\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#000000\",\r\n    '&:hover': {\r\n        background: \"#424242\",\r\n     },\r\n  },\r\n  submitCreator:{\r\n    backgroundColor:\"#00bcd4\",\r\n    color:\"#000000\",\r\n    '&:hover': {\r\n      \r\n      backgroundColor:\"#4dd0e1\"\r\n   },\r\n  }\r\n}));\r\n\r\nconst UPLOAD_USER = gql`\r\nmutation($username:String,$email:String,$password:String,$isGuest:Boolean){\r\n      Signup(username:$username,email:$email,password:$password,isGuest:$isGuest){\r\n       _id\r\n       username\r\n       email\r\n       isGuest\r\n      }\r\n   }\r\n`\r\nexport default function Userlogin(){\r\n\r\n    \r\n  const[accepted,setAccepted] = React.useState(false)\r\n  const handleChange = ()=>{\r\n    if(accepted) setAccepted(false)\r\n    else setAccepted(true)\r\n  }\r\n    \r\n    const [state, setState] = useState({\r\n    _issubmitted:false\r\n    });\r\n\r\n    const [createUser] = useMutation(UPLOAD_USER,{\r\n      onCompleted:data=>{\r\n      setState({_issubmitted:true})}\r\n      \r\n  })\r\n\r\n    const firstNameRef = React.useRef()\r\n    const lastNameRef = React.useRef()\r\n    const passwordRef = React.useRef()\r\n    const emailRef = React.useRef()\r\n \r\n    const handleSubmit=(e)=>{\r\n       e.preventDefault()\r\n        const firstName = firstNameRef.current.value\r\n        const lastName = lastNameRef.current.value\r\n        const password = passwordRef.current.value\r\n        const email = emailRef.current.value\r\n        const isGuest = !accepted\r\n        if(firstName.trim() === null ||\r\n           lastName.trim()=== null ||\r\n           password.trim() === null ||\r\n           email.trim() === null){\r\n                console.log(\"enter the data\")\r\n           }\r\n        else{\r\n            setState({_issubmitted:true})\r\n         \r\n            createUser({variables:{username:firstName,email:email,password:password,isGuest:isGuest}})\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    //this is all for themes\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n          type: 'light'\r\n        },\r\n      });\r\n  const classes = useStyles();\r\n  \r\n  if(!state._issubmitted){\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n   <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlined />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                inputRef={firstNameRef}\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                \r\n                variant=\"outlined\"\r\n                inputRef={lastNameRef}\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={emailRef}\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                inputRef={passwordRef}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            \r\n            \r\n          </Grid>\r\n        \r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            name=\"submit\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          \r\n          <Grid container justify=\"\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n  }\r\n  else{\r\n    if(state._issubmitted) return <Redirect to='/login'/>\r\n  }\r\n}\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Review.js",["147","148"],"import { Box,makeStyles,Grid } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\nimport {  gql, useMutation,useQuery } from '@apollo/client'\r\nconst useStyles = makeStyles((theme) => ({\r\n    box:{\r\n        padding:10,\r\n        borderRadius:5\r\n    },\r\n    root:{\r\n        display:'flex'\r\n    },\r\n    item:{\r\n        flex:1,\r\n        margin:2,\r\n        padding:5,\r\n\r\n        \r\n    },\r\n\r\n    img:{\r\n        \r\n        width:150,\r\n        height:150\r\n    }\r\n  }));\r\n\r\nconst SHOW_EPISODE = gql`\r\n  query reviewEpisode($EpisodeID:String){\r\n    reviewEpisode(EpisodeID:$EpisodeID){\r\n        EpisodeName\r\n        discription\r\n        audioFile\r\n    }\r\n  }\r\n`\r\nexport default function Review(param){\r\n    console.log(param.param)\r\n    const {loading,err,data} = useQuery(SHOW_EPISODE,{\r\n        variables:{EpisodeID:param.param}\r\n    })\r\n    const classes = useStyles()\r\n    if(loading) return <p>loading</p>\r\n    console.log(data)\r\n    return (\r\n        <Box border={1} className={classes.box}>\r\n            <Grid container className={classes.root}>\r\n                <Grid item className={classes.item}>\r\n                    <div>\r\n                    <img className={classes.img} src={logo} alt=\"pic\"/>\r\n                    </div>\r\n                    <div>\r\n                        <p>participants</p>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item className={classes.item}>\r\n                    <div>\r\n                        <h1>{data.reviewEpisode.EpisodeName}</h1>\r\n                    </div>\r\n                    <div>\r\n                        <p>{data.reviewEpisode.discription}</p>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <audio controls>\r\n                        <source  src={`http://localhost:4000/pythonAudio/${data.reviewEpisode.audioFile}`} type=\"audio/wav\"/>\r\n                    </audio>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EditFileDiscription.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EditorFiles.js",["149","150"],"\r\nimport {gql, useMutation, useQuery} from '@apollo/client';\r\nimport { Button, IconButton, makeStyles, Paper } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport {  useParams } from 'react-router';\r\nimport AllGuests from './AllGuests';\r\nimport {Delete} from '@material-ui/icons'\r\nimport Loading from './loading'\r\n\r\nconst COMBINE = gql`\r\nmutation CombineFiles($list:[String]){\r\n  CombineFiles(list:$list)\r\n   }\r\n`\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    box:{\r\n      display:'block'\r\n    },\r\n    tab:{\r\n      listStyleType:\"none\",\r\n      borderRadius:\"1px\",\r\n      backgroundColor:\"#ede7f6\",\r\n      marginTop:1,\r\n      marginLeft:5,\r\n      // fontWeight:\"bold\",\r\n      fontSize:\"15px\",\r\n      cursor:\"pointer\",\r\n      width:\"90%\" \r\n    },\r\n    tabhead:{\r\n    paddingLeft:\"10px\",\r\n    paddingTop:\"10px\",\r\n    display:\"flex\"\r\n    },\r\n    speech:{\r\n      fontSize:\"15px\",\r\n      fontWeight:\"100\",\r\n      marginLeft:1\r\n    },\r\n    ul:{\r\n        width:\"100%\"\r\n    },\r\n    subdiv:{\r\n        flex:1\r\n    },\r\n    icon:{\r\n        \r\n        cursor:\"pointer\",\r\n        '&:hover':{\r\n            color:\"red\"\r\n        }\r\n    },\r\n    paperextra:{\r\n      overflow:'auto',\r\n      height: 300,\r\n     \r\n    },\r\n    button:{\r\n     \r\n      padding:5,\r\n      margin:5,\r\n    \r\n    },\r\n    small:{\r\n      fontSize:10\r\n    }\r\n\r\n}))\r\n\r\n\r\n\r\nfunction App( props ) {\r\n \r\n  \r\n  const classes = useStyles();\r\n  const [list,setList] = useState([])\r\n  const [check,setCheck] = useState(0)\r\n  const [combined,setCombined] =useState(false)\r\n  const [file,setFile]=useState('')\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) return;\r\n\r\n    const items = list\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setList(items)\r\n  }\r\n\r\n  const { room } = useParams()\r\n    \r\n    const{ loading,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n    //   pollInterval: 500,\r\n    })\r\n\r\n    const [combine] = useMutation(COMBINE,{\r\n      onCompleted:(data)=>{\r\n        props.parentCallback(data)\r\n        setCombined(true)\r\n        setFile(data)\r\n\r\n      }\r\n    })\r\n\r\n    let audioList =[]\r\n    if(loading) return <Loading/>\r\n    if(data){\r\n    \r\n    data.files.map((audio)=>{\r\n        audioList.push({_id:audio._id,speaker:audio.speaker,file:audio.file,apeech:audio.speech})\r\n    })\r\n    \r\n    }\r\n    const handleRemove=(id)=>{\r\n      const newList = list.filter((list) => list._id !== id);\r\n      console.log(list)\r\n      setList(newList);\r\n    }\r\n \r\n    const handleLoad=()=>{\r\n      let temp =[]\r\n      data.files.map((item,index)=>{\r\n        temp.push(item)\r\n        setList(temp)\r\n      })\r\n      \r\n      if(list === []){\r\n        console.log(list)\r\n      }\r\n      else{\r\n        setCheck(true)\r\n      }\r\n      \r\n    }\r\n    const combineFunction=(e)=>{\r\n      let temp=[]\r\n      let audio = list\r\n      audio.forEach((item)=>{temp.push(item.file)})\r\n      \r\n      combine({variables:{list:temp}})\r\n      \r\n      \r\n    }\r\n\r\n    if(!check){\r\n      return( <div>\r\n         <Button onClick={handleLoad}>Load</Button>\r\n       </div>)\r\n     }\r\n     else{\r\n\r\n      if(!combined){\r\n\r\n  return (\r\n    <Paper elevation={0} >\r\n\r\n    <Paper className={classes.paperextra} elevation={0}>\r\n    <div className=\"App\">\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          <Droppable droppableId=\"characters\">\r\n            {(provided) => (\r\n              <ul className={classes.ul} {...provided.droppableProps} ref={provided.innerRef}>\r\n                {list.map(({_id, speaker,speech,file}, index) => {\r\n                  return (\r\n                    <Draggable  key={_id} draggableId={_id} index={index}>\r\n                      {(provided) => (\r\n                        <li className={classes.tab} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <div className={classes.tabhead}>\r\n                              <div className={classes.subdiv}>\r\n                          <AllGuests params={speaker}/>\r\n                       \r\n                          {/* </div>\r\n                         \r\n                          <div className={classes.speech}> */}\r\n                            {/* <AllGuests params={voice.speaker}/> */}\r\n                             \r\n                            <p >{speech}</p>\r\n                            \r\n                            </div>\r\n                            <div className={classes.icon}>\r\n                              <IconButton onClick={()=>handleRemove(_id)}>\r\n                                  <Delete/>\r\n                              </IconButton>\r\n                          </div>\r\n                           \r\n                          </div>\r\n                          \r\n                          \r\n                         \r\n                        </li>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n\r\n        </DragDropContext>\r\n        \r\n      \r\n    </div>\r\n   </Paper>\r\n   <Button onClick={combineFunction}  variant=\"contained\" color=\"secondary\">combine</Button>\r\n    </Paper>\r\n  )\r\n  }\r\n  \r\n  else{\r\n    \r\n     return(<div className={classes.tab}>\r\n        <div className={classes.tabhead}>{file.CombineFiles}</div>\r\n        <p classesName={classes.small}>your file is combined and now ready to add in episodes</p>\r\n      </div>)\r\n  }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PodcastRoom.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Navbar.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\EpisodeDisplay.js",["151","152","153"],"\r\nimport {gql, useMutation, useQuery} from '@apollo/client';\r\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\nimport {useContext} from 'react'\r\nimport AuthContext from '../context/auth-context'\r\nimport FindEpisode from './FindEpisode'\r\nimport React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShowEpisode from './ShowEpisode'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin:20,\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n      },\r\n      text:{\r\n        padding:40,\r\n        color:\"#ffffff\"\r\n      },\r\n       backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#ffffff',\r\n\r\n  },\r\n}))\r\n\r\n\r\nconst EPISODEDISPLAY = gql`\r\n  query displayEpisode ($userId:String){\r\n      displayEpisode(userId:$userId)\r\n  }\r\n`\r\n\r\nconst GET_EPISODE = gql`\r\n   query reviewEpisode($EpisodeID:String){\r\n    reviewEpisode(EpisodeID:$EpisodeID){\r\n        EpisodeName\r\n        discription\r\n        audioFile\r\n    }\r\n  }\r\n`\r\n\r\nexport default function EpisodeDisplay(){\r\n    const classes = useStyles()\r\n    const auth = useContext(AuthContext)\r\n    const theme = createMuiTheme({\r\n      palette:{\r\n        type:\"dark\"\r\n      }\r\n    })\r\n\r\n    const{ loading,data} = useQuery(EPISODEDISPLAY,{\r\n      variables: {userId:auth.userId},\r\n    //   pollInterval: 500,\r\n    })\r\n\r\n      const [open, setOpen] = React.useState(false);\r\n      const [id,setID] = React.useState(null);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = (data) => {\r\n    setID(data);\r\n    setOpen(!open);\r\n  };\r\n\r\n\r\n\r\n   if(loading) return <CircularProgress/>\r\n   \r\n    if(data){\r\n    \r\n    \r\n    return(\r\n      <ThemeProvider theme={theme}>\r\n\r\n      \r\n\r\n      <Grid container spacing={3}>\r\n       { data.displayEpisode.map(data=>{\r\n\r\n      return (<Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <Paper className={classes.paper}>\r\n        <FindEpisode param={data}/>\r\n         <Button variant=\"outlined\" color=\"#ffffff\" value={data} onClick={()=>{handleToggle(data)}}>\r\n        Episode Detail\r\n      </Button>\r\n        </Paper>\r\n        </Grid>\r\n        )\r\n    })}\r\n\r\n    </Grid>\r\n     <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n\r\n        {id!==null?<ShowEpisode param={id}/>:<p/>}\r\n\r\n      </Backdrop>\r\n    </ThemeProvider>\r\n    )\r\n  }\r\n\r\n  else{\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <h1 className={classes.text}>Hmm... Seems Like You have not created any Episode Yet !</h1>\r\n      <h1 className={classes.text}>Be a Creator to share your idea</h1>\r\n      </ThemeProvider>)\r\n  }\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Checkbeforjoining.js",["154"],"\r\nimport { useContext,useEffect } from 'react'\r\nimport AuthContext from '../context/auth-context'\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport { Redirect } from 'react-router'\r\n\r\nconst ADD_GUEST = gql`\r\nmutation ($guestid:String,$roomid:String){\r\n  addToRoom(guestid:$guestid,roomid:$roomid)\r\n}\r\n`\r\n\r\nexport default function Checkbeforjoining(param){\r\n   \r\n    const auth = useContext(AuthContext)\r\n    \r\n    let info ={\r\n        room:param.roomid,\r\n        userid:auth.userId\r\n    }\r\n\r\n    const [addUser,{loading,data}] = useMutation(ADD_GUEST,{\r\n\r\n        onCompleted:(data)=>{\r\n            console.log(data)\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error)\r\n        },\r\n    })\r\n\r\n\r\n    useEffect(()=>{\r\n        addUser({variables:{guestid:info.userid,roomid:info.room}})\r\n    })\r\n\r\n    // const handle =(info)=>{\r\n        \r\n    // }\r\n\r\n    // handle(info) \r\n    \r\n   \r\n    \r\n    // if(loading || data===null){\r\n    //     console.log(data)\r\n    //  return <p>loading.........</p>\r\n    // }\r\n    \r\n    if(loading) return <p>loading</p>\r\n        return(<Redirect to={`roomID=${info.room}`}/>)\r\n\r\n    \r\n    \r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\loading.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AllGuests.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Reactmic.js",["155","156"],"\r\nimport React, { useContext,useState } from 'react' \r\n\r\nimport {gql, useMutation} from '@apollo/client';\r\nimport { IconButton,Button, makeStyles} from '@material-ui/core'\r\nimport { useParams,Link } from 'react-router-dom';\r\nimport AuthContext from '../context/auth-context'\r\nimport {  KeyboardArrowRight, Mic } from '@material-ui/icons';\r\nimport Recorder from 'recorder-js';\r\nimport Gif from './Gif'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  buttonroot:{\r\n    display:'flex',\r\n    width:'100%',\r\n  },\r\n  startbutton:{\r\n    flex:1,\r\n    color:'blue'\r\n  },\r\n  stopbutton:{\r\n    flex:1,\r\n    color:\"red\"\r\n  },\r\n  donebutton:{\r\n   \r\n    textDecoration:'none'\r\n  },\r\n  \r\n  container:{\r\n    padding:10\r\n  },\r\n  control:{\r\n    margin:10,\r\n    display:\"flex\"\r\n  },\r\n  icon:{\r\n    // flex:1,\r\n  \r\n    backgroundColor:\"#FFFFFF\",\r\n    textAlign:\"center\",\r\n    color:\"#000000\",\r\n    '&:hover':{\r\n      color:\"red\"\r\n    }\r\n  },\r\n\r\n  iconClick:{\r\n    color:\"red\",\r\n    backgroundColor:\"#424242\"\r\n  },\r\n  iconmic:{\r\n    // flex:1,\r\n    textAlign:\"center\",\r\n    color:\"#ff4848\",\r\n    \r\n  },\r\n  gif:{\r\n    flex:1,\r\n    justifyItems:\"contain\",\r\n    margin:14\r\n  },\r\n  iconnext:{\r\n    color:\"lightgreen\"\r\n  },\r\n  donebutton:{\r\n    color:\"#ffffff\",\r\n    justifyItems:\"center\"\r\n  }\r\n\r\n}))\r\n\r\n\r\n\r\n\r\nconst UPLOAD_FILE = gql`\r\n  mutation UploadFile($file:Upload!,$roomid:String,$speaker:String){\r\n      UploadFile(file:$file,roomid:$roomid,speaker:$speaker)\r\n  }\r\n`\r\n\r\nexport default function Test(param){\r\n    const classes = useStyles();\r\n    const auth = useContext(AuthContext)\r\n    const audioContext =  new (window.AudioContext || window.webkitAudioContext)();\r\n    const recorder = new Recorder(audioContext);\r\n        const { room } = useParams()\r\nconsole.log(param)\r\n      \r\n      const [recording,setRecording] = useState(false)\r\n      const [file,setFile] = useState(null)\r\n\r\n          const[uploadFile] = useMutation(UPLOAD_FILE,{\r\n        onCompleted: data => console.log(data),\r\n      })\r\n\r\n  navigator.mediaDevices.getUserMedia({audio: true})\r\n  .then(stream => recorder.init(stream))\r\n  .catch(err => console.log('Uh oh... unable to get stream...', err));\r\n\r\n\r\n  const startRecording=()=>{\r\n      \r\n\r\n    recorder.start()\r\n      .then(() => setRecording(true));\r\n      console.log(recording)\r\n  }\r\n\r\n  const stopRecording=()=>{\r\n    \r\n    recorder.stop()\r\n      .then(({blob, buffer}) => {\r\n        setRecording(false)\r\n        setFile(blob);\r\n        console.log(recording)\r\n        console.log(blob)\r\n      });\r\n      if(file != null){\r\n        let speaker = auth.userId\r\n        uploadFile({variables:{file:file,roomid:room,speaker:speaker}})\r\n      }\r\n      \r\n  }\r\n \r\n  \r\n\r\n  // if(!recording){\r\n\r\n  return(\r\n             \r\n\r\n        <div className={classes.container}>\r\n          <div className={classes.control}>\r\n          <div className={classes.gif}>\r\n            {recording?<Gif/>:<p/>}\r\n          </div>\r\n           \r\n           \r\n            <Button color=\"\" onClick={startRecording}>Record</Button>\r\n            <Button color=\"secondary\" onClick={stopRecording}>Stop</Button>\r\n\r\n\r\n           \r\n\r\n            {(param.creator === auth.userId)? <IconButton className={classes.iconnext}><Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> <KeyboardArrowRight/>\r\n            \r\n            </Link></IconButton> :<p/> }\r\n            \r\n           \r\n             \r\n         \r\n            \r\n\r\n          </div>\r\n        </div>\r\n  )\r\n//           }\r\n\r\n//           else{\r\n//       return(                   \r\n\r\n//         <div className={classes.container}>\r\n//         <div className={classes.control}>\r\n//         <div className={classes.gif}>\r\n//           <Gif/>\r\n//         </div>\r\n         \r\n         \r\n//           <IconButton\r\n//           className={ classes.iconClick} \r\n//           onClick={ stopRecording }>\r\n          \r\n//               <Mic/>\r\n           \r\n//           </IconButton>\r\n//           {/* <Button \r\n//           className={ classes.iconmic\r\n//           } \r\n//           onClick={ stopRecording }>\r\n           \r\n              \r\n           \r\n//           </Button> */}\r\n//           <IconButton className={classes.iconnext} disabled>\r\n//             {/* <Link className={classes.donebutton} to={`roomID=${room}/editpodcast`}> */}\r\n           \r\n//               <KeyboardArrowRight/>\r\n            \r\n//             {/* </Link> */}\r\n//           </IconButton>\r\n          \r\n\r\n//         </div>\r\n//       </div>\r\n// )\r\n//           }\r\n}","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Copyright.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Files.js",["157","158","159","160","161"],"\r\nimport React from 'react'\r\n\r\nimport {  gql, useQuery } from '@apollo/client'\r\n\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\n\r\nimport { Icon, IconButton, makeStyles,LinearProgress } from '@material-ui/core'\r\nimport { PlayCircleFilledOutlined } from '@material-ui/icons';\r\n\r\nimport Loading from './loading'\r\n\r\nconst SHOW_FILE = gql`\r\n  query file ($roomid:String){\r\n      files(roomid:$roomid){\r\n        _id\r\n        speaker\r\n        file\r\n        speech\r\n      }\r\n  }\r\n`\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      box:{\r\n        display:'block'\r\n      },\r\n      tab:{\r\n       \r\n        listStyleType:\"none\",\r\n        borderRadius:\"10px\",\r\n        backgroundColor:\"#D6D5B3\",\r\n        margin:20,\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\"\r\n      },\r\n      tabhead:{\r\n      paddingLeft:20,\r\n      paddingTop:\"10px\",\r\n      color:\"#000000\",\r\n      \r\n      },\r\n      speech:{\r\n        fontSize:\"18px\",\r\n        fontWeight:\"100\",\r\n        paddingLeft:20,\r\n        paddingRight:20\r\n      },\r\n      container:{\r\n        // display:\"flex\",\r\n        color:\"#000000\",\r\n\r\n      },\r\n      icon:{\r\n        color:\"#000000\"\r\n      }\r\n\r\n}))\r\nexport default function FS(){\r\n\r\n  \r\n    \r\n    const classes = useStyles();\r\n    \r\n\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,err,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomid:room},\r\n      pollInterval: 500,\r\n    })\r\n   \r\n    if(loading) return <Loading/>\r\n   \r\n   \r\n\r\n    let audio = []\r\n \r\n      if(data === undefined || err || data === null){\r\n        audio = []\r\n      }\r\n      \r\n      else{\r\n    data.files.map((voice)=>{\r\n        \r\n        audio.push(\r\n        <li key={voice._id} className={classes.tab} >\r\n          <div className={classes.container}>\r\n          <div className={classes.tabhead}>\r\n          <AllGuests params={voice.speaker}/>\r\n          </div>\r\n          <p className={classes.speech}>{voice.speech}</p>\r\n          </div>\r\n          <div>\r\n            {/* <IconButton className={classes.icon}>\r\n              <Icon>\r\n                <PlayCircleFilledOutlined/>\r\n              </Icon>\r\n            </IconButton> */}\r\n        <audio key={voice._id}  controls>\r\n           <source  src={`http://localhost:4000/audio/${voice.file}`} type=\"audio/wav\"></source>\r\n        </audio>\r\n        {/*</div>*/}\r\n        </div>\r\n        </li>\r\n        )\r\n        }\r\n       \r\n    )\r\n      }\r\n    \r\n\r\n\r\n\r\n\r\nif(data.files[0] === undefined){\r\n  console.log(data)\r\n  return(<h1>lets start.... </h1>)\r\n}\r\n\r\nelse{\r\n \r\n    return(\r\n     \r\n      <div className={classes.box}>\r\n        <ul>\r\n        {audio}\r\n        </ul>\r\n\r\n      \r\n      </div>\r\n    )\r\n}\r\n    \r\n}\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Deposits.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\Gif.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AllUsers.js",["162","163"],"import React from 'react'\r\nimport {  gql, useQuery } from '@apollo/client'\r\nimport { useParams } from 'react-router'\r\nimport AllGuests from './AllGuests'\r\nimport { createMuiTheme, Icon, makeStyles, ThemeProvider, Grid } from '@material-ui/core'\r\nimport {  FaceSharp } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles({\r\n  container:{\r\n    \r\n\r\n    overflowY:\"hidden\"\r\n  },\r\n\r\n  avatar:{\r\n    width:100,\r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:\"100%\",\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#5DB7DE\",\r\n    color:\"#000000\"\r\n  },\r\n  orangeAvatar:{\r\n   \r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:\"100%\",\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#FF7F11\",\r\n    color:\"#000000\"\r\n  },\r\n  purpleAvatar:{\r\n   \r\n    fontSize:\"20px\",\r\n    textAlign:\"center\",\r\n    margin:4,\r\n    padding:4,\r\n    width:\"100%\",\r\n    height:70,\r\n    borderRadius:10,\r\n    backgroundColor:\"#F08080\",\r\n    color:\"#000000\"\r\n  },\r\n \r\n});\r\n\r\n\r\nconst SHOW_FILE = gql`\r\n query listGuests($roomId:String){\r\n  \r\n    listGuests(roomId:$roomId)\r\n  \r\n }\r\n`\r\nexport default function FS(){\r\n\r\n    const theme = createMuiTheme({\r\n      palette:{\r\n        type:\"dark\"\r\n      }\r\n    })\r\n\r\n    const classes = useStyles();\r\n    const { room } = useParams()\r\n    \r\n    const{ loading,data} = useQuery(SHOW_FILE,{\r\n      variables: {roomId:room},\r\n      pollInterval:500,\r\n    })\r\n \r\n    if (loading) return null\r\n\r\n     \r\n    let guestList = []\r\n   \r\n    let classNameHolder = [classes.avatar,classes.orangeAvatar,classes.purpleAvatar]\r\n    if(data){\r\n      data.listGuests.map(guest=>{\r\n        guestList.push(\r\n      <Grid item xs={6}>\r\n        <div key={guest} className={classNameHolder[Math.floor(Math.random()*3)]} >\r\n        <Icon>\r\n          <FaceSharp/>\r\n        </Icon>\r\n        <br></br>\r\n        <AllGuests params={guest}/><br></br>\r\n        </div>\r\n      </Grid>\r\n      )\r\n      })\r\n    }\r\n    \r\n\r\n    return(\r\n     <ThemeProvider theme={theme}>\r\n       <h3>Joined Guests</h3>\r\n        <Grid container spacing={3}>\r\n        {guestList}\r\n         </Grid>\r\n     </ThemeProvider>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\AudioProcess.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\FindEpisode.js",["164","165","166","167","168","169","170"],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\PageNotFound404.js",[],"D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\ShowEpisode.js",["171","172","173","174","175","176"],"\r\nimport {gql, useMutation, useQuery} from '@apollo/client';\r\nimport {useContext} from 'react'\r\nimport { createMuiTheme, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core'\r\nimport logo from '../logo.svg'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin:20,\r\n        width:\"60%\",\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n      },\r\n\r\n    image:{\r\n      width:\"100%\",\r\n      height:\"100%\"\r\n    },\r\n    header:{\r\n      fontWeight:\"bold\"\r\n    },\r\n    discription:{\r\n      fontSize:\"12\"\r\n    },\r\n    container:{\r\n      width:\"100%\",\r\n      height:\"100%\",\r\n      display:\"flex\",\r\n      \r\n\r\n    },\r\n    box:{\r\n      flex:1,\r\n      padding:10\r\n    },\r\n    imgbox:{\r\n      flex:2,\r\n      padding:10\r\n    },\r\n    audio:{\r\n      width:\"100%\"\r\n    }\r\n}))\r\n\r\nconst GET_EPISODE = gql`\r\n   query reviewEpisode($EpisodeID:String){\r\n    reviewEpisode(EpisodeID:$EpisodeID){\r\n        EpisodeName\r\n        discription\r\n        audioFile\r\n        img\r\n        \r\n    }\r\n  }\r\n`\r\n\r\nexport default function ShowEpisode(param){\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n   const{ loading,data} = useQuery(GET_EPISODE,{\r\n      variables: {EpisodeID:param.param},\r\n    //   pollInterval: 500,\r\n    })\r\n   if(loading)return <p>loading..</p>\r\n\r\n   \r\n  if(data){\r\n     console.log(`http://localhost:4000/pythonAudio/${data.reviewEpisode.audioFile}`)\r\n  return (\r\n\r\n          \r\n        \r\n            <React.Fragment>\r\n            <Paper className={classes.paper}>\r\n            <div className={classes.container}>\r\n\r\n            <div className={classes.imgbox}>\r\n            <img className={classes.image} src={`http://localhost:4000/images/${data.reviewEpisode.img}`} alt=\"pic\"/>\r\n            </div>\r\n            <div className={classes.box}>\r\n            <h1>{data.reviewEpisode.EpisodeName}</h1>\r\n            <h3>{data.reviewEpisode.discription}</h3>\r\n            <audio controls className={classes.audio}>\r\n              {data.reviewEpisode.audioFile}\r\n              <source src={`http://localhost:4000/pythonAudio/${data.reviewEpisode.audioFile}`} type=\"audio/wav\"></source>\r\n              \r\n            </audio>\r\n            </div>\r\n            </div>\r\n            </Paper>\r\n            </React.Fragment>\r\n  \r\n          \r\n          \r\n     \r\n      )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n // <Paper className={classes.paper}>\r\n           \r\n //            <img className={classes.image} src={`http://localhost:4000/images/${data.reviewEpisode.img}`} alt=\"pic\"/>\r\n //            <p classesName={classes.header}>{data.reviewEpisode.EpisodeName}</p>\r\n //            <p classesName={classes.discription}>{data.reviewEpisode.discription}</p>\r\n            \r\n //            </Paper>","D:\\ProjectFolder\\Podcast Builder\\frontend\\src\\components\\ChannelInfo.js",["177","178","179"],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":12,"column":28,"nodeType":"186","messageId":"187","endLine":12,"endColumn":36},{"ruleId":"188","severity":1,"message":"189","line":105,"column":5,"nodeType":"190","messageId":"191","endLine":128,"endColumn":6},{"ruleId":"184","severity":1,"message":"192","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":18},{"ruleId":"184","severity":1,"message":"193","line":8,"column":20,"nodeType":"186","messageId":"187","endLine":8,"endColumn":36},{"ruleId":"184","severity":1,"message":"194","line":63,"column":9,"nodeType":"186","messageId":"187","endLine":63,"endColumn":21},{"ruleId":"184","severity":1,"message":"195","line":3,"column":16,"nodeType":"186","messageId":"187","endLine":3,"endColumn":27},{"ruleId":"184","severity":1,"message":"196","line":38,"column":20,"nodeType":"186","messageId":"187","endLine":38,"endColumn":23},{"ruleId":"197","severity":1,"message":"198","line":125,"column":27,"nodeType":"199","messageId":"200","endLine":125,"endColumn":29},{"ruleId":"197","severity":1,"message":"198","line":138,"column":34,"nodeType":"199","messageId":"200","endLine":138,"endColumn":36},{"ruleId":"184","severity":1,"message":"195","line":2,"column":14,"nodeType":"186","messageId":"187","endLine":2,"endColumn":25},{"ruleId":"184","severity":1,"message":"201","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":12},{"ruleId":"184","severity":1,"message":"202","line":40,"column":7,"nodeType":"186","messageId":"187","endLine":40,"endColumn":18},{"ruleId":"184","severity":1,"message":"203","line":22,"column":29,"nodeType":"186","messageId":"187","endLine":22,"endColumn":33},{"ruleId":"184","severity":1,"message":"204","line":8,"column":31,"nodeType":"186","messageId":"187","endLine":8,"endColumn":34},{"ruleId":"205","severity":1,"message":"206","line":68,"column":3,"nodeType":"207","messageId":"208","endLine":68,"endColumn":13},{"ruleId":"184","severity":1,"message":"209","line":9,"column":10,"nodeType":"186","messageId":"187","endLine":9,"endColumn":14},{"ruleId":"184","severity":1,"message":"210","line":9,"column":16,"nodeType":"186","messageId":"187","endLine":9,"endColumn":26},{"ruleId":"184","severity":1,"message":"211","line":9,"column":39,"nodeType":"186","messageId":"187","endLine":9,"endColumn":53},{"ruleId":"184","severity":1,"message":"212","line":10,"column":10,"nodeType":"186","messageId":"187","endLine":10,"endColumn":34},{"ruleId":"197","severity":1,"message":"198","line":87,"column":27,"nodeType":"199","messageId":"200","endLine":87,"endColumn":29},{"ruleId":"205","severity":1,"message":"213","line":21,"column":5,"nodeType":"207","messageId":"208","endLine":21,"endColumn":10},{"ruleId":"197","severity":1,"message":"198","line":85,"column":32,"nodeType":"199","messageId":"200","endLine":85,"endColumn":34},{"ruleId":"184","severity":1,"message":"195","line":2,"column":14,"nodeType":"186","messageId":"187","endLine":2,"endColumn":25},{"ruleId":"184","severity":1,"message":"214","line":3,"column":9,"nodeType":"186","messageId":"187","endLine":3,"endColumn":19},{"ruleId":"184","severity":1,"message":"215","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":24},{"ruleId":"184","severity":1,"message":"216","line":4,"column":26,"nodeType":"186","messageId":"187","endLine":4,"endColumn":30},{"ruleId":"184","severity":1,"message":"217","line":4,"column":44,"nodeType":"186","messageId":"187","endLine":4,"endColumn":49},{"ruleId":"184","severity":1,"message":"218","line":4,"column":51,"nodeType":"186","messageId":"187","endLine":4,"endColumn":64},{"ruleId":"184","severity":1,"message":"201","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":12},{"ruleId":"184","severity":1,"message":"195","line":2,"column":14,"nodeType":"186","messageId":"187","endLine":2,"endColumn":25},{"ruleId":"184","severity":1,"message":"214","line":3,"column":9,"nodeType":"186","messageId":"187","endLine":3,"endColumn":19},{"ruleId":"184","severity":1,"message":"215","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":24},{"ruleId":"184","severity":1,"message":"216","line":4,"column":26,"nodeType":"186","messageId":"187","endLine":4,"endColumn":30},{"ruleId":"184","severity":1,"message":"218","line":4,"column":51,"nodeType":"186","messageId":"187","endLine":4,"endColumn":64},{"ruleId":"184","severity":1,"message":"201","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":12},{"ruleId":"184","severity":1,"message":"201","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":12},{"ruleId":"184","severity":1,"message":"196","line":51,"column":18,"nodeType":"186","messageId":"187","endLine":51,"endColumn":21},{"ruleId":"219","severity":1,"message":"220","line":66,"column":5,"nodeType":"221","endLine":66,"endColumn":105},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'handleChange' is assigned a value but never used.","'useMutation' is defined but never used.","'err' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'logo' is defined but never used.","'GET_EPISODE' is assigned a value but never used.","'data' is assigned a value but never used.","'Mic' is defined but never used.","no-dupe-keys","Duplicate key 'donebutton'.","ObjectExpression","unexpected","'Icon' is defined but never used.","'IconButton' is defined but never used.","'LinearProgress' is defined but never used.","'PlayCircleFilledOutlined' is defined but never used.","Duplicate key 'width'.","'useContext' is defined but never used.","'createMuiTheme' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'ThemeProvider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]